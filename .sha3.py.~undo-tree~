(undo-tree-save-format-version . 1)
"c8cf4dd7125af9dfa3f4dd49a7748652cb046191"
[nil nil nil nil (26711 43513 740788 954000) 0 nil]
([nil nil ((1 . 22) (t . -1)) nil (26711 43513 740788 392000) 0 nil])
([nil nil ((22 . 43)) nil (26711 43513 740787 987000) 0 nil])
([nil nil ((43 . 45)) nil (26711 43513 740787 663000) 0 nil])
([nil nil ((45 . 46)) nil (26711 43513 740787 351000) 0 nil])
([nil nil ((46 . 55)) nil (26711 43513 740786 842000) 0 nil])
([nil nil ((55 . 76)) nil (26711 43513 740786 534000) 0 nil])
([nil nil ((76 . 78)) nil (26711 43513 740786 13000) 0 nil])
([nil nil ((78 . 80)) nil (26711 43513 740785 272000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -77) (undo-tree-id25 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -78) (undo-tree-id26 . -1) 79) nil (26711 43513 740784 610000) 0 nil])
([nil nil ((77 . 78)) nil (26711 43513 740782 879000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -77) (undo-tree-id24 . -1) 78) nil (26711 43513 740782 323000) 0 nil])
([nil nil ((77 . 78)) nil (26711 43513 740772 446000) 0 nil])
([nil nil ((57 . 59)) nil (26711 43513 740772 105000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -58) (undo-tree-id23 . -1) 59) nil (26711 43513 740771 459000) 0 nil])
([nil nil ((58 . 63)) nil (26711 43513 740770 605000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -62) (undo-tree-id22 . -1) 63) nil (26711 43513 740770 162000) 0 nil])
([nil nil ((62 . 68)) nil (26711 43513 740769 59000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -88) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 89) nil (26711 43513 740768 131000) 0 nil])
([nil nil ((88 . 89)) nil (26711 43513 740764 608000) 0 nil])
([nil nil ((89 . 94)) nil (26711 43513 740764 275000) 0 nil])
([nil nil ((94 . 115)) nil (26711 43513 740763 805000) 0 nil])
([nil nil ((115 . 119)) nil (26711 43513 740763 245000) 0 nil])
([nil nil ((#("Lic" 0 3 (face font-lock-comment-face fontified t)) . -116) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) 119) nil (26711 43513 740761 134000) 0 nil])
([nil nil ((116 . 124)) nil (26711 43513 740419 526000) 0 nil])
([nil nil ((124 . 126)) nil (26711 43513 740413 346000) 0 nil])
([nil nil ((126 . 133) (t 26711 43513 741976 54000)) nil (26711 43716 92375 126000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -131) (undo-tree-id43 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -132) (undo-tree-id44 . -1) 133) nil (26711 43716 92374 219000) 0 nil])
([nil nil ((131 . 136)) nil (26711 43716 92372 743000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -135) (undo-tree-id42 . -1) 136) nil (26711 43716 92372 144000) 0 nil])
([nil nil ((#("state" 0 5 (face font-lock-function-name-face fontified t)) . -130) (undo-tree-id41 . -5) 135) nil (26711 43716 92371 33000) 0 nil])
([nil nil ((130 . 136)) nil (26711 43716 92370 98000) 0 nil])
([nil nil ((#("genera" 0 6 (face font-lock-function-name-face fontified t)) . -130) (undo-tree-id40 . -6) 136) nil (26711 43716 92369 595000) 0 nil])
([nil nil ((130 . 145)) nil (26711 43716 92368 682000) 0 nil])
([nil nil ((125 . 126)) nil (26711 43716 92368 206000) 0 nil])
([nil nil ((126 . 129)) nil (26711 43716 92367 612000) 0 nil])
([nil nil ((129 . 139)) nil (26711 43716 92367 259000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-comment-face fontified t)) . -137) (undo-tree-id38 . -1) (#("[" 0 1 (face font-lock-comment-face fontified t)) . -138) (undo-tree-id39 . -1) 139) nil (26711 43716 92366 562000) 0 nil])
([nil nil ((137 . 143)) nil (26711 43716 92365 124000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -140) (undo-tree-id35 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -141) (undo-tree-id36 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -142) (undo-tree-id37 . -1) 143) nil (26711 43716 92364 399000) 0 nil])
([nil nil ((140 . 144)) nil (26711 43716 92362 248000) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-comment-face fontified t)) . -140) (undo-tree-id31 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -141) (undo-tree-id32 . -1) (#("x" 0 1 (face font-lock-comment-face fontified t)) . -142) (undo-tree-id33 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -143) (undo-tree-id34 . -1) 144) nil (26711 43716 92361 132000) 0 nil])
([nil nil ((140 . 141)) nil (26711 43716 92356 449000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -140) (undo-tree-id30 . -1) 141) nil (26711 43716 92355 697000) 0 nil])
([nil nil ((140 . 151)) nil (26711 43716 92354 454000) 0 nil])
([nil nil ((151 . 156)) nil (26711 43716 92354 12000) 0 nil])
([nil nil ((125 . 126)) nil (26711 43716 92353 751000) 0 nil])
([nil nil ((126 . 127)) nil (26711 43716 92353 470000) 0 nil])
([nil nil ((126 . 144)) nil (26711 43716 92352 955000) 0 nil])
([nil nil ((#("np" 0 2 (fontified t)) . -142) (undo-tree-id29 . -2) 144) nil (26711 43716 92351 936000) 0 nil])
([nil nil ((#("as " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -139) (undo-tree-id28 . -3) 142) nil (26711 43716 92350 961000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -138) (undo-tree-id27 . -1) 139) nil (26711 43716 92349 562000) 0 nil])
([nil nil ((138 . 139)) nil (26711 43716 92341 338000) 0 nil])
([nil nil ((139 . 152)) nil (26711 43716 92337 488000) 0 nil])
([nil nil ((184 . 186) (t 26711 43716 104524 519000)) nil (26711 43941 831750 931000) 0 nil])
([nil nil ((186 . 187)) nil (26711 43941 831750 243000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id164 . -1) 187) nil (26711 43941 831749 631000) 0 nil])
([nil nil ((186 . 189)) nil (26711 43941 831748 700000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id161 . -1) (#("," 0 1 (face font-lock-comment-face fontified t)) . -187) (undo-tree-id162 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -188) (undo-tree-id163 . -1) 189) nil (26711 43941 831747 668000) 0 nil])
([nil nil ((186 . 187)) nil (26711 43941 831745 765000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id160 . -1) 187) nil (26711 43941 831745 45000) 0 nil])
([nil nil ((186 . 189)) nil (26711 43941 831743 731000) 0 nil])
([nil nil ((#("The" 0 3 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id159 . -3) 189) nil (26711 43941 831743 32000) 0 nil])
([nil nil ((186 . 192)) nil (26711 43941 831740 581000) 0 nil])
([nil nil ((192 . 194)) nil (26711 43941 831739 817000) 0 nil])
([nil nil ((#("25" 0 2 (face font-lock-comment-face fontified t)) . -192) (undo-tree-id158 . -2) 194) nil (26711 43941 831739 46000) 0 nil])
([nil nil ((#("b/" 0 2 (face font-lock-comment-face fontified t)) . -190) (undo-tree-id157 . -2) 192) nil (26711 43941 831737 881000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-comment-face fontified t)) . -188) (undo-tree-id155 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -189) (undo-tree-id156 . -1) 190) nil (26711 43941 831736 456000) 0 nil])
([nil nil ((188 . 190)) nil (26711 43941 831734 612000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -188) (undo-tree-id153 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -189) (undo-tree-id154 . -1) 190) nil (26711 43941 831733 942000) 0 nil])
([nil nil ((188 . 196)) nil (26711 43941 831731 790000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -195) (undo-tree-id152 . -1) 196) nil (26711 43941 831731 294000) 0 nil])
([nil nil ((195 . 197)) nil (26711 43941 831730 146000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -196) (undo-tree-id151 . -1) 197) nil (26711 43941 831729 535000) 0 nil])
([nil nil ((196 . 217)) nil (26711 43941 831728 355000) 0 nil])
([nil nil ((231 . 240) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 223) (221 . 223) (221 . 222) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 221) (220 . 221) (217 . 229)) nil (26711 43941 831727 503000) 0 nil])
([nil nil ((240 . 247)) nil (26711 43941 831726 623000) 0 nil])
([nil nil ((#("af" 0 2 (face font-lock-comment-face fontified t)) . -245) (undo-tree-id150 . -2) 247) nil (26711 43941 831726 207000) 0 nil])
([nil nil ((#("apoefj " 0 7 (face font-lock-comment-face fontified t)) . -238) (undo-tree-id149 . -7) 245) nil (26711 43941 831724 916000) 0 nil])
([nil nil ((#("aepofj " 0 7 (face font-lock-comment-face fontified t)) . -231) (undo-tree-id148 . -7) 238) nil (26711 43941 831723 920000) 0 nil])
([nil nil ((#("wepofji " 0 8 (face font-lock-comment-face fontified t)) . -223) (undo-tree-id147 . -8) 231) nil (26711 43941 831722 878000) 0 nil])
([nil nil ((#("adpoija
# " 0 8 (face font-lock-comment-face fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t)) . -213) (undo-tree-id146 . -10) 223) nil (26711 43941 831721 843000) 0 nil])
([nil nil ((#("where " 0 6 (face font-lock-comment-face fontified t)) . -207) (undo-tree-id145 . -6) 213) nil (26711 43941 831720 610000) 0 nil])
([nil nil ((207 . 212)) nil (26711 43941 831719 463000) 0 nil])
([nil nil ((#("where" 0 5 (face font-lock-comment-face fontified t)) . -207) (undo-tree-id144 . -5) 212) nil (26711 43941 831718 629000) 0 nil])
([nil nil ((207 . 223)) nil (26711 43941 831717 510000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -221) (undo-tree-id142 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -222) (undo-tree-id143 . -1) 223) nil (26711 43941 831716 238000) 0 nil])
([nil nil ((221 . 224)) nil (26711 43941 831714 913000) 0 nil])
([nil nil ((#("to " 0 3 (face font-lock-comment-face fontified t)) . -221) (undo-tree-id141 . -3) 224) nil (26711 43941 831714 189000) 0 nil])
([nil nil ((#("corresponding " 0 14 (face font-lock-comment-face fontified t)) . -207) (undo-tree-id140 . -14) 221) nil (26711 43941 831713 181000) 0 nil])
([nil nil ((#("size\" " 0 6 (face font-lock-comment-face fontified t)) . -201) (undo-tree-id139 . -6) 207) nil (26711 43941 831712 194000) 0 nil])
([nil nil ((201 . 222)) nil (26711 43941 831711 118000) 0 nil])
([nil nil ((222 . 223)) nil (26711 43941 831710 507000) 0 nil])
([nil nil ((223 . 226)) nil (26711 43941 831709 965000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -225) (undo-tree-id138 . -1) 226) nil (26711 43941 831708 970000) 0 nil])
([nil nil ((229 . 230) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 227) (225 . 227) (225 . 226) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 225) (224 . 225) (225 . 227)) nil (26711 43941 831706 940000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -229) (undo-tree-id137 . -1) 230) nil (26711 43941 831706 93000) 0 nil])
([nil nil ((#("b
# / " 0 2 (face font-lock-comment-face fontified t) 2 4 (face font-lock-comment-delimiter-face fontified t) 4 6 (face font-lock-comment-face fontified t)) . -223) (undo-tree-id136 . -6) 229) nil (26711 43941 831705 98000) 0 nil])
([nil nil ((#("w = " 0 4 (face font-lock-comment-face fontified t)) . -219) (undo-tree-id135 . -4) 223) nil (26711 43941 831703 888000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . 218) (undo-tree-id134 . -1) (219 . 220)) nil (26711 43941 831702 743000) 0 nil])
([nil nil ((219 . 226)) nil (26711 43941 831701 404000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-comment-face fontified t)) . -225) (undo-tree-id133 . -1) 226) nil (26711 43941 831700 729000) 0 nil])
([nil nil ((#("b = " 0 4 (face font-lock-comment-face fontified t)) . -221) (undo-tree-id132 . -4) 225) nil (26711 43941 831699 733000) 0 nil])
([nil nil ((221 . 226)) nil (26711 43941 831698 515000) 0 nil])
([nil nil ((226 . 228)) nil (26711 43941 831698 42000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-comment-face fontified t)) . -226) (undo-tree-id130 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -227) (undo-tree-id131 . -1) 228) nil (26711 43941 831697 542000) 0 nil])
([nil nil ((226 . 247)) nil (26711 43941 831696 157000) 0 nil])
([nil nil ((247 . 261)) nil (26711 43941 831695 751000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -260) (undo-tree-id129 . -1) 261) nil (26711 43941 831695 240000) 0 nil])
([nil nil ((#("defi" 0 4 (face font-lock-comment-face fontified t)) . -256) (undo-tree-id128 . -4) 260) nil (26711 43941 831694 234000) 0 nil])
([nil nil ((256 . 265)) nil (26711 43941 831692 813000) 0 nil])
([nil nil ((#("iw " 0 3 (face font-lock-comment-face fontified t)) . -262) (undo-tree-id127 . -3) 265) nil (26711 43941 831692 313000) 0 nil])
([nil nil ((262 . 270)) nil (26711 43941 831691 247000) 0 nil])
([nil nil ((#("defin" 0 5 (face font-lock-comment-face fontified t)) . -265) (undo-tree-id126 . -5) 270) nil (26711 43941 831690 543000) 0 nil])
([nil nil ((265 . 280)) nil (26711 43941 831689 448000) 0 nil])
([nil nil ((280 . 281)) nil (26711 43941 831688 960000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -280) (undo-tree-id125 . -1) 281) nil (26711 43941 831688 405000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -279) (undo-tree-id124 . -1) 280) nil (26711 43941 831687 9000) 0 nil])
([nil nil ((290 . 292) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 290) (289 . 290) (279 . 295)) nil (26711 43941 831685 309000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -296) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) 297) nil (26711 43941 831684 152000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -218) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 219) nil (26711 43941 831652 174000) 0 nil])
([nil nil ((218 . 219)) nil (26711 43941 831650 491000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -218) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("#" 0 1 (face font-lock-comment-face fontified t)) . -219) (undo-tree-id109 . -1) 220) nil (26711 43941 831649 686000) 0 nil])
([nil nil ((223 . 225) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 223) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (222 . 223) (287 . 288)) nil (26711 43941 831642 952000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -289) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 290) nil (26711 43941 831638 539000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -289) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 290) nil (26711 43941 831807 404000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . 289)) nil (26711 43944 176260 692000) 0 nil] [nil nil ((#("w =" 0 3 (face font-lock-comment-face fontified t)) . -286) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) 289) ((286 . 289)) (26711 43941 831628 199000) 0 nil])
([nil nil ((290 . 292) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 290) (289 . 290) (294 . 295)) nil (26711 43944 176259 668000) 0 nil])
nil
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -296) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 297) nil (26711 43944 176256 370000) 0 nil])
([nil nil ((316 . 317) (t 26711 43944 182456 78000)) nil (26711 43987 944425 759000) 0 nil])
([nil nil ((317 . 320)) nil (26711 43987 944424 773000) 0 nil])
([nil nil ((320 . 325)) nil (26711 43987 944424 323000) 0 nil])
([nil nil ((#("64)." 0 4 (face font-lock-comment-face fontified t)) . -292) (undo-tree-id269 . -4) (undo-tree-id270 . -4) 296) nil (26711 43987 944423 581000) 0 nil])
([nil nil ((#("w =
# " 0 4 (face font-lock-comment-face fontified t) 4 6 (face font-lock-comment-delimiter-face fontified t)) . -286) (undo-tree-id267 . -6) (undo-tree-id268 . -6) 292) nil (26711 43987 944421 923000) 0 nil])
([nil nil ((#("e. " 0 3 (face font-lock-comment-face fontified t)) . -283) (undo-tree-id265 . -3) (undo-tree-id266 . -3) 286) nil (26711 43987 944419 922000) 0 nil])
([nil nil ((#("i." 0 2 (face font-lock-comment-face fontified t)) . -281) (undo-tree-id263 . -2) (undo-tree-id264 . -2) 283) nil (26711 43987 944418 360000) 0 nil])
([nil nil ((#("1600 (" 0 6 (face font-lock-comment-face fontified t)) . -275) (undo-tree-id261 . -6) (undo-tree-id262 . -6) 281) nil (26711 43987 944415 666000) 0 nil])
([nil nil ((#("be " 0 3 (face font-lock-comment-face fontified t)) . -272) (undo-tree-id259 . -3) (undo-tree-id260 . -3) 275) nil (26711 43987 944413 897000) 0 nil])
([nil nil ((#("to " 0 3 (face font-lock-comment-face fontified t)) . -269) (undo-tree-id257 . -3) (undo-tree-id258 . -3) 272) nil (26711 43987 944412 380000) 0 nil])
([nil nil ((#("set " 0 4 (face font-lock-comment-face fontified t)) . -265) (undo-tree-id255 . -4) (undo-tree-id256 . -4) 269) nil (26711 43987 944410 460000) 0 nil])
([nil nil ((#("we " 0 3 (face font-lock-comment-face fontified t)) . -262) (undo-tree-id253 . -3) (undo-tree-id254 . -3) 265) nil (26711 43987 944408 805000) 0 nil])
([nil nil ((#("which " 0 6 (face font-lock-comment-face fontified t)) . -256) (undo-tree-id251 . -6) (undo-tree-id252 . -6) 262) nil (26711 43987 944407 103000) 0 nil])
([nil nil ((#("width, " 0 7 (face font-lock-comment-face fontified t)) . -249) (undo-tree-id249 . -7) (undo-tree-id250 . -7) 256) nil (26711 43987 944405 512000) 0 nil])
([nil nil ((#("bit " 0 4 (face font-lock-comment-face fontified t)) . -245) (undo-tree-id247 . -4) (undo-tree-id248 . -4) 249) nil (26711 43987 944403 692000) 0 nil])
([nil nil ((#("the " 0 4 (face font-lock-comment-face fontified t)) . -241) (undo-tree-id245 . -4) (undo-tree-id246 . -4) 245) nil (26711 43987 944402 77000) 0 nil])
([nil nil ((#("is " 0 3 (face font-lock-comment-face fontified t)) . -238) (undo-tree-id243 . -3) (undo-tree-id244 . -3) 241) nil (26711 43987 944400 213000) 0 nil])
([nil nil ((#("b " 0 2 (face font-lock-comment-face fontified t)) . -236) (undo-tree-id241 . -2) (undo-tree-id242 . -2) 238) nil (26711 43987 944398 567000) 0 nil])
([nil nil ((#("where " 0 6 (face font-lock-comment-face fontified t)) . -230) (undo-tree-id239 . -6) (undo-tree-id240 . -6) 236) nil (26711 43987 944396 845000) 0 nil])
([nil nil ((#("25 " 0 3 (face font-lock-comment-face fontified t)) . -227) (undo-tree-id237 . -3) (undo-tree-id238 . -3) 230) nil (26711 43987 944395 424000) 0 nil])
([nil nil ((#("b/" 0 2 (face font-lock-comment-face fontified t)) . -225) (undo-tree-id235 . -2) (undo-tree-id236 . -2) 227) nil (26711 43987 944393 270000) 0 nil])
([nil nil ((#("w =
# " 0 4 (face font-lock-comment-face fontified t) 4 6 (face font-lock-comment-delimiter-face fontified t)) . -219) (undo-tree-id232 . -4) (undo-tree-id233 . -6) (undo-tree-id234 . -6) 225) nil (26711 43987 944391 718000) 0 nil])
([nil nil ((#("by " 0 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t)) . -216) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) 219) nil (26711 43987 944389 758000) 0 nil])
([nil nil ((#("defined " 0 8 (face font-lock-comment-face fontified t)) . -208) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -8) 216) nil (26711 43987 944387 883000) 0 nil])
([nil nil ((#("size\", " 0 7 (face font-lock-comment-face fontified t)) . -201) (undo-tree-id223 . -7) (undo-tree-id224 . -7) (undo-tree-id225 . -7) 208) nil (26711 43987 944385 450000) 0 nil])
([nil nil ((#("lane " 0 5 (face font-lock-comment-face fontified t)) . -196) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) 201) nil (26711 43987 944383 648000) 0 nil])
([nil nil ((#("the \"" 0 5 (face font-lock-comment-face fontified t)) . -191) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) 196) nil (26711 43987 944381 685000) 0 nil])
([nil nil ((#("is " 0 3 (face font-lock-comment-face fontified t)) . -188) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) 191) nil (26711 43987 944379 916000) 0 nil])
([nil nil ((#("w " 0 2 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) 188) nil (26711 43987 944377 719000) 0 nil])
([nil nil ((#("array. " 0 7 (face font-lock-comment-face fontified t)) . -179) (undo-tree-id208 . -7) (undo-tree-id209 . -7) (undo-tree-id210 . -7) 186) nil (26711 43987 944375 756000) 0 nil])
([nil nil ((#("w " 0 2 (face font-lock-comment-face fontified t)) . -177) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) 179) nil (26711 43987 944373 958000) 0 nil])
([nil nil ((177 . 179)) nil (26711 43987 944372 128000) 0 nil])
([nil nil ((#("64" 0 2 (face font-lock-comment-face fontified t)) . -177) (undo-tree-id204 . -2) 179) nil (26711 43987 944371 458000) 0 nil])
([nil nil ((#("by " 0 3 (face font-lock-comment-face fontified t)) . -174) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) 177) nil (26711 43987 944370 405000) 0 nil])
([nil nil ((#("5 " 0 2 (face font-lock-comment-face fontified t)) . -172) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) 174) nil (26711 43987 944367 402000) 0 nil])
([nil nil ((#("by " 0 3 (face font-lock-comment-face fontified t)) . -169) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) 172) nil (26711 43987 944365 432000) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -167) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -168) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 169) nil (26711 43987 944363 358000) 0 nil])
([nil nil ((167 . 183)) nil (26711 43987 944359 788000) 0 nil])
([nil nil ((183 . 189)) nil (26711 43987 944359 179000) 0 nil])
([nil nil ((#("a " 0 2 (face font-lock-comment-face fontified t)) . -187) (undo-tree-id188 . -2) 189) nil (26711 43987 944358 380000) 0 nil])
([nil nil ((#("of " 0 3 (face font-lock-comment-face fontified t)) . -184) (undo-tree-id187 . -3) 187) nil (26711 43987 944357 184000) 0 nil])
([nil nil ((#("out " 0 4 (face font-lock-comment-face fontified t)) . -180) (undo-tree-id186 . -4) 184) nil (26711 43987 944355 964000) 0 nil])
([nil nil ((#("array " 0 6 (face font-lock-comment-face fontified t)) . -174) (undo-tree-id185 . -6) 180) nil (26711 43987 944354 781000) 0 nil])
([nil nil ((174 . 191)) nil (26711 43987 944353 817000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -212) (undo-tree-id184 . -1) 213) nil (26711 43987 944353 288000) 0 nil])
([nil nil ((212 . 213)) nil (26711 43987 944352 121000) 0 nil])
([nil nil ((191 . 200)) nil (26711 43987 944351 421000) 0 nil])
([nil nil ((200 . 201)) nil (26711 43987 944350 657000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -200) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 201) nil (26711 43987 944349 410000) 0 nil])
([nil nil ((200 . 209)) nil (26711 43987 944333 946000) 0 nil])
([nil nil ((238 . 253) (t 26711 43987 950204 545000)) nil (26711 46086 266354 300000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -251) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (#("(" 0 1 (fontified t)) . -252) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) 253) nil (26711 46086 266353 117000) 0 nil])
([nil nil ((251 . 253)) nil (26711 46086 266341 568000) 0 nil])
([nil nil ((#("ones(" 0 5 (fontified t)) . -248) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -2) (undo-tree-id905 . -2) (undo-tree-id906 . -2) (undo-tree-id907 . -2) (undo-tree-id908 . -2) (undo-tree-id909 . -3) (undo-tree-id910 . -3) (undo-tree-id911 . -3) (undo-tree-id912 . -3) (undo-tree-id913 . -3) (undo-tree-id914 . -3) (undo-tree-id915 . -3) (undo-tree-id916 . -3) (undo-tree-id917 . -3) (undo-tree-id918 . -3) (undo-tree-id919 . -3) (undo-tree-id920 . -3) (undo-tree-id921 . -3) (undo-tree-id922 . -3) (undo-tree-id923 . -3) (undo-tree-id924 . -3) (undo-tree-id925 . -3) (undo-tree-id926 . -3) (undo-tree-id927 . -3) (undo-tree-id928 . -3) (undo-tree-id929 . -3) (undo-tree-id930 . -3) (undo-tree-id931 . -3) (undo-tree-id932 . -3) (undo-tree-id933 . -3) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -5) (undo-tree-id940 . -5) (undo-tree-id941 . -5) (undo-tree-id942 . -5) (undo-tree-id943 . -5) (undo-tree-id944 . -5) 253) nil (26711 46086 266340 85000) 0 nil])
([nil nil ((248 . 253)) nil (26711 46086 266316 426000) 0 nil])
([nil nil ((#("zeros" 0 5 (fontified t)) . -248) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -2) (undo-tree-id879 . -2) (undo-tree-id880 . -2) (undo-tree-id881 . -2) (undo-tree-id882 . -2) (undo-tree-id883 . -3) (undo-tree-id884 . -3) (undo-tree-id885 . -3) (undo-tree-id886 . -3) (undo-tree-id887 . -3) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (undo-tree-id891 . -4) (undo-tree-id892 . -4) (undo-tree-id893 . -5) (undo-tree-id894 . -5) (undo-tree-id895 . -5) (undo-tree-id896 . -5) (undo-tree-id897 . -5) (undo-tree-id898 . -5) 253) nil (26711 46086 266315 582000) 0 nil])
([nil nil ((248 . 252)) nil (26711 46086 266293 639000) 0 nil])
([nil nil ((252 . 263)) nil (26711 46086 266293 265000) 0 nil])
([nil nil ((#("7" 0 1 (fontified t)) . -260) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (#("5" 0 1 (fontified t)) . -261) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (#(")" 0 1 (fontified t)) . -262) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 263) nil (26711 46086 266291 707000) 0 nil])
([nil nil ((260 . 264)) nil (26711 46086 266258 48000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -263) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) 264) nil (26711 46086 266257 193000) 0 nil])
([nil nil ((263 . 264)) nil (26711 46086 266250 360000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -263) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) 264) nil (26711 46086 266249 747000) 0 nil])
([nil nil ((263 . 268)) nil (26711 46086 266245 339000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -266) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (#("p" 0 1 (fontified t)) . -267) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) 268) nil (26711 46086 266244 258000) 0 nil])
([nil nil ((266 . 270)) nil (26711 46086 266231 560000) 0 nil])
([nil nil ((270 . 275)) nil (26711 46086 266231 261000) 0 nil])
([nil nil ((275 . 280)) nil (26711 46086 266230 898000) 0 nil])
([nil nil ((280 . 289)) nil (26711 46086 266230 453000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -286) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (undo-tree-id753 . -2) (undo-tree-id754 . -2) (undo-tree-id755 . -3) (undo-tree-id756 . -3) (undo-tree-id757 . -3) (undo-tree-id758 . -3) (undo-tree-id759 . -3) (undo-tree-id760 . -3) (undo-tree-id761 . -3) 289) nil (26711 46086 266229 622000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -284) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) 286) nil (26711 46086 266220 543000) 0 nil])
([nil nil ((284 . 289)) nil (26711 46086 266204 456000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -287) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#("n" 0 1 (fontified t)) . -288) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) 289) nil (26711 46086 266203 368000) 0 nil])
([nil nil ((287 . 289)) nil (26711 46086 266191 565000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -286) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) 289) nil (26711 46086 266190 424000) 0 nil])
([nil nil ((#("z " 0 2 (fontified t)) . -284) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) 286) nil (26711 46086 266171 320000) 0 nil])
([nil nil ((284 . 298)) nil (26711 46086 266141 834000) 0 nil])
([nil nil ((298 . 307)) nil (26711 46086 266141 432000) 0 nil])
([nil nil ((307 . 314)) nil (26711 46086 266140 991000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -313) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) 314) nil (26711 46086 266140 500000) 0 nil])
([nil nil ((313 . 321)) nil (26711 46086 266137 190000) 0 nil])
([nil nil ((321 . 325)) nil (26711 46086 266136 787000) 0 nil])
([nil nil ((325 . 338)) nil (26711 46086 266136 171000) 0 nil])
([nil nil ((338 . 339)) nil (26711 46086 266135 775000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -338) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) 339) nil (26711 46086 266135 256000) 0 nil])
([nil nil ((338 . 348)) nil (26711 46086 266131 144000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -347) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) 348) nil (26711 46086 266130 525000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -344) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) 347) nil (26711 46086 266126 144000) 0 nil])
([nil nil ((#("w " 0 2 (fontified t)) . -342) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . -2) 344) nil (26711 46086 266113 169000) 0 nil])
([nil nil ((342 . 357)) nil (26711 46086 266091 146000) 0 nil])
([nil nil ((357 . 374)) nil (26711 46086 266090 737000) 0 nil])
([nil nil ((374 . 379)) nil (26711 46086 266090 403000) 0 nil])
([nil nil ((379 . 383)) nil (26711 46086 266090 91000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -380) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (#("z" 0 1 (fontified t)) . -381) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("]" 0 1 (fontified t)) . -382) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) 383) nil (26711 46086 266088 725000) 0 nil])
([nil nil ((380 . 381)) nil (26711 46086 266056 771000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -380) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 381) nil (26711 46086 266056 70000) 0 nil])
([nil nil ((380 . 387)) nil (26711 46086 266052 446000) 0 nil])
([nil nil ((387 . 388)) nil (26711 46086 266051 830000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -387) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) 388) nil (26711 46086 266051 198000) 0 nil])
([nil nil ((387 . 388)) nil (26711 46086 266047 608000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -387) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) 388) nil (26711 46086 266046 985000) 0 nil])
([nil nil ((387 . 397)) nil (26711 46086 266036 346000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -394) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . -395) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#(" " 0 1 (fontified t)) . -396) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) 397) nil (26711 46086 266035 7000) 0 nil])
([nil nil ((394 . 396)) nil (26711 46086 266006 302000) 0 nil])
([nil nil ((396 . 400)) nil (26711 46086 266005 707000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -399) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 400) nil (26711 46086 266004 984000) 0 nil])
([nil nil ((399 . 405)) nil (26711 46086 265997 446000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -403) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#(" " 0 1 (fontified t)) . -404) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) 405) nil (26711 46086 265996 155000) 0 nil])
([nil nil ((403 . 410)) nil (26711 46086 265979 743000) 0 nil])
([nil nil ((410 . 427)) nil (26711 46086 265979 410000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -423) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) 427) nil (26711 46086 265978 440000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -419) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) 423) nil (26711 46086 265969 369000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -415) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) 419) nil (26711 46086 265954 619000) 0 nil])
([nil nil ((415 . 423)) nil (26711 46086 265927 170000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -393) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . -394) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) 395 (t 26711 46086 276719 876000)) nil (26711 46125 80799 730000) 0 nil])
([nil nil ((393 . 396)) nil (26711 46125 80683 528000) 0 nil])
([nil nil ((#("&" 0 1 (face font-lock-operator-face fontified t)) . -395) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) 396) nil (26711 46125 80682 553000) 0 nil])
([nil nil ((395 . 396)) nil (26711 46125 80673 620000) 0 nil])
([nil nil ((#("&" 0 1 (face font-lock-operator-face fontified t)) . -395) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) 396) nil (26711 46125 80672 45000) 0 nil])
([nil nil ((395 . 396)) nil (26711 46125 80654 24000) 0 nil])
([nil nil ((425 . 426) (t 26711 46125 87371 590000)) nil (26711 46225 144032 611000) 0 nil])
([nil nil ((426 . 430)) nil (26711 46225 144031 759000) 0 nil])
([nil nil ((425 . 426)) nil (26711 46225 144031 297000) 0 nil])
([nil nil ((426 . 435)) nil (26711 46225 144030 753000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -434) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) 435) nil (26711 46225 144029 440000) 0 nil])
([nil nil ((434 . 449)) nil (26711 46225 144024 589000) 0 nil])
([nil nil ((449 . 455)) nil (26711 46225 144023 679000) 0 nil])
([nil nil ((460 . 461) (#(" " 0 1 (fontified nil)) . 459) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (460 . 461)) nil (26711 46225 144020 100000) 0 nil])
([nil nil ((461 . 466) (t 26711 46225 147050 204000)) nil (26711 46843 263709 710000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face fontified t)) . -465) (undo-tree-id1595 . -1) 466) nil (26711 46843 263708 739000) 0 nil])
([nil nil ((#("def " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -461) (undo-tree-id1594 . -4) 465) nil (26711 46843 263707 253000) 0 nil])
([nil nil ((461 . 468)) nil (26711 46843 263706 461000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -467) (undo-tree-id1593 . -1) 468) nil (26711 46843 263705 863000) 0 nil])
([nil nil ((467 . 473)) nil (26711 46843 263704 861000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -472) (undo-tree-id1592 . -1) 473) nil (26711 46843 263704 309000) 0 nil])
([nil nil ((472 . 481)) nil (26711 46843 263703 314000) 0 nil])
([nil nil ((481 . 483)) nil (26711 46843 263703 54000) 0 nil])
([nil nil ((483 . 493)) nil (26711 46843 263702 680000) 0 nil])
([nil nil ((#("thet" 0 4 (face font-lock-comment-face fontified t)) . -476) (undo-tree-id1591 . -4) 480) nil (26711 46843 263702 83000) 0 nil])
([nil nil ((#("define " 0 7 (face font-lock-comment-face fontified t)) . -469) (undo-tree-id1590 . -7) 476) nil (26711 46843 263700 449000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . 469)) nil (26711 46843 263699 430000) 0 nil])
([nil nil ((469 . 474)) nil (26711 46843 263698 925000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -472) (undo-tree-id1588 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -473) (undo-tree-id1589 . -1) 474) nil (26711 46843 263698 352000) 0 nil])
([nil nil ((472 . 475)) nil (26711 46843 263696 773000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-comment-face fontified t)) . -473) (undo-tree-id1586 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -474) (undo-tree-id1587 . -1) 475) nil (26711 46843 263696 79000) 0 nil])
([nil nil ((473 . 482)) nil (26711 46843 263693 593000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -481) (undo-tree-id1585 . -1) 482) nil (26711 46843 263692 623000) 0 nil])
([nil nil ((481 . 485)) nil (26711 46843 263691 784000) 0 nil])
([nil nil ((497 . 500)) nil (26711 46843 263691 508000) 0 nil])
([nil nil ((500 . 505)) nil (26711 46843 263691 239000) 0 nil])
([nil nil ((505 . 514)) nil (26711 46843 263690 975000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -511) (undo-tree-id1584 . -3) 514) nil (26711 46843 263690 422000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -509) (undo-tree-id1583 . -2) 511) nil (26711 46843 263689 434000) 0 nil])
([nil nil ((509 . 515)) nil (26711 46843 263688 429000) 0 nil])
([nil nil ((153 . 154)) nil (26711 46843 263688 124000) 0 nil])
([nil nil ((154 . 155)) nil (26711 46843 263687 803000) 0 nil])
([nil nil ((154 . 156)) nil (26711 46843 263687 530000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -154) (undo-tree-id1581 . -1) (#("e" 0 1 (fontified t)) . -155) (undo-tree-id1582 . -1) 156) nil (26711 46843 263686 849000) 0 nil])
([nil nil ((154 . 162)) nil (26711 46843 263685 58000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -161) (undo-tree-id1580 . -1) 162) nil (26711 46843 263684 672000) 0 nil])
([nil nil ((161 . 162)) nil (26711 46843 263683 943000) 0 nil])
([nil nil ((162 . 170)) nil (26711 46843 263683 668000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -169) (undo-tree-id1579 . -1) 170) nil (26711 46843 263683 264000) 0 nil])
([nil nil ((169 . 173)) nil (26711 46843 263682 372000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -172) (undo-tree-id1578 . -1) 173) nil (26711 46843 263682 24000) 0 nil])
([nil nil ((#("A, " 0 3 (fontified t)) . -169) (undo-tree-id1577 . -3) 172) nil (26711 46843 263681 86000) 0 nil])
([nil nil ((169 . 171)) nil (26711 46843 263680 360000) 0 nil])
([nil nil ((171 . 172)) nil (26711 46843 263680 56000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -170) (undo-tree-id1575 . -1) (#("," 0 1 (fontified t)) . -171) (undo-tree-id1576 . -1) 172) nil (26711 46843 263679 438000) 0 nil])
([nil nil ((170 . 175)) nil (26711 46843 263677 952000) 0 nil])
([nil nil ((#("def xor_arrays(A, B):
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 14 (face font-lock-function-name-face fontified t) 14 21 (fontified t) 21 22 (fontified t)) . 154) (undo-tree-id1573 . -22) (undo-tree-id1574 . -21)) nil (26711 46843 263677 465000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -153) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) 154) nil (26711 46843 263675 964000) 0 nil])
([nil nil ((153 . 154)) nil (26711 46843 263673 939000) 0 nil])
([nil nil ((154 . 155)) nil (26711 46843 263673 537000) 0 nil])
([nil nil ((154 . 166)) nil (26711 46843 263673 126000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -165) (undo-tree-id1569 . -1) 166) nil (26711 46843 263672 655000) 0 nil])
([nil nil ((165 . 166)) nil (26711 46843 263671 749000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -165) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) 166) nil (26711 46843 263671 252000) 0 nil])
([nil nil ((165 . 173)) nil (26711 46843 263667 183000) 0 nil])
([nil nil ((154 . 158)) nil (26711 46843 263666 816000) 0 nil])
([nil nil ((177 . 182)) nil (26711 46843 263666 610000) 0 nil])
([nil nil ((182 . 186)) nil (26711 46843 263666 330000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -182) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (#(" " 0 1 (fontified t)) . -183) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -184) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (#(" " 0 1 (fontified t)) . -185) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) 186) nil (26711 46843 263664 208000) 0 nil])
([nil nil ((182 . 191)) nil (26711 46843 263623 624000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -190) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) 191) nil (26711 46843 263622 926000) 0 nil])
([nil nil ((#("final = " 0 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (fontified t)) . -182) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -2) (undo-tree-id1413 . -2) (undo-tree-id1414 . -3) (undo-tree-id1415 . -3) (undo-tree-id1416 . -3) (undo-tree-id1417 . -3) (undo-tree-id1418 . -3) (undo-tree-id1419 . -4) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -5) (undo-tree-id1425 . -5) (undo-tree-id1426 . -5) (undo-tree-id1427 . -5) (undo-tree-id1428 . -5) (undo-tree-id1429 . -6) (undo-tree-id1430 . -6) (undo-tree-id1431 . -6) (undo-tree-id1432 . -6) (undo-tree-id1433 . -6) (undo-tree-id1434 . -6) (undo-tree-id1435 . -7) (undo-tree-id1436 . -7) (undo-tree-id1437 . -7) (undo-tree-id1438 . -7) (undo-tree-id1439 . -7) (undo-tree-id1440 . -8) (undo-tree-id1441 . -8) (undo-tree-id1442 . -8) (undo-tree-id1443 . -8) (undo-tree-id1444 . -8) (undo-tree-id1445 . -8) (undo-tree-id1446 . -8) (undo-tree-id1447 . -8) (undo-tree-id1448 . -8) (undo-tree-id1449 . -8) (undo-tree-id1450 . -8) (undo-tree-id1451 . -8) (undo-tree-id1452 . -8) (undo-tree-id1453 . -8) (undo-tree-id1454 . -8) (undo-tree-id1455 . -8) (undo-tree-id1456 . -8) (undo-tree-id1457 . -8) (undo-tree-id1458 . -8) (undo-tree-id1459 . -8) (undo-tree-id1460 . -8) (undo-tree-id1461 . -8) 190) nil (26711 46843 263817 846000) 0 nil])
([nil nil ((182 . 187)) nil (26711 46965 602874 363000) 0 nil] [nil nil ((#("arrays):
    " 0 9 (fontified t) 9 13 (fontified t)) . -169) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3) (undo-tree-id1240 . -3) (undo-tree-id1241 . -3) (undo-tree-id1242 . -3) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -5) (undo-tree-id1249 . -5) (undo-tree-id1250 . -5) (undo-tree-id1251 . -5) (undo-tree-id1252 . -5) (undo-tree-id1253 . -6) (undo-tree-id1254 . -6) (undo-tree-id1255 . -6) (undo-tree-id1256 . -6) (undo-tree-id1257 . -6) (undo-tree-id1258 . -7) (undo-tree-id1259 . -7) (undo-tree-id1260 . -7) (undo-tree-id1261 . -7) (undo-tree-id1262 . -7) (undo-tree-id1263 . -7) (undo-tree-id1264 . -7) (undo-tree-id1265 . -7) (undo-tree-id1266 . -7) (undo-tree-id1267 . -7) (undo-tree-id1268 . -7) (undo-tree-id1269 . -7) (undo-tree-id1270 . -8) (undo-tree-id1271 . -8) (undo-tree-id1272 . -8) (undo-tree-id1273 . -8) (undo-tree-id1274 . -8) (undo-tree-id1275 . -8) (undo-tree-id1276 . -8) (undo-tree-id1277 . -8) (undo-tree-id1278 . -8) (undo-tree-id1279 . -8) (undo-tree-id1280 . 5) (undo-tree-id1281 . -13) (undo-tree-id1282 . -13) (undo-tree-id1283 . -13) (undo-tree-id1284 . -13) (undo-tree-id1285 . -13) (undo-tree-id1286 . -13) (undo-tree-id1287 . -13) (undo-tree-id1288 . -13) (undo-tree-id1289 . -13) (undo-tree-id1290 . -13) (undo-tree-id1291 . -13) (undo-tree-id1292 . -13) (undo-tree-id1293 . -13) (undo-tree-id1294 . -13) (undo-tree-id1295 . -13) (undo-tree-id1296 . -13) (undo-tree-id1297 . -13) (undo-tree-id1298 . -13) (undo-tree-id1299 . -13) (undo-tree-id1300 . -13) (undo-tree-id1301 . -13) (undo-tree-id1302 . -13) (undo-tree-id1303 . -13) (undo-tree-id1304 . -13) (undo-tree-id1305 . -13) (undo-tree-id1306 . -13) (undo-tree-id1307 . -13) (undo-tree-id1308 . -13) (undo-tree-id1309 . -13) (undo-tree-id1310 . -13) (undo-tree-id1311 . -13) (undo-tree-id1312 . -13) (undo-tree-id1313 . -13) (undo-tree-id1314 . -13) (undo-tree-id1315 . -13) (undo-tree-id1316 . -13) (undo-tree-id1317 . -13) (undo-tree-id1318 . -13) (undo-tree-id1319 . -13) (undo-tree-id1320 . -13) (undo-tree-id1321 . -13) (undo-tree-id1322 . -13) (undo-tree-id1323 . -13) (undo-tree-id1324 . -13) (undo-tree-id1325 . -13) (undo-tree-id1326 . -13) (undo-tree-id1327 . -13) (undo-tree-id1328 . -13) (undo-tree-id1329 . -13) (undo-tree-id1330 . -13) (undo-tree-id1331 . -13) (undo-tree-id1332 . -13) (undo-tree-id1333 . -13) (undo-tree-id1334 . -13) (undo-tree-id1335 . -13) (undo-tree-id1336 . -13) (undo-tree-id1337 . -13) (undo-tree-id1338 . -13) (undo-tree-id1339 . -13) (undo-tree-id1340 . -13) (undo-tree-id1341 . -13) (undo-tree-id1342 . -13) (undo-tree-id1343 . -13) (undo-tree-id1344 . -13) (undo-tree-id1345 . -13) (undo-tree-id1346 . -13) (undo-tree-id1347 . -13) (undo-tree-id1348 . -13) (undo-tree-id1349 . -13) (undo-tree-id1350 . -13) (undo-tree-id1351 . -13) (undo-tree-id1352 . -13) (undo-tree-id1353 . -13) (undo-tree-id1354 . -13) (undo-tree-id1355 . -13) (undo-tree-id1356 . -13) (undo-tree-id1357 . -13) (undo-tree-id1358 . -13) (undo-tree-id1359 . -13) (undo-tree-id1360 . -13) (undo-tree-id1361 . -13) (undo-tree-id1362 . -13) (undo-tree-id1363 . -13) (undo-tree-id1364 . -13) (undo-tree-id1365 . -13) (undo-tree-id1366 . -13) (undo-tree-id1367 . -13) (undo-tree-id1368 . -13) (undo-tree-id1369 . -13) (undo-tree-id1370 . -13) (undo-tree-id1371 . -13) (undo-tree-id1372 . -13) (undo-tree-id1373 . -13) (undo-tree-id1374 . -13) (undo-tree-id1375 . -13) (undo-tree-id1376 . -13) (undo-tree-id1377 . -13) (undo-tree-id1378 . -13) (undo-tree-id1379 . -13) (undo-tree-id1380 . -13) (undo-tree-id1381 . -13) (undo-tree-id1382 . -13) (undo-tree-id1383 . -13) (undo-tree-id1384 . -13) (undo-tree-id1385 . -13) (undo-tree-id1386 . -13) (undo-tree-id1387 . -13) (undo-tree-id1388 . -13) (undo-tree-id1389 . -13) (undo-tree-id1390 . -13) (undo-tree-id1391 . -13) (undo-tree-id1392 . -13) (undo-tree-id1393 . -13) (undo-tree-id1394 . -13) (undo-tree-id1395 . -13) (undo-tree-id1396 . -13) (undo-tree-id1397 . -9) (undo-tree-id1398 . -13) (undo-tree-id1399 . -13) (undo-tree-id1400 . -13) (undo-tree-id1401 . -13) (undo-tree-id1402 . -13) (undo-tree-id1403 . -13) 182) ((169 . 182)) (26711 46843 263583 367000) 0 nil])
([nil nil ((#("array" 0 5 (fontified t)) . -182) (undo-tree-id1625 . -5) 187) nil (26711 46965 602873 791000) 0 nil])
nil
([nil nil ((182 . 183)) nil (26711 46965 602872 890000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -182) (undo-tree-id1624 . -1) 183) nil (26711 46965 602872 366000) 0 nil])
([nil nil ((182 . 188)) nil (26711 46965 602871 554000) 0 nil])
([nil nil ((#("arr = " 0 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-operator-face fontified t) 5 6 (fontified t)) . -182) (undo-tree-id1623 . -6) 188) nil (26711 46965 602870 979000) 0 nil])
([nil nil ((182 . 183)) nil (26711 46965 602870 5000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -182) (undo-tree-id1622 . -1) 183) nil (26711 46965 602869 422000) 0 nil])
([nil nil ((182 . 186)) nil (26711 46965 602868 551000) 0 nil])
([nil nil ((#("B = " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -182) (undo-tree-id1621 . -4) 186) nil (26711 46965 602867 789000) 0 nil])
([nil nil ((182 . 183)) nil (26711 46965 602866 465000) 0 nil])
([nil nil ((183 . 186)) nil (26711 46965 602865 769000) 0 nil])
([nil nil ((#("A = " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -182) (undo-tree-id1620 . -4) 186) nil (26711 46965 602864 954000) 0 nil])
([nil nil ((182 . 185)) nil (26711 46965 602863 800000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -182) (undo-tree-id1617 . -1) (#(" " 0 1 (fontified t)) . -183) (undo-tree-id1618 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -184) (undo-tree-id1619 . -1) 185) nil (26711 46965 602863 45000) 0 nil])
([nil nil ((182 . 186)) nil (26711 46965 602860 615000) 0 nil])
([nil nil ((186 . 195)) nil (26711 46965 602859 876000) 0 nil])
([nil nil ((195 . 200)) nil (26711 46965 602859 174000) 0 nil])
([nil nil ((200 . 214)) nil (26711 46965 602858 644000) 0 nil])
([nil nil ((#("range" 0 5 (face font-lock-builtin-face fontified t)) . -209) (undo-tree-id1616 . -5) 214) nil (26711 46965 602858 70000) 0 nil])
([nil nil ((209 . 213)) nil (26711 46965 602857 176000) 0 nil])
([nil nil ((#("arar" 0 4 (fontified t)) . -209) (undo-tree-id1615 . -4) 213) nil (26711 46965 602856 600000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -206) (undo-tree-id1614 . -3) 209) nil (26711 46965 602855 220000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -204) (undo-tree-id1613 . -2) 206) nil (26711 46965 602853 855000) 0 nil])
([nil nil ((204 . 209)) nil (26711 46965 602852 584000) 0 nil])
([nil nil ((209 . 214)) nil (26711 46965 602852 155000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -213) (undo-tree-id1612 . -1) 214) nil (26711 46965 602851 530000) 0 nil])
([nil nil ((213 . 220)) nil (26711 46965 602850 95000) 0 nil])
([nil nil ((220 . 229)) nil (26711 46965 602849 661000) 0 nil])
([nil nil ((229 . 230)) nil (26711 46965 602849 134000) 0 nil])
([nil nil ((230 . 234)) nil (26711 46965 602848 800000) 0 nil])
([nil nil ((234 . 235)) nil (26711 46965 602848 185000) 0 nil])
([nil nil ((235 . 244)) nil (26711 46965 602847 646000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -240) (undo-tree-id1602 . -4) (undo-tree-id1603 . -4) (undo-tree-id1604 . -4) (undo-tree-id1605 . -4) (undo-tree-id1606 . -4) (undo-tree-id1607 . -4) (undo-tree-id1608 . -4) (undo-tree-id1609 . -4) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) 244) nil (26711 46965 602846 742000) 0 nil])
([nil nil ((240 . 248)) nil (26711 46965 602838 268000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -247) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 248) nil (26711 46965 602837 226000) 0 nil])
([nil nil ((247 . 248)) nil (26711 46965 602825 759000) 0 nil])
([nil nil ((611 . 612) 248) nil (26711 46965 602821 248000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -601) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (#("o" 0 1 (fontified t)) . -602) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -603) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (#(" " 0 1 (fontified t)) . -604) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (#("x" 0 1 (fontified t)) . -605) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (#(" " 0 1 (fontified t)) . -606) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (#("i" 0 1 (fontified t)) . -607) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -608) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (#(" " 0 1 (fontified t)) . -609) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (#("r" 0 1 (fontified t)) . -610) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) 611 (t 26711 46965 609429 846000)) nil (26711 47007 726976 934000) 0 nil])
([nil nil ((601 . 619)) nil (26711 47007 726801 84000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -618) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) 619) nil (26711 47007 726800 684000) 0 nil])
([nil nil ((618 . 620)) nil (26711 47007 726798 5000) 0 nil])
([nil nil ((620 . 623)) nil (26711 47007 726797 557000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -622) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) 623) nil (26711 47007 726796 622000) 0 nil])
([nil nil ((622 . 623)) nil (26711 47007 726781 549000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -622) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) 623) nil (26711 47007 726780 553000) 0 nil])
([nil nil ((622 . 635)) nil (26711 47007 726773 708000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -625) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) 626) nil (26711 47007 726772 812000) 0 nil])
([nil nil ((625 . 626)) nil (26711 47007 726769 500000) 0 nil])
([nil nil ((635 . 648)) nil (26711 47007 726769 186000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -647) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) 648) nil (26711 47007 726768 209000) 0 nil])
([nil nil ((647 . 650)) nil (26711 47007 726753 167000) 0 nil])
([nil nil ((#("return" 0 6 (face font-lock-keyword-face fontified t)) . -601) (undo-tree-id2166 . -6) 607 (t 26711 47007 737132 909000)) nil (26711 47305 864436 281000) 0 nil])
([nil nil ((601 . 605)) nil (26711 47305 864433 293000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -605) (undo-tree-id2165 . -1) 606) nil (26711 47305 864432 91000) 0 nil])
([nil nil ((#("C = xor_arrays([A[:][y][:] for y in range(5)])" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t) 4 27 (fontified t) 27 30 (face font-lock-keyword-face fontified t) 30 33 (fontified t) 33 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 41 (face font-lock-builtin-face fontified t) 41 46 (fontified t)) . 601)) nil (26711 47305 864428 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 646 . 647) (nil fontified nil 642 . 647) (nil fontified nil 637 . 642) (nil fontified nil 636 . 637) (nil fontified nil 634 . 636) (nil fontified nil 631 . 634) (nil fontified nil 628 . 631) (nil fontified nil 605 . 628) (nil fontified nil 604 . 605) (nil fontified nil 603 . 604) (nil fontified nil 602 . 603) (nil fontified nil 601 . 602) (601 . 647)) nil (26711 47305 864426 919000) 0 nil])
([nil nil ((647 . 652)) nil (26711 47305 864423 342000) 0 nil])
([nil nil ((652 . 656)) nil (26711 47305 864422 523000) 0 nil])
([nil nil ((656 . 658)) nil (26711 47305 864421 209000) 0 nil])
([nil nil ((#("C[" 0 2 (fontified t)) . -656) (undo-tree-id2164 . -2) 658) nil (26711 47305 864420 81000) 0 nil])
([nil nil ((#("D = " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -652) (undo-tree-id2163 . -4) 656) nil (26711 47305 864417 251000) 0 nil])
([nil nil ((652 . 665)) nil (26711 47305 864414 653000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -664) (undo-tree-id2162 . -1) 665) nil (26711 47305 864413 520000) 0 nil])
([nil nil ((664 . 670)) nil (26711 47305 864411 19000) 0 nil])
([nil nil ((670 . 679)) nil (26711 47305 864410 43000) 0 nil])
([nil nil ((679 . 698)) nil (26711 47305 864409 69000) 0 nil])
([nil nil ((698 . 711)) nil (26711 47305 864407 980000) 0 nil])
([nil nil ((711 . 714)) nil (26711 47305 864407 191000) 0 nil])
([nil nil ((649 . 653) (#("    " 0 4 (fontified nil)) . 648) (undo-tree-id2161 . -4) (647 . 653)) nil (26711 47305 864405 836000) 0 nil])
([nil nil ((648 . 652)) nil (26711 47305 864402 489000) 0 nil])
([nil nil ((652 . 669)) nil (26711 47305 864401 424000) 0 nil])
([nil nil ((669 . 676)) nil (26711 47305 864400 446000) 0 nil])
([nil nil ((667 . 668)) nil (26711 47305 864399 475000) 0 nil])
([nil nil ((677 . 683)) nil (26711 47305 864397 996000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -682) (undo-tree-id2160 . -1) 683) nil (26711 47305 864396 709000) 0 nil])
([nil nil ((#("for " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -678) (undo-tree-id2159 . -4) 682) nil (26711 47305 864394 176000) 0 nil])
([nil nil ((#("z] " 0 3 (fontified t)) . -675) (undo-tree-id2158 . -3) 678) nil (26711 47305 864391 271000) 0 nil])
([nil nil ((#("1][" 0 3 (fontified t)) . -672) (undo-tree-id2157 . -3) 675) nil (26711 47305 864389 20000) 0 nil])
([nil nil ((#("x-" 0 1 (fontified t) 1 2 (face font-lock-operator-face fontified t)) . -670) (undo-tree-id2156 . -2) 672) nil (26711 47305 864387 499000) 0 nil])
([nil nil ((#("C[" 0 2 (fontified t)) . -668) (undo-tree-id2155 . -2) 670) nil (26711 47305 864386 1000) 0 nil])
([nil nil ((#("arrays([" 0 8 (fontified t)) . -660) (undo-tree-id2154 . -8) 668) nil (26711 47305 864384 621000) 0 nil])
([nil nil ((#("    D = xor_" 0 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 12 (fontified t)) . 648)) nil (26711 47305 864382 388000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 648)) nil (26711 47305 864381 619000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 648)) nil (26711 47305 864380 998000) 0 nil])
([nil nil ((648 . 652)) nil (26711 47305 864380 280000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 648)) nil (26711 47305 864379 731000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 648)) nil (26711 47305 864378 942000) 0 nil])
([nil nil ((714 . 718)) nil (26711 47305 864378 466000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -717) (undo-tree-id2153 . -1) 718) nil (26711 47305 864377 743000) 0 nil])
([nil nil ((717 . 730)) nil (26711 47305 864375 455000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -729) (undo-tree-id2152 . -1) 730) nil (26711 47305 864374 788000) 0 nil])
([nil nil ((729 . 735)) nil (26711 47305 864373 697000) 0 nil])
([nil nil ((#("&" 0 1 (face font-lock-operator-face fontified t)) . -733) (undo-tree-id2150 . -1) (#(" " 0 1 (fontified t)) . -734) (undo-tree-id2151 . -1) 735) nil (26711 47305 864373 155000) 0 nil])
([nil nil ((733 . 748)) nil (26711 47305 864371 321000) 0 nil])
([nil nil ((748 . 751)) nil (26711 47305 864370 924000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -750) (undo-tree-id2149 . -1) 751) nil (26711 47305 864370 239000) 0 nil])
([nil nil ((647 . 652)) nil (26711 47305 864368 745000) 0 nil])
([nil nil ((652 . 658)) nil (26711 47305 864368 363000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -657) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) 658) nil (26711 47305 864367 689000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -656) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) 657) nil (26711 47305 864362 278000) 0 nil])
([nil nil ((656 . 667)) nil (26711 47305 864350 315000) 0 nil])
([nil nil ((667 . 671)) nil (26711 47305 864349 962000) 0 nil])
([nil nil ((#("5, " 0 3 (fontified t)) . -668) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -3) (undo-tree-id2116 . -3) (undo-tree-id2117 . -3) (undo-tree-id2118 . -3) (undo-tree-id2119 . -3) (undo-tree-id2120 . -3) (undo-tree-id2121 . -3) (undo-tree-id2122 . -3) (undo-tree-id2123 . -3) (undo-tree-id2124 . -3) (undo-tree-id2125 . -3) (undo-tree-id2126 . -3) 671) nil (26711 47305 864348 504000) 0 nil])
([nil nil ((668 . 686)) nil (26711 47305 864318 166000) 0 nil])
([nil nil ((789 . 802)) nil (26711 47305 864317 207000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -798) (undo-tree-id2090 . -4) (undo-tree-id2091 . -4) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (undo-tree-id2094 . -4) (undo-tree-id2095 . -4) (undo-tree-id2096 . -4) (undo-tree-id2097 . -4) (undo-tree-id2098 . -4) (undo-tree-id2099 . -4) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (undo-tree-id2104 . -4) 802) nil (26711 47305 864315 607000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -794) (undo-tree-id2068 . -4) (undo-tree-id2069 . -4) (undo-tree-id2070 . -4) (undo-tree-id2071 . -4) (undo-tree-id2072 . -4) (undo-tree-id2073 . -4) (undo-tree-id2074 . -4) (undo-tree-id2075 . -4) (undo-tree-id2076 . -4) (undo-tree-id2077 . -4) (undo-tree-id2078 . -4) (undo-tree-id2079 . -4) (undo-tree-id2080 . -4) (undo-tree-id2081 . -4) (undo-tree-id2082 . -4) (undo-tree-id2083 . -4) (undo-tree-id2084 . -4) (undo-tree-id2085 . -4) (undo-tree-id2086 . -4) (undo-tree-id2087 . -4) (undo-tree-id2088 . -4) (undo-tree-id2089 . -4) 798) nil (26711 47305 864297 370000) 0 nil])
([nil nil ((709 . 718) (t 26711 47305 868106 490000)) nil (26711 47925 110646 467000) 0 nil])
([nil nil ((718 . 725)) nil (26711 47925 110646 142000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -724) (undo-tree-id2277 . -1) 725) nil (26711 47925 110645 729000) 0 nil])
([nil nil ((724 . 733)) nil (26711 47925 110644 962000) 0 nil])
([nil nil ((733 . 735)) nil (26711 47925 110644 687000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -734) (undo-tree-id2276 . -1) 735) nil (26711 47925 110644 193000) 0 nil])
([nil nil ((734 . 736)) nil (26711 47925 110643 302000) 0 nil])
([nil nil ((745 . 749) 763) nil (26711 47925 110643 52000) 0 nil])
([nil nil ((769 . 785) (#("            " 0 12 (fontified t)) . 769) 799) nil (26711 47925 110642 514000) 0 nil])
([nil nil ((824 . 841)) nil (26711 47925 110642 133000) 0 nil])
([nil nil ((841 . 845)) nil (26711 47925 110641 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 789)) nil (26711 47925 110641 354000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -788) (undo-tree-id2275 . -1) 789) nil (26711 47925 110640 862000) 0 nil])
([nil nil ((788 . 789)) nil (26711 47925 110640 138000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -788) (undo-tree-id2274 . -1) 789) nil (26711 47925 110639 378000) 0 nil])
([nil nil ((788 . 790)) nil (26711 47925 110638 618000) 0 nil])
([nil nil ((845 . 856)) nil (26711 47925 110638 293000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -841) (undo-tree-id2273 . -1) 842) nil (26711 47925 110637 924000) 0 nil])
([nil nil ((841 . 842)) nil (26711 47925 110637 111000) 0 nil])
([nil nil ((842 . 848)) nil (26711 47925 110636 868000) 0 nil])
([nil nil ((862 . 865)) nil (26711 47925 110636 616000) 0 nil])
([nil nil ((#("prime" 0 5 (fontified t)) . -843) (undo-tree-id2272 . -5) 848) nil (26711 47925 110636 197000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -841) (undo-tree-id2270 . -1) (#("_" 0 1 (fontified t)) . -842) (undo-tree-id2271 . -1) 843) nil (26711 47925 110635 145000) 0 nil])
([nil nil ((841 . 844)) nil (26711 47925 110633 652000) 0 nil])
([nil nil ((844 . 846)) nil (26711 47925 110633 308000) 0 nil])
([nil nil ((686 . 691)) nil (26711 47925 110633 87000) 0 nil])
([nil nil ((691 . 692)) nil (26711 47925 110632 707000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -691) (undo-tree-id2269 . -1) 692) nil (26711 47925 110632 182000) 0 nil])
([nil nil ((691 . 695)) nil (26711 47925 110631 354000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -693) (undo-tree-id2267 . -1) (#("w" 0 1 (fontified t)) . -694) (undo-tree-id2268 . -1) 695) nil (26711 47925 110630 813000) 0 nil])
([nil nil ((693 . 699)) nil (26711 47925 110628 979000) 0 nil])
([nil nil ((699 . 710)) nil (26711 47925 110628 347000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -709) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) 710) nil (26711 47925 110627 774000) 0 nil])
([nil nil ((709 . 712)) nil (26711 47925 110624 703000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -711) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) 712) nil (26711 47925 110623 873000) 0 nil])
([nil nil ((711 . 717)) nil (26711 47925 110620 192000) 0 nil])
([nil nil ((#("6, " 0 3 (fontified t)) . -714) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -2) (undo-tree-id2244 . -2) (undo-tree-id2245 . -2) (undo-tree-id2246 . -2) (undo-tree-id2247 . -2) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) 717) nil (26711 47925 110619 413000) 0 nil])
([nil nil ((#("6, " 0 3 (fontified t)) . -711) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -2) (undo-tree-id2206 . -2) (undo-tree-id2207 . -2) (undo-tree-id2208 . -2) (undo-tree-id2209 . -2) (undo-tree-id2210 . -3) (undo-tree-id2211 . -3) (undo-tree-id2212 . -3) (undo-tree-id2213 . -3) (undo-tree-id2214 . -3) (undo-tree-id2215 . -3) (undo-tree-id2216 . -3) (undo-tree-id2217 . -3) (undo-tree-id2218 . -3) (undo-tree-id2219 . -3) (undo-tree-id2220 . -3) (undo-tree-id2221 . -3) (undo-tree-id2222 . -3) (undo-tree-id2223 . -3) (undo-tree-id2224 . -3) (undo-tree-id2225 . -3) (undo-tree-id2226 . -3) (undo-tree-id2227 . -3) (undo-tree-id2228 . -3) (undo-tree-id2229 . -3) (undo-tree-id2230 . -3) (undo-tree-id2231 . -3) (undo-tree-id2232 . -3) (undo-tree-id2233 . -3) (undo-tree-id2234 . -3) (undo-tree-id2235 . -3) (undo-tree-id2236 . -3) (undo-tree-id2237 . -3) 714) nil (26711 47925 110610 329000) 0 nil])
([nil nil ((711 . 725)) nil (26711 47925 110591 7000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -723) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (#("p" 0 1 (fontified t)) . -724) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) 725) nil (26711 47925 110589 970000) 0 nil])
([nil nil ((723 . 732)) nil (26711 47925 110455 828000) 0 nil])
([nil nil ((909 . 911)) nil (26711 47925 110455 308000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -910) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) 911) nil (26711 47925 110454 260000) 0 nil])
([nil nil ((910 . 924)) nil (26711 47925 110436 500000) 0 nil])
([nil nil ((930 . 947) (t 26711 47925 113115 719000)) nil (26711 47993 549872 587000) 0 nil])
([nil nil ((947 . 948)) nil (26711 47993 549871 154000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -947) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) 948) nil (26711 47993 549869 489000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -943) (undo-tree-id2402 . -4) (undo-tree-id2403 . -4) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) (undo-tree-id2406 . -4) (undo-tree-id2407 . -4) (undo-tree-id2408 . -4) (undo-tree-id2409 . -4) (undo-tree-id2410 . -4) (undo-tree-id2411 . -4) (undo-tree-id2412 . -4) (undo-tree-id2413 . -4) (undo-tree-id2414 . -4) (undo-tree-id2415 . -4) (undo-tree-id2416 . -4) (undo-tree-id2417 . -4) (undo-tree-id2418 . -4) (undo-tree-id2419 . -4) (undo-tree-id2420 . -4) (undo-tree-id2421 . -4) 947) nil (26711 47993 549857 509000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -939) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) (undo-tree-id2377 . -4) (undo-tree-id2378 . -4) (undo-tree-id2379 . -4) (undo-tree-id2380 . -4) (undo-tree-id2381 . -4) (undo-tree-id2382 . -4) (undo-tree-id2383 . -4) (undo-tree-id2384 . -4) (undo-tree-id2385 . -4) (undo-tree-id2386 . -4) (undo-tree-id2387 . -4) (undo-tree-id2388 . -4) (undo-tree-id2389 . -4) (undo-tree-id2390 . -4) (undo-tree-id2391 . -4) (undo-tree-id2392 . -4) (undo-tree-id2393 . -4) (undo-tree-id2394 . -4) (undo-tree-id2395 . -4) (undo-tree-id2396 . -4) (undo-tree-id2397 . -4) (undo-tree-id2398 . -4) (undo-tree-id2399 . -4) (undo-tree-id2400 . -4) (undo-tree-id2401 . -4) 943) nil (26711 47993 549839 122000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -935) (undo-tree-id2341 . -4) (undo-tree-id2342 . -4) (undo-tree-id2343 . -4) (undo-tree-id2344 . -4) (undo-tree-id2345 . -4) (undo-tree-id2346 . -4) (undo-tree-id2347 . -4) (undo-tree-id2348 . -4) (undo-tree-id2349 . -4) (undo-tree-id2350 . -4) (undo-tree-id2351 . -4) (undo-tree-id2352 . -4) (undo-tree-id2353 . -4) (undo-tree-id2354 . -4) (undo-tree-id2355 . -4) (undo-tree-id2356 . -4) (undo-tree-id2357 . -4) (undo-tree-id2358 . -4) (undo-tree-id2359 . -4) (undo-tree-id2360 . -4) (undo-tree-id2361 . -4) (undo-tree-id2362 . -4) (undo-tree-id2363 . -4) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -4) (undo-tree-id2369 . -4) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) 939) nil (26711 47993 549821 28000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -931) (undo-tree-id2300 . -4) (undo-tree-id2301 . -4) (undo-tree-id2302 . -4) (undo-tree-id2303 . -4) (undo-tree-id2304 . -4) (undo-tree-id2305 . -4) (undo-tree-id2306 . -4) (undo-tree-id2307 . -4) (undo-tree-id2308 . -4) (undo-tree-id2309 . -4) (undo-tree-id2310 . -4) (undo-tree-id2311 . -4) (undo-tree-id2312 . -4) (undo-tree-id2313 . -4) (undo-tree-id2314 . -4) (undo-tree-id2315 . -4) (undo-tree-id2316 . -4) (undo-tree-id2317 . -4) (undo-tree-id2318 . -4) (undo-tree-id2319 . -4) (undo-tree-id2320 . -4) (undo-tree-id2321 . -4) (undo-tree-id2322 . -4) (undo-tree-id2323 . -4) (undo-tree-id2324 . -4) (undo-tree-id2325 . -4) (undo-tree-id2326 . -4) (undo-tree-id2327 . -4) (undo-tree-id2328 . -4) (undo-tree-id2329 . -4) (undo-tree-id2330 . -4) (undo-tree-id2331 . -4) (undo-tree-id2332 . -4) (undo-tree-id2333 . -4) (undo-tree-id2334 . -4) (undo-tree-id2335 . -4) (undo-tree-id2336 . -4) (undo-tree-id2337 . -4) (undo-tree-id2338 . -4) (undo-tree-id2339 . -4) (undo-tree-id2340 . -4) 935) nil (26711 47993 549791 645000) 0 nil])
([nil nil ((931 . 934)) nil (26711 47993 549753 990000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-comment-face fontified t)) . -932) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (#("S" 0 1 (face font-lock-comment-face fontified t)) . -933) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) 934) nil (26711 47993 549752 430000) 0 nil])
([nil nil ((932 . 940)) nil (26711 47993 549726 93000) 0 nil])
([nil nil ((940 . 941)) nil (26711 47993 549721 820000) 0 nil])
([nil nil ((941 . 946) (t 26711 47993 554921 335000)) nil (26711 48015 965127 967000) 0 nil])
([nil nil ((946 . 967)) nil (26711 48015 965126 550000) 0 nil])
([nil nil ((967 . 981)) nil (26711 48015 965125 299000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -979) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (#("g" 0 1 (fontified t)) . -980) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) 981) nil (26711 48015 965122 102000) 0 nil])
([nil nil ((979 . 982)) nil (26711 48015 965089 100000) 0 nil])
([nil nil ((#("range(" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t)) . -976) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -2) (undo-tree-id2600 . -2) (undo-tree-id2601 . -2) (undo-tree-id2602 . -2) (undo-tree-id2603 . -2) (undo-tree-id2604 . -3) (undo-tree-id2605 . -3) (undo-tree-id2606 . -3) (undo-tree-id2607 . -3) (undo-tree-id2608 . -3) (undo-tree-id2609 . -3) (undo-tree-id2610 . -3) (undo-tree-id2611 . -3) (undo-tree-id2612 . -3) (undo-tree-id2613 . -3) (undo-tree-id2614 . -3) (undo-tree-id2615 . -3) (undo-tree-id2616 . -3) (undo-tree-id2617 . -3) (undo-tree-id2618 . -3) (undo-tree-id2619 . -3) (undo-tree-id2620 . -3) (undo-tree-id2621 . -3) (undo-tree-id2622 . -3) (undo-tree-id2623 . -3) (undo-tree-id2624 . -3) (undo-tree-id2625 . -3) (undo-tree-id2626 . -3) (undo-tree-id2627 . -3) (undo-tree-id2628 . -3) (undo-tree-id2629 . -4) (undo-tree-id2630 . -4) (undo-tree-id2631 . -4) (undo-tree-id2632 . -4) (undo-tree-id2633 . -4) (undo-tree-id2634 . -5) (undo-tree-id2635 . -5) (undo-tree-id2636 . -5) (undo-tree-id2637 . -5) (undo-tree-id2638 . -5) (undo-tree-id2639 . -6) (undo-tree-id2640 . -6) (undo-tree-id2641 . -6) (undo-tree-id2642 . -6) (undo-tree-id2643 . -6) (undo-tree-id2644 . -6) 982) nil (26711 48015 965084 58000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -973) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -2) (undo-tree-id2528 . -2) (undo-tree-id2529 . -2) (undo-tree-id2530 . -2) (undo-tree-id2531 . -2) (undo-tree-id2532 . -3) (undo-tree-id2533 . -3) (undo-tree-id2534 . -3) (undo-tree-id2535 . -3) (undo-tree-id2536 . -3) (undo-tree-id2537 . -3) (undo-tree-id2538 . -3) (undo-tree-id2539 . -3) (undo-tree-id2540 . -3) (undo-tree-id2541 . -3) (undo-tree-id2542 . -3) (undo-tree-id2543 . -3) (undo-tree-id2544 . -3) (undo-tree-id2545 . -3) (undo-tree-id2546 . -3) (undo-tree-id2547 . -3) (undo-tree-id2548 . -3) (undo-tree-id2549 . -3) (undo-tree-id2550 . -3) (undo-tree-id2551 . -3) (undo-tree-id2552 . -3) (undo-tree-id2553 . -3) (undo-tree-id2554 . -3) (undo-tree-id2555 . -3) (undo-tree-id2556 . -3) (undo-tree-id2557 . -3) (undo-tree-id2558 . -3) (undo-tree-id2559 . -3) (undo-tree-id2560 . -3) (undo-tree-id2561 . -3) (undo-tree-id2562 . -3) (undo-tree-id2563 . -3) (undo-tree-id2564 . -3) (undo-tree-id2565 . -3) (undo-tree-id2566 . -3) (undo-tree-id2567 . -3) (undo-tree-id2568 . -3) (undo-tree-id2569 . -3) (undo-tree-id2570 . -3) (undo-tree-id2571 . -3) (undo-tree-id2572 . -3) (undo-tree-id2573 . -3) (undo-tree-id2574 . -3) (undo-tree-id2575 . -3) (undo-tree-id2576 . -3) (undo-tree-id2577 . -3) (undo-tree-id2578 . -3) (undo-tree-id2579 . -3) (undo-tree-id2580 . -3) (undo-tree-id2581 . -3) (undo-tree-id2582 . -3) (undo-tree-id2583 . -3) (undo-tree-id2584 . -3) (undo-tree-id2585 . -3) (undo-tree-id2586 . -3) (undo-tree-id2587 . -3) (undo-tree-id2588 . -3) (undo-tree-id2589 . -3) (undo-tree-id2590 . -3) (undo-tree-id2591 . -3) (undo-tree-id2592 . -3) (undo-tree-id2593 . -3) 976) nil (26711 48015 964995 761000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -971) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (undo-tree-id2443 . -2) (undo-tree-id2444 . -2) (undo-tree-id2445 . -2) (undo-tree-id2446 . -2) (undo-tree-id2447 . -2) (undo-tree-id2448 . -2) (undo-tree-id2449 . -2) (undo-tree-id2450 . -2) (undo-tree-id2451 . -2) (undo-tree-id2452 . -2) (undo-tree-id2453 . -2) (undo-tree-id2454 . -2) (undo-tree-id2455 . -2) (undo-tree-id2456 . -2) (undo-tree-id2457 . -2) (undo-tree-id2458 . -2) (undo-tree-id2459 . -2) (undo-tree-id2460 . -2) (undo-tree-id2461 . -2) (undo-tree-id2462 . -2) (undo-tree-id2463 . -2) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (undo-tree-id2466 . -2) (undo-tree-id2467 . -2) (undo-tree-id2468 . -2) (undo-tree-id2469 . -2) (undo-tree-id2470 . -2) (undo-tree-id2471 . -2) (undo-tree-id2472 . -2) (undo-tree-id2473 . -2) (undo-tree-id2474 . -2) (undo-tree-id2475 . -2) (undo-tree-id2476 . -2) (undo-tree-id2477 . -2) (undo-tree-id2478 . -2) (undo-tree-id2479 . -2) (undo-tree-id2480 . -2) (undo-tree-id2481 . -2) (undo-tree-id2482 . -2) (undo-tree-id2483 . -2) (undo-tree-id2484 . -2) (undo-tree-id2485 . -2) (undo-tree-id2486 . -2) (undo-tree-id2487 . -2) (undo-tree-id2488 . -2) (undo-tree-id2489 . -2) (undo-tree-id2490 . -2) (undo-tree-id2491 . -2) (undo-tree-id2492 . -2) (undo-tree-id2493 . -2) (undo-tree-id2494 . -2) (undo-tree-id2495 . -2) (undo-tree-id2496 . -2) (undo-tree-id2497 . -2) (undo-tree-id2498 . -2) (undo-tree-id2499 . -2) (undo-tree-id2500 . -2) (undo-tree-id2501 . -2) (undo-tree-id2502 . -2) (undo-tree-id2503 . -2) (undo-tree-id2504 . -2) (undo-tree-id2505 . -2) (undo-tree-id2506 . -2) (undo-tree-id2507 . -2) (undo-tree-id2508 . -2) (undo-tree-id2509 . -2) (undo-tree-id2510 . -2) (undo-tree-id2511 . -2) (undo-tree-id2512 . -2) (undo-tree-id2513 . -2) (undo-tree-id2514 . -2) (undo-tree-id2515 . -2) (undo-tree-id2516 . -2) (undo-tree-id2517 . -2) (undo-tree-id2518 . -2) (undo-tree-id2519 . -2) (undo-tree-id2520 . -2) (undo-tree-id2521 . -2) 973) nil (26711 48015 964934 783000) 0 nil])
([nil nil ((971 . 981)) nil (26711 48015 964864 225000) 0 nil])
([nil nil ((981 . 987)) nil (26711 48015 964863 98000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -986) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) 987) nil (26711 48015 964861 901000) 0 nil])
([nil nil ((986 . 988)) nil (26711 48015 964848 944000) 0 nil])
([nil nil ((988 . 989)) nil (26711 48015 964844 714000) 0 nil])
([nil nil ((988 . 989) (t 26711 48015 969150 728000)) nil (26711 48031 657637 909000) 0 nil])
([nil nil ((989 . 994)) nil (26711 48031 657637 498000) 0 nil])
([nil nil ((555 . 556)) nil (26711 48031 657636 616000) 0 nil])
([nil nil ((#("def " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . 552) (undo-tree-id2667 . -3) (undo-tree-id2668 . -3) (undo-tree-id2669 . -3) (undo-tree-id2670 . -3) (undo-tree-id2671 . -3) (undo-tree-id2672 . -4) (undo-tree-id2673 . -4) (undo-tree-id2674 . -4) (undo-tree-id2675 . -4) (undo-tree-id2676 . -4) (undo-tree-id2677 . -4) (undo-tree-id2678 . -4) (undo-tree-id2679 . -4) (undo-tree-id2680 . -4) (undo-tree-id2681 . -4) (undo-tree-id2682 . -4) (undo-tree-id2683 . -4) (undo-tree-id2684 . -4) (undo-tree-id2685 . -4) (undo-tree-id2686 . -4) (undo-tree-id2687 . -4) (undo-tree-id2688 . -4)) nil (26711 48035 454674 925000) 0 nil])
([nil nil ((991 . 992) (t 26711 48031 660296 390000)) nil (26711 48046 689826 777000) 0 nil] [nil nil ((#("C = xor_arrays([A[:][y][:] for y in range(5)])
    D = numpy.ones((5, 64), dtype=int)
    A_new = numpy.ones((5, 5, 64), dtype=int)
    for x in range(5):
        for y in range(5):
            for z in range(64):
                D[x][z] = C[x - 1][z] ^ C[x + 1][z - 1]
                A_new[x][y][z] = A[x][y][z] ^ D[x][z]
    

# TESTING
S = [random.randint(0, 1) for _ in range(1600)]
" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t) 4 27 (fontified t) 27 30 (face font-lock-keyword-face fontified t) 30 33 (fontified t) 33 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 41 (face font-lock-builtin-face fontified t) 41 45 (fontified t) 45 46 (fontified t rear-nonsticky t) 46 47 (fontified t) 47 51 (fontified t) 51 52 (face font-lock-variable-name-face fontified t) 52 53 (fontified t) 53 54 (face font-lock-operator-face fontified t) 54 80 (fontified t) 80 81 (face font-lock-operator-face fontified t) 81 84 (face font-lock-builtin-face fontified t) 84 86 (fontified t) 86 90 (fontified t) 90 95 (face font-lock-variable-name-face fontified t) 95 96 (fontified t) 96 97 (face font-lock-operator-face fontified t) 97 126 (fontified t) 126 127 (face font-lock-operator-face fontified t) 127 130 (face font-lock-builtin-face fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 136 (fontified t) 136 139 (face font-lock-keyword-face fontified t) 139 142 (fontified t) 142 144 (face font-lock-keyword-face fontified t) 144 145 (fontified t) 145 150 (face font-lock-builtin-face fontified t) 150 155 (fontified t) 155 163 (fontified t) 163 166 (face font-lock-keyword-face fontified t) 166 169 (fontified t) 169 171 (face font-lock-keyword-face fontified t) 171 172 (fontified t) 172 177 (face font-lock-builtin-face fontified t) 177 181 (fontified t) 181 182 (fontified t) 182 194 (fontified t) 194 197 (face font-lock-keyword-face fontified t) 197 200 (fontified t) 200 202 (face font-lock-keyword-face fontified t) 202 203 (fontified t) 203 208 (face font-lock-builtin-face fontified t) 208 214 (fontified t) 214 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 235 (fontified t) 235 236 (fontified t) 236 238 (fontified t) 238 239 (face font-lock-operator-face fontified t) 239 244 (fontified t) 244 245 (face font-lock-operator-face fontified t) 245 252 (fontified t) 252 253 (face font-lock-operator-face fontified t) 253 258 (fontified t) 258 259 (face font-lock-operator-face fontified t) 259 265 (fontified t) 265 266 (face font-lock-operator-face fontified t) 266 270 (fontified t) 270 301 (fontified t) 301 302 (face font-lock-operator-face fontified t) 302 314 (fontified t) 314 315 (face font-lock-operator-face fontified t) 315 323 (fontified t) 323 324 (fontified t) 324 328 (fontified t) 328 329 (fontified t) 329 330 (fontified t) 330 332 (face font-lock-comment-delimiter-face fontified t) 332 340 (face font-lock-comment-face fontified t) 340 341 (face font-lock-variable-name-face fontified t) 341 342 (fontified t) 342 343 (face font-lock-operator-face fontified t) 343 366 (fontified t) 366 369 (face font-lock-keyword-face fontified t) 369 372 (fontified t) 372 374 (face font-lock-keyword-face fontified t) 374 375 (fontified t) 375 380 (face font-lock-builtin-face fontified t) 380 388 (fontified t)) . 598) (undo-tree-id2689 . -233) (undo-tree-id2690 . -324) (undo-tree-id2691 . -324) (undo-tree-id2692 . -324) (undo-tree-id2693 . -324) (undo-tree-id2694 . -324) (undo-tree-id2695 . -388) (undo-tree-id2696 . -388) (undo-tree-id2697 . -388) (undo-tree-id2698 . -388) (undo-tree-id2699 . -388) (undo-tree-id2700 . -388) (undo-tree-id2701 . -388) (undo-tree-id2702 . -388) (undo-tree-id2703 . -388) 986 (t 26711 48031 660296 390000)) ((598 . 986)) (26711 48035 454492 569000) 0 nil])
([nil nil ((551 . 553)) nil (26711 48058 145626 968000) 0 nil] [nil nil ((#("define plane and lane" 0 21 (face font-lock-comment-face fontified t)) . 530) (undo-tree-id2704 . -21) (undo-tree-id2705 . -21) (undo-tree-id2706 . -21) (undo-tree-id2707 . -21) (undo-tree-id2708 . -21) (undo-tree-id2709 . -21)) ((530 . 551)) (26711 48046 622372 957000) 0 nil])
nil
([nil nil ((553 . 565)) nil (26711 48058 145625 848000) 0 nil])
([nil nil ((530 . 537)) ((#("decide " 0 7 (face font-lock-comment-face fontified t)) . 530) (undo-tree-id2710 . -7)) (26711 48046 622319 891000) 0 nil])
([nil nil ((951 . 952)) nil (26711 48058 145624 336000) 0 nil])
nil
([nil nil ((1007 . 1026)) nil (26711 48058 145620 405000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -505) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (#("]" 0 1 (fontified t)) . -506) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) 507 (t 26711 48058 150319 965000)) nil (26711 48093 108752 542000) 0 nil])
([nil nil ((505 . 507)) nil (26711 48093 108724 580000) 0 nil])
([nil nil ((1000 . 1001) (t 26711 48093 112697 95000)) nil (26711 48117 989711 618000) 0 nil])
([nil nil ((1001 . 1009)) nil (26711 48117 989708 106000) 0 nil])
([nil nil ((1000 . 1001) (t 26711 48117 992872 787000)) nil (26711 48171 526281 285000) 0 nil])
([nil nil ((1001 . 1006)) nil (26711 48171 526280 638000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1050 . 1051) (nil fontified nil 1006 . 1051) (1006 . 1051)) nil (26711 48171 526280 131000) 0 nil])
([nil nil ((#("maxsize" 0 7 (fontified t)) . -1043) (undo-tree-id2756 . -7) 1050) nil (26711 48171 526278 443000) 0 nil])
([nil nil ((#("sys." 0 4 (fontified t)) . -1039) (undo-tree-id2745 . -4) (undo-tree-id2746 . -4) (undo-tree-id2747 . -4) (undo-tree-id2748 . -4) (undo-tree-id2749 . -4) (undo-tree-id2750 . -4) (undo-tree-id2751 . -4) (undo-tree-id2752 . -4) (undo-tree-id2753 . -4) (undo-tree-id2754 . -4) (undo-tree-id2755 . -4) 1043) nil (26711 48171 526275 112000) 0 nil])
([nil nil ((1039 . 1048)) nil (26711 48171 526267 630000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -1048) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) 1049) nil (26711 48171 526266 761000) 0 nil])
([nil nil ((1048 . 1050)) nil (26711 48171 526246 236000) 0 nil])
([nil nil ((1051 . 1055) 1059) nil (26711 48171 526245 200000) 0 nil])
([nil nil ((1064 . 1068) 1076) nil (26711 48171 526240 674000) 0 nil])
([nil nil ((#("set_" 0 4 (fontified t)) . -1012) (undo-tree-id2757 . -4) 1016 (t 26711 48171 531862 968000)) nil (26711 48192 10482 655000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -936) (undo-tree-id2840 . -4) (undo-tree-id2841 . -4) (undo-tree-id2842 . -4) (undo-tree-id2843 . -4) (undo-tree-id2844 . -4) (undo-tree-id2845 . -4) (undo-tree-id2846 . -4) (undo-tree-id2847 . -4) (undo-tree-id2848 . -4) (undo-tree-id2849 . -4) (undo-tree-id2850 . -4) (undo-tree-id2851 . -4) (undo-tree-id2852 . -4) (undo-tree-id2853 . -4) (undo-tree-id2854 . -4) (undo-tree-id2855 . -4) (undo-tree-id2856 . -4) (undo-tree-id2857 . -4) (undo-tree-id2858 . -4) (undo-tree-id2859 . -4) (undo-tree-id2860 . -4) (undo-tree-id2861 . -4) (undo-tree-id2862 . -4) (undo-tree-id2863 . -4) (undo-tree-id2864 . -4) (undo-tree-id2865 . -4) (undo-tree-id2866 . -4) (undo-tree-id2867 . -4) (undo-tree-id2868 . -4) (undo-tree-id2869 . -4) (undo-tree-id2870 . -4) (undo-tree-id2871 . -4) (undo-tree-id2872 . -4) (undo-tree-id2873 . -4) (undo-tree-id2874 . -4) (undo-tree-id2875 . -4) (undo-tree-id2876 . -4) (undo-tree-id2877 . -4) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) (undo-tree-id2882 . -4) (undo-tree-id2883 . -4) (undo-tree-id2884 . -4) (undo-tree-id2885 . -4) (undo-tree-id2886 . -4) (undo-tree-id2887 . -4) (undo-tree-id2888 . -4) (undo-tree-id2889 . -4) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) (undo-tree-id2900 . -4) (undo-tree-id2901 . -4) (undo-tree-id2902 . -4) (undo-tree-id2903 . -4) (undo-tree-id2904 . -4) (undo-tree-id2905 . -4) (undo-tree-id2906 . -4) (undo-tree-id2907 . -4) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -4) (undo-tree-id2915 . -4) (undo-tree-id2916 . -4) (undo-tree-id2917 . -4) (undo-tree-id2918 . -4) (undo-tree-id2919 . -4) (undo-tree-id2920 . -4) 940 (t 26711 48192 13386 220000)) nil (26711 48261 923302 806000) 0 nil])
([nil nil ((936 . 953)) nil (26711 48261 923260 429000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -949) (undo-tree-id2830 . -4) (undo-tree-id2831 . -4) (undo-tree-id2832 . -4) (undo-tree-id2833 . -4) (undo-tree-id2834 . -4) (undo-tree-id2835 . -4) (undo-tree-id2836 . -4) (undo-tree-id2837 . -4) (undo-tree-id2838 . -4) (undo-tree-id2839 . -4) 953) nil (26711 48261 923259 839000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -945) (undo-tree-id2813 . -4) (undo-tree-id2814 . -4) (undo-tree-id2815 . -4) (undo-tree-id2816 . -4) (undo-tree-id2817 . -4) (undo-tree-id2818 . -4) (undo-tree-id2819 . -4) (undo-tree-id2820 . -4) (undo-tree-id2821 . -4) (undo-tree-id2822 . -4) (undo-tree-id2823 . -4) (undo-tree-id2824 . -4) (undo-tree-id2825 . -4) (undo-tree-id2826 . -4) (undo-tree-id2827 . -4) (undo-tree-id2828 . -4) (undo-tree-id2829 . -4) 949) nil (26711 48261 923255 200000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -941) (undo-tree-id2789 . -4) (undo-tree-id2790 . -4) (undo-tree-id2791 . -4) (undo-tree-id2792 . -4) (undo-tree-id2793 . -4) (undo-tree-id2794 . -4) (undo-tree-id2795 . -4) (undo-tree-id2796 . -4) (undo-tree-id2797 . -4) (undo-tree-id2798 . -4) (undo-tree-id2799 . -4) (undo-tree-id2800 . -4) (undo-tree-id2801 . -4) (undo-tree-id2802 . -4) (undo-tree-id2803 . -4) (undo-tree-id2804 . -4) (undo-tree-id2805 . -4) (undo-tree-id2806 . -4) (undo-tree-id2807 . -4) (undo-tree-id2808 . -4) (undo-tree-id2809 . -4) (undo-tree-id2810 . -4) (undo-tree-id2811 . -4) (undo-tree-id2812 . -4) 945) nil (26711 48261 923245 812000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -937) (undo-tree-id2758 . -4) (undo-tree-id2759 . -4) (undo-tree-id2760 . -4) (undo-tree-id2761 . -4) (undo-tree-id2762 . -4) (undo-tree-id2763 . -4) (undo-tree-id2764 . -4) (undo-tree-id2765 . -4) (undo-tree-id2766 . -4) (undo-tree-id2767 . -4) (undo-tree-id2768 . -4) (undo-tree-id2769 . -4) (undo-tree-id2770 . -4) (undo-tree-id2771 . -4) (undo-tree-id2772 . -4) (undo-tree-id2773 . -4) (undo-tree-id2774 . -4) (undo-tree-id2775 . -4) (undo-tree-id2776 . -4) (undo-tree-id2777 . -4) (undo-tree-id2778 . -4) (undo-tree-id2779 . -4) (undo-tree-id2780 . -4) (undo-tree-id2781 . -4) (undo-tree-id2782 . -4) (undo-tree-id2783 . -4) (undo-tree-id2784 . -4) (undo-tree-id2785 . -4) (undo-tree-id2786 . -4) (undo-tree-id2787 . -4) (undo-tree-id2788 . -4) 941) nil (26711 48261 923232 467000) 0 nil])
([nil nil ((937 . 948)) nil (26711 48261 923206 71000) 0 nil])
([nil nil ((948 . 953)) nil (26711 48261 923202 767000) 0 nil])
([nil nil ((953 . 956) (t 26711 48261 926343 901000)) nil (26711 48938 714500 353000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -953) (undo-tree-id2936 . -1) (#("e" 0 1 (fontified t)) . -954) (undo-tree-id2937 . -1) (#("e" 0 1 (fontified t)) . -955) (undo-tree-id2938 . -1) 956) nil (26711 48938 714499 355000) 0 nil])
([nil nil ((825 . 842)) nil (26711 48938 714496 290000) 0 nil])
([nil nil ((842 . 843)) nil (26711 48938 714495 924000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -842) (undo-tree-id2935 . -1) 843) nil (26711 48938 714495 282000) 0 nil])
([nil nil ((842 . 846)) nil (26711 48938 714494 155000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -843) (undo-tree-id2932 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -844) (undo-tree-id2933 . -1) (#(" " 0 1 (fontified t)) . -845) (undo-tree-id2934 . -1) 846) nil (26711 48938 714493 112000) 0 nil])
([nil nil ((843 . 852)) nil (26711 48938 714490 390000) 0 nil])
([nil nil ((852 . 856)) nil (26711 48938 714489 989000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -854) (undo-tree-id2930 . -1) (#("_" 0 1 (fontified t)) . -855) (undo-tree-id2931 . -1) 856) nil (26711 48938 714489 351000) 0 nil])
([nil nil ((854 . 856)) nil (26711 48938 714484 930000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -855) (undo-tree-id2929 . -1) 856) nil (26711 48938 714484 431000) 0 nil])
([nil nil ((153 . 154)) nil (26711 48938 714483 131000) 0 nil])
([nil nil ((154 . 169)) nil (26711 48938 714482 439000) 0 nil])
([nil nil ((169 . 174)) nil (26711 48938 714482 56000) 0 nil])
([nil nil ((174 . 175)) nil (26711 48938 714481 657000) 0 nil])
([nil nil ((174 . 184)) nil (26711 48938 714481 222000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -183) (undo-tree-id2928 . -1) 184) nil (26711 48938 714480 711000) 0 nil])
([nil nil ((183 . 186)) nil (26711 48938 714479 303000) 0 nil])
([nil nil ((186 . 191)) nil (26711 48938 714478 904000) 0 nil])
([nil nil ((191 . 200)) nil (26711 48938 714478 499000) 0 nil])
([nil nil ((200 . 206)) nil (26711 48938 714478 153000) 0 nil])
([nil nil ((206 . 215)) nil (26711 48938 714477 773000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -195) (undo-tree-id2927 . -1) 196) nil (26711 48938 714477 283000) 0 nil])
([nil nil ((195 . 196)) nil (26711 48938 714476 59000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -195) (undo-tree-id2926 . -1) 196) nil (26711 48938 714475 546000) 0 nil])
([nil nil ((195 . 196)) nil (26711 48938 714474 240000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -174) (undo-tree-id2925 . -1) 175) nil (26711 48938 714473 659000) 0 nil])
([nil nil ((174 . 175)) nil (26711 48938 714472 381000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -195) (undo-tree-id2924 . -1) 196) nil (26711 48938 714471 753000) 0 nil])
([nil nil ((195 . 196)) nil (26711 48938 714470 289000) 0 nil])
([nil nil ((215 . 219)) nil (26711 48938 714469 706000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -217) (undo-tree-id2922 . -1) (#(" " 0 1 (fontified t)) . -218) (undo-tree-id2923 . -1) 219) nil (26711 48938 714468 877000) 0 nil])
([nil nil ((217 . 221)) nil (26711 48938 714466 539000) 0 nil])
([nil nil ((221 . 230)) nil (26711 48938 714466 6000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -226) (undo-tree-id2921 . -4) 230) nil (26711 48938 714464 857000) 0 nil])
([nil nil ((226 . 233)) nil (26711 48938 714455 752000) 0 nil])
([nil nil ((233 . 234)) nil (26711 49002 765393 347000) 0 nil])
([nil nil ((937 . 938)) ((#("(" 0 1 (fontified t)) . 937)) (26711 49007 758829 962000) 0 nil])
([nil nil ((938 . 940)) nil (26711 49057 719897 654000) 0 nil] [nil nil ((#("array" 0 5 (fontified t)) . 162) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -4) (undo-tree-id3094 . -4) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4) (undo-tree-id3097 . -4) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (undo-tree-id3100 . -4) (undo-tree-id3101 . -4) (undo-tree-id3102 . -4) (undo-tree-id3103 . -4) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -5) (undo-tree-id3107 . -5) (undo-tree-id3108 . -5) (undo-tree-id3109 . -5) (undo-tree-id3110 . -5) (undo-tree-id3111 . -5) (undo-tree-id3112 . -5) (undo-tree-id3113 . -5) (undo-tree-id3114 . -5) (undo-tree-id3115 . -5)) ((162 . 167)) (26711 49004 479686 230000) 0 nil])
([nil nil ((938 . 939)) nil (26711 49057 719897 334000) 0 nil])
([nil nil ((162 . 167)) ((#("bools" 0 5 (fontified t)) . 162) (undo-tree-id2984 . -5) (undo-tree-id2985 . -5) (undo-tree-id2986 . -5) (undo-tree-id2987 . -5) (undo-tree-id2988 . -5) (undo-tree-id2989 . -5) (undo-tree-id2990 . -5) (undo-tree-id2991 . -5) (undo-tree-id2992 . -5) (undo-tree-id2993 . -5) (undo-tree-id2994 . -5) (undo-tree-id2995 . -5) (undo-tree-id2996 . -5) (undo-tree-id2997 . -5) (undo-tree-id2998 . -5) (undo-tree-id2999 . -5) (undo-tree-id3000 . -5) (undo-tree-id3001 . -5) (undo-tree-id3002 . -5) (undo-tree-id3003 . -5) (undo-tree-id3004 . -5) (undo-tree-id3005 . -5) (undo-tree-id3006 . -5) (undo-tree-id3007 . -5) (undo-tree-id3008 . -5) (undo-tree-id3009 . -5) (undo-tree-id3010 . -5) (undo-tree-id3011 . -5) (undo-tree-id3012 . -5) (undo-tree-id3013 . -5) (undo-tree-id3014 . -5) (undo-tree-id3015 . -5) (undo-tree-id3016 . -5) (undo-tree-id3017 . -5) (undo-tree-id3018 . -5) (undo-tree-id3019 . -5) (undo-tree-id3020 . -5) (undo-tree-id3021 . -5) (undo-tree-id3022 . -5) (undo-tree-id3023 . -5) (undo-tree-id3024 . -5) (undo-tree-id3025 . -5) (undo-tree-id3026 . -5) (undo-tree-id3027 . -5) (undo-tree-id3028 . -5) (undo-tree-id3029 . -5) (undo-tree-id3030 . -5) (undo-tree-id3031 . -5) (undo-tree-id3032 . -5) (undo-tree-id3033 . -5) (undo-tree-id3034 . -5) (undo-tree-id3035 . -5) (undo-tree-id3036 . -5) (undo-tree-id3037 . -5) (undo-tree-id3038 . -5) (undo-tree-id3039 . -5) (undo-tree-id3040 . -5) (undo-tree-id3041 . -5) (undo-tree-id3042 . -5) (undo-tree-id3043 . -5) (undo-tree-id3044 . -5) (undo-tree-id3045 . -5) (undo-tree-id3046 . -5) (undo-tree-id3047 . -5) (undo-tree-id3048 . -5) (undo-tree-id3049 . -5) (undo-tree-id3050 . -5) (undo-tree-id3051 . -5) (undo-tree-id3052 . -5) (undo-tree-id3053 . -5) (undo-tree-id3054 . -5) (undo-tree-id3055 . -5) (undo-tree-id3056 . -5) (undo-tree-id3057 . -5) (undo-tree-id3058 . -5) (undo-tree-id3059 . -5) (undo-tree-id3060 . -5) (undo-tree-id3061 . -5) (undo-tree-id3062 . -5) (undo-tree-id3063 . -5) (undo-tree-id3064 . -5) (undo-tree-id3065 . -5) (undo-tree-id3066 . -5) (undo-tree-id3067 . -5) (undo-tree-id3068 . -5) (undo-tree-id3069 . -5) (undo-tree-id3070 . -5) (undo-tree-id3071 . -5) (undo-tree-id3072 . -5) (undo-tree-id3073 . -5) (undo-tree-id3074 . -5) (undo-tree-id3075 . -5) (undo-tree-id3076 . -5) (undo-tree-id3077 . -5) (undo-tree-id3078 . -5) (undo-tree-id3079 . -5) (undo-tree-id3080 . -5) (undo-tree-id3081 . -5) (undo-tree-id3082 . -5) (undo-tree-id3083 . -5) (undo-tree-id3084 . -5) (undo-tree-id3085 . -5) (undo-tree-id3086 . -5) (undo-tree-id3087 . -5) (undo-tree-id3088 . -5) (undo-tree-id3089 . -5) (undo-tree-id3090 . -5)) (26711 49000 805931 894000) 0 nil])
([nil nil ((941 . 951)) nil (26711 49057 719896 732000) 0 nil])
([nil nil ((#("array" 0 5 (fontified t)) . -178) (undo-tree-id2945 . -5) (undo-tree-id2946 . -5) (undo-tree-id2947 . -5) (undo-tree-id2948 . -5) (undo-tree-id2949 . -5) (undo-tree-id2950 . -5) (undo-tree-id2951 . -5) (undo-tree-id2952 . -5) (undo-tree-id2953 . -5) (undo-tree-id2954 . -5) (undo-tree-id2955 . -5) (undo-tree-id2956 . -5) 183) ((178 . 183)) (26711 49000 539148 398000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -949) (undo-tree-id3147 . -1) (#(" " 0 1 (fontified t)) . -950) (undo-tree-id3148 . -1) 951) nil (26711 49057 719895 858000) 0 nil])
([nil nil ((178 . 179)) ((#("o" 0 1 (fontified t)) . 178) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1)) (26711 49000 244076 526000) 0 nil])
([nil nil ((949 . 969)) nil (26711 49057 719893 691000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -178) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) 179) ((178 . 179)) (26711 49000 21332 515000) 0 nil])
([nil nil ((#("xor_arrays([A[:][y][:] for y in range(5)])" 0 23 (fontified t) 23 26 (face font-lock-keyword-face fontified t) 26 29 (fontified t) 29 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 37 (face font-lock-builtin-face fontified t) 37 41 (fontified t) 41 42 (fontified t rear-nonsticky t)) . 698) (undo-tree-id3146 . -42)) nil (26711 49057 719892 964000) 0 nil])
([nil nil ((178 . 183)) ((#("bools" 0 5 (fontified t)) . 178) (t 26711 48975 633439 131000)) (26711 48975 626576 855000) 0 nil])
([nil nil ((698 . 708)) nil (26711 49057 719891 826000) 0 nil])
nil
([nil nil ((#("y" 0 1 (fontified t)) . -912) (undo-tree-id3145 . -1) 913) nil (26711 49057 719891 102000) 0 nil])
([nil nil ((912 . 913)) nil (26711 49057 719890 41000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -922) (undo-tree-id3144 . -1) 923) nil (26711 49057 719889 467000) 0 nil])
([nil nil ((922 . 923)) nil (26711 49057 719888 360000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -921) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (#("Y" 0 1 (fontified t)) . -922) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) 923) nil (26711 49057 719887 86000) 0 nil])
([nil nil ((921 . 922)) nil (26711 49057 719867 985000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -921) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) 922) nil (26711 49057 719866 812000) 0 nil])
([nil nil ((921 . 923)) nil (26711 49057 719849 999000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -912) (undo-tree-id3157 . -1) 913 (t 26711 49057 725878 197000)) nil (26711 49065 303151 49000) 0 nil])
([nil nil ((912 . 915)) nil (26711 49065 303149 426000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -924) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) 925) nil (26711 49065 303147 912000) 0 nil])
([nil nil ((924 . 927)) nil (26711 49065 303130 528000) 0 nil])
([nil nil ((#("yyy" 0 3 (fontified t)) . -912) (undo-tree-id3166 . -3) 915 (t 26711 49065 308075 612000)) nil (26711 49079 994251 381000) 0 nil])
([nil nil ((912 . 919)) nil (26711 49079 994249 908000) 0 nil])
([nil nil ((#("yyy" 0 3 (fontified t)) . -928) (undo-tree-id3158 . -3) (undo-tree-id3159 . -3) (undo-tree-id3160 . -3) (undo-tree-id3161 . -3) (undo-tree-id3162 . -3) (undo-tree-id3163 . -3) (undo-tree-id3164 . -3) (undo-tree-id3165 . -3) 931) nil (26711 49079 994248 270000) 0 nil])
([nil nil ((928 . 935)) nil (26711 49079 994227 388000) 0 nil])
([nil nil ((#("        for y in range(5):" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 14 (fontified t) 14 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 22 (face font-lock-builtin-face fontified t) 22 26 (fontified t)) . 817) (undo-tree-id3171 . -22) (undo-tree-id3172 . -22) (undo-tree-id3173 . -22) (undo-tree-id3174 . -22) (undo-tree-id3175 . -22) (undo-tree-id3176 . -22) (undo-tree-id3177 . -22) (undo-tree-id3178 . -22) (undo-tree-id3179 . -22) (undo-tree-id3180 . -22) (undo-tree-id3181 . -22) (undo-tree-id3182 . -26) (undo-tree-id3183 . -26) (undo-tree-id3184 . -26) (undo-tree-id3185 . -26) (undo-tree-id3186 . -26) (undo-tree-id3187 . -26) (t 26711 49079 999448 48000)) nil (26711 49112 724697 363000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 817) (undo-tree-id3170 . -1)) nil (26711 49112 724683 17000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -825) 817) nil (26711 49112 724681 319000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -857) 853) nil (26711 49112 724680 690000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -927) (undo-tree-id3169 . -4)) nil (26711 49112 724679 333000) 0 nil])
([nil nil ((966 . 979)) nil (26711 49112 724677 785000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1005 . 1006) (nil fontified nil 1005 . 1006) (nil fontified nil 1001 . 1005) (nil fontified nil 996 . 1001) (nil fontified nil 995 . 996) (nil fontified nil 993 . 995) (nil fontified nil 990 . 993) (nil fontified nil 987 . 990) (nil fontified nil 979 . 987) (979 . 1006)) nil (26711 49112 724677 100000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -979) (undo-tree-id3168 . -8) 967) nil (26711 49112 724675 472000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 998) (undo-tree-id3167 . -1)) nil (26711 49112 724670 224000) 0 nil])
([nil nil ((#("prime" 0 5 (fontified t)) . -879) (undo-tree-id3217 . -5) (undo-tree-id3218 . -5) (undo-tree-id3219 . -5) (undo-tree-id3220 . -5) (undo-tree-id3221 . -5) (undo-tree-id3222 . -5) (undo-tree-id3223 . -5) (undo-tree-id3224 . -5) (undo-tree-id3225 . -5) (undo-tree-id3226 . -5) (undo-tree-id3227 . -5) (undo-tree-id3228 . -5) (undo-tree-id3229 . -5) (undo-tree-id3230 . -5) (undo-tree-id3231 . -5) (undo-tree-id3232 . -5) 884 (t 26711 49112 730236 263000)) nil (26711 49128 765442 312000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -878) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) 879) nil (26711 49128 765430 474000) 0 nil])
([nil nil ((#("prime" 0 5 (fontified t)) . -889) (undo-tree-id3194 . -5) 894) nil (26711 49128 765410 976000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -888) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) 889) nil (26711 49128 765406 159000) 0 nil])
([nil nil ((#("string." 0 7 (face font-lock-comment-face fontified t)) . -380) (undo-tree-id3642 . -7) 387 (t 26711 49128 771604 840000)) nil (26712 60464 962285 51000) 0 nil])
([nil nil ((#("bit " 0 4 (face font-lock-comment-face fontified t)) . -376) (undo-tree-id3635 . -4) (undo-tree-id3636 . -4) (undo-tree-id3637 . -4) (undo-tree-id3638 . -4) (undo-tree-id3639 . -4) (undo-tree-id3640 . -4) (undo-tree-id3641 . -4) 380) nil (26712 60464 962283 977000) 0 nil])
([nil nil ((#("1600-" 0 5 (face font-lock-comment-face fontified t)) . -371) (undo-tree-id3623 . -5) (undo-tree-id3624 . -5) (undo-tree-id3625 . -5) (undo-tree-id3626 . -5) (undo-tree-id3627 . -5) (undo-tree-id3628 . -5) (undo-tree-id3629 . -5) (undo-tree-id3630 . -5) (undo-tree-id3631 . -5) (undo-tree-id3632 . -5) (undo-tree-id3633 . -5) (undo-tree-id3634 . -5) 376) nil (26712 60464 962280 433000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -370) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) 371) nil (26712 60464 962274 107000) 0 nil])
([nil nil ((370 . 383)) nil (26712 60464 962262 175000) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -382) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) 383) nil (26712 60464 962261 641000) 0 nil])
([nil nil ((382 . 403)) nil (26712 60464 962258 649000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -402) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) 403) nil (26712 60464 962258 145000) 0 nil])
([nil nil ((406 . 409) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 393) (391 . 393) (391 . 392) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 391) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (390 . 391) (402 . 404)) nil (26712 60464 962253 464000) 0 nil])
([nil nil ((#("as " 0 3 (face font-lock-comment-face fontified t)) . -406) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -2) (undo-tree-id3566 . -2) (undo-tree-id3567 . -2) (undo-tree-id3568 . -2) (undo-tree-id3569 . -2) (undo-tree-id3570 . -3) (undo-tree-id3571 . -3) (undo-tree-id3572 . -3) (undo-tree-id3573 . -3) (undo-tree-id3574 . -3) (undo-tree-id3575 . -3) (undo-tree-id3576 . -3) (undo-tree-id3577 . -3) (undo-tree-id3578 . -3) (undo-tree-id3579 . -3) (undo-tree-id3580 . -3) (undo-tree-id3581 . -3) 409) nil (26712 60464 962249 329000) 0 nil])
([nil nil ((406 . 407)) nil (26712 60464 962238 807000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -406) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) 407) nil (26712 60464 962238 395000) 0 nil])
([nil nil ((#("represented " 0 12 (face font-lock-comment-face fontified t)) . -394) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -2) (undo-tree-id3446 . -2) (undo-tree-id3447 . -2) (undo-tree-id3448 . -2) (undo-tree-id3449 . -2) (undo-tree-id3450 . -3) (undo-tree-id3451 . -3) (undo-tree-id3452 . -3) (undo-tree-id3453 . -3) (undo-tree-id3454 . -3) (undo-tree-id3455 . -4) (undo-tree-id3456 . -4) (undo-tree-id3457 . -4) (undo-tree-id3458 . -4) (undo-tree-id3459 . -4) (undo-tree-id3460 . -5) (undo-tree-id3461 . -5) (undo-tree-id3462 . -5) (undo-tree-id3463 . -5) (undo-tree-id3464 . -5) (undo-tree-id3465 . -6) (undo-tree-id3466 . -6) (undo-tree-id3467 . -6) (undo-tree-id3468 . -6) (undo-tree-id3469 . -6) (undo-tree-id3470 . -7) (undo-tree-id3471 . -7) (undo-tree-id3472 . -7) (undo-tree-id3473 . -7) (undo-tree-id3474 . -7) (undo-tree-id3475 . -8) (undo-tree-id3476 . -8) (undo-tree-id3477 . -8) (undo-tree-id3478 . -8) (undo-tree-id3479 . -8) (undo-tree-id3480 . -9) (undo-tree-id3481 . -9) (undo-tree-id3482 . -9) (undo-tree-id3483 . -9) (undo-tree-id3484 . -9) (undo-tree-id3485 . -10) (undo-tree-id3486 . -10) (undo-tree-id3487 . -10) (undo-tree-id3488 . -10) (undo-tree-id3489 . -10) (undo-tree-id3490 . -10) (undo-tree-id3491 . -10) (undo-tree-id3492 . -10) (undo-tree-id3493 . -10) (undo-tree-id3494 . -10) (undo-tree-id3495 . -10) (undo-tree-id3496 . -10) (undo-tree-id3497 . -10) (undo-tree-id3498 . -10) (undo-tree-id3499 . -10) (undo-tree-id3500 . -10) (undo-tree-id3501 . -11) (undo-tree-id3502 . -11) (undo-tree-id3503 . -11) (undo-tree-id3504 . -11) (undo-tree-id3505 . -11) (undo-tree-id3506 . -12) (undo-tree-id3507 . -12) (undo-tree-id3508 . -12) (undo-tree-id3509 . -12) (undo-tree-id3510 . -12) (undo-tree-id3511 . -12) (undo-tree-id3512 . -12) (undo-tree-id3513 . -12) (undo-tree-id3514 . -12) (undo-tree-id3515 . -12) (undo-tree-id3516 . -12) (undo-tree-id3517 . -12) (undo-tree-id3518 . -12) (undo-tree-id3519 . -12) (undo-tree-id3520 . -12) (undo-tree-id3521 . -12) (undo-tree-id3522 . -12) (undo-tree-id3523 . -12) (undo-tree-id3524 . -12) (undo-tree-id3525 . -12) (undo-tree-id3526 . -12) (undo-tree-id3527 . -12) (undo-tree-id3528 . -12) (undo-tree-id3529 . -12) (undo-tree-id3530 . -12) (undo-tree-id3531 . -12) (undo-tree-id3532 . -12) (undo-tree-id3533 . -12) (undo-tree-id3534 . -12) (undo-tree-id3535 . -12) (undo-tree-id3536 . -12) (undo-tree-id3537 . -12) (undo-tree-id3538 . -12) (undo-tree-id3539 . -12) (undo-tree-id3540 . -12) (undo-tree-id3541 . -12) (undo-tree-id3542 . -12) (undo-tree-id3543 . -12) (undo-tree-id3544 . -12) (undo-tree-id3545 . -12) (undo-tree-id3546 . -12) (undo-tree-id3547 . -12) (undo-tree-id3548 . -12) (undo-tree-id3549 . -12) (undo-tree-id3550 . -12) (undo-tree-id3551 . -12) (undo-tree-id3552 . -12) (undo-tree-id3553 . -12) 406) nil (26712 60464 962233 465000) 0 nil])
([nil nil ((394 . 415)) nil (26712 60464 962174 141000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . -414) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) 415) nil (26712 60464 962173 493000) 0 nil])
([nil nil ((414 . 416)) nil (26712 60464 962167 457000) 0 nil])
([nil nil ((#("integers" 0 8 (face font-lock-comment-face fontified t)) . -406) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -2) (undo-tree-id3375 . -2) (undo-tree-id3376 . -2) (undo-tree-id3377 . -2) (undo-tree-id3378 . -2) (undo-tree-id3379 . -3) (undo-tree-id3380 . -3) (undo-tree-id3381 . -3) (undo-tree-id3382 . -3) (undo-tree-id3383 . -3) (undo-tree-id3384 . -4) (undo-tree-id3385 . -4) (undo-tree-id3386 . -4) (undo-tree-id3387 . -4) (undo-tree-id3388 . -4) (undo-tree-id3389 . -5) (undo-tree-id3390 . -5) (undo-tree-id3391 . -5) (undo-tree-id3392 . -5) (undo-tree-id3393 . -5) (undo-tree-id3394 . -6) (undo-tree-id3395 . -6) (undo-tree-id3396 . -6) (undo-tree-id3397 . -6) (undo-tree-id3398 . -6) (undo-tree-id3399 . -7) (undo-tree-id3400 . -7) (undo-tree-id3401 . -7) (undo-tree-id3402 . -7) (undo-tree-id3403 . -7) (undo-tree-id3404 . -8) (undo-tree-id3405 . -8) (undo-tree-id3406 . -8) (undo-tree-id3407 . -8) (undo-tree-id3408 . -8) (undo-tree-id3409 . -8) (undo-tree-id3410 . -8) (undo-tree-id3411 . -8) (undo-tree-id3412 . -8) (undo-tree-id3413 . -8) (undo-tree-id3414 . -8) (undo-tree-id3415 . -8) (undo-tree-id3416 . -8) (undo-tree-id3417 . -8) (undo-tree-id3418 . -8) (undo-tree-id3419 . -8) (undo-tree-id3420 . -8) (undo-tree-id3421 . -8) (undo-tree-id3422 . -8) (undo-tree-id3423 . -8) (undo-tree-id3424 . -8) (undo-tree-id3425 . -8) (undo-tree-id3426 . -8) 414) nil (26712 60464 962166 141000) 0 nil])
([nil nil ((#("technically " 0 12 (face font-lock-comment-face fontified t)) . -394) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -2) (undo-tree-id3246 . -2) (undo-tree-id3247 . -2) (undo-tree-id3248 . -2) (undo-tree-id3249 . -2) (undo-tree-id3250 . -3) (undo-tree-id3251 . -3) (undo-tree-id3252 . -3) (undo-tree-id3253 . -3) (undo-tree-id3254 . -3) (undo-tree-id3255 . -4) (undo-tree-id3256 . -4) (undo-tree-id3257 . -4) (undo-tree-id3258 . -4) (undo-tree-id3259 . -4) (undo-tree-id3260 . -5) (undo-tree-id3261 . -5) (undo-tree-id3262 . -5) (undo-tree-id3263 . -5) (undo-tree-id3264 . -5) (undo-tree-id3265 . -6) (undo-tree-id3266 . -6) (undo-tree-id3267 . -6) (undo-tree-id3268 . -6) (undo-tree-id3269 . -6) (undo-tree-id3270 . -7) (undo-tree-id3271 . -7) (undo-tree-id3272 . -7) (undo-tree-id3273 . -7) (undo-tree-id3274 . -7) (undo-tree-id3275 . -8) (undo-tree-id3276 . -8) (undo-tree-id3277 . -8) (undo-tree-id3278 . -8) (undo-tree-id3279 . -8) (undo-tree-id3280 . -9) (undo-tree-id3281 . -9) (undo-tree-id3282 . -9) (undo-tree-id3283 . -9) (undo-tree-id3284 . -9) (undo-tree-id3285 . -10) (undo-tree-id3286 . -10) (undo-tree-id3287 . -10) (undo-tree-id3288 . -10) (undo-tree-id3289 . -10) (undo-tree-id3290 . -11) (undo-tree-id3291 . -11) (undo-tree-id3292 . -11) (undo-tree-id3293 . -11) (undo-tree-id3294 . -11) (undo-tree-id3295 . -11) (undo-tree-id3296 . -11) (undo-tree-id3297 . -11) (undo-tree-id3298 . -11) (undo-tree-id3299 . -11) (undo-tree-id3300 . -12) (undo-tree-id3301 . -12) (undo-tree-id3302 . -12) (undo-tree-id3303 . -12) (undo-tree-id3304 . -12) (undo-tree-id3305 . -12) (undo-tree-id3306 . -12) (undo-tree-id3307 . -12) (undo-tree-id3308 . -12) (undo-tree-id3309 . -12) (undo-tree-id3310 . -12) (undo-tree-id3311 . -12) (undo-tree-id3312 . -12) (undo-tree-id3313 . -12) (undo-tree-id3314 . -12) (undo-tree-id3315 . -12) (undo-tree-id3316 . -12) (undo-tree-id3317 . -12) (undo-tree-id3318 . -12) (undo-tree-id3319 . -12) (undo-tree-id3320 . -12) (undo-tree-id3321 . -12) (undo-tree-id3322 . -12) (undo-tree-id3323 . -12) (undo-tree-id3324 . -12) (undo-tree-id3325 . -12) (undo-tree-id3326 . -12) (undo-tree-id3327 . -12) (undo-tree-id3328 . -12) (undo-tree-id3329 . -12) (undo-tree-id3330 . -12) (undo-tree-id3331 . -12) (undo-tree-id3332 . -12) (undo-tree-id3333 . -12) (undo-tree-id3334 . -12) (undo-tree-id3335 . -12) (undo-tree-id3336 . -12) (undo-tree-id3337 . -12) (undo-tree-id3338 . -12) (undo-tree-id3339 . -12) (undo-tree-id3340 . -12) (undo-tree-id3341 . -12) (undo-tree-id3342 . -12) (undo-tree-id3343 . -12) (undo-tree-id3344 . -12) (undo-tree-id3345 . -12) (undo-tree-id3346 . -12) (undo-tree-id3347 . -12) (undo-tree-id3348 . -12) (undo-tree-id3349 . -12) (undo-tree-id3350 . -12) (undo-tree-id3351 . -12) (undo-tree-id3352 . -12) (undo-tree-id3353 . -12) (undo-tree-id3354 . -12) (undo-tree-id3355 . -12) (undo-tree-id3356 . -12) (undo-tree-id3357 . -12) (undo-tree-id3358 . -12) (undo-tree-id3359 . -12) (undo-tree-id3360 . -12) (undo-tree-id3361 . -12) (undo-tree-id3362 . -12) (undo-tree-id3363 . -12) (undo-tree-id3364 . -12) (undo-tree-id3365 . -12) (undo-tree-id3366 . -12) (undo-tree-id3367 . -12) (undo-tree-id3368 . -12) 406) nil (26712 60464 962137 643000) 0 nil])
([nil nil ((394 . 408)) nil (26712 60464 962070 915000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . -408) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -409) (undo-tree-id3239 . -1) 410) nil (26712 60464 962069 241000) 0 nil])
([nil nil ((408 . 419)) nil (26712 60464 962044 963000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1147) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (#("]" 0 1 (fontified t)) . -1148) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) 1149 (t 26712 60464 966845 398000)) nil (26712 60736 849090 754000) 0 nil])
([nil nil ((1147 . 1149)) nil (26712 60736 849045 156000) 0 nil])
([nil nil ((1089 . 1096) (t 26712 60736 861591 566000)) nil (26712 60761 279728 714000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1095) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1)) ((1095 . 1096) (t 26712 60740 329595 973000)) (26712 60762 48622 933000) 0 nil])
([nil nil ((apply -4 1206 1249 undo--wrap-and-run-primitive-undo 1206 1249 (("    " . 1206) (1225 . 1227) (1206 . 1212) 1245 (t 26712 60740 329595 973000)))) nil (26712 60784 472726 581000) 0 nil] [nil nil ((#("S))" 0 3 (fontified t)) . -1241) (undo-tree-id4111 . -3) (undo-tree-id4112 . -3) (undo-tree-id4113 . -3) (undo-tree-id4114 . -3) (undo-tree-id4115 . -3) (undo-tree-id4116 . -3) (undo-tree-id4117 . -3) (undo-tree-id4118 . -3) (undo-tree-id4119 . -3) (undo-tree-id4120 . -3) (undo-tree-id4121 . -3) (undo-tree-id4122 . -3) (undo-tree-id4123 . -3) (undo-tree-id4124 . -3) (undo-tree-id4125 . -3) (undo-tree-id4126 . -3) (undo-tree-id4127 . -3) (undo-tree-id4128 . -3) (undo-tree-id4129 . -3) (undo-tree-id4130 . -3) (undo-tree-id4131 . -3) (undo-tree-id4132 . -3) (undo-tree-id4133 . -3) (undo-tree-id4134 . -3) (undo-tree-id4135 . -3) (undo-tree-id4136 . -3) (undo-tree-id4137 . -3) (undo-tree-id4138 . -3) (undo-tree-id4139 . -3) (undo-tree-id4140 . -3) (undo-tree-id4141 . -3) (undo-tree-id4142 . -3) (undo-tree-id4143 . -3) (undo-tree-id4144 . -3) (undo-tree-id4145 . -3) (undo-tree-id4146 . -3) (undo-tree-id4147 . -3) (undo-tree-id4148 . -3) (undo-tree-id4149 . -3) (undo-tree-id4150 . -3) (undo-tree-id4151 . -3) (undo-tree-id4152 . -3) (undo-tree-id4153 . -3) (undo-tree-id4154 . -3) (undo-tree-id4155 . -3) (undo-tree-id4156 . -3) (undo-tree-id4157 . -3) (undo-tree-id4158 . -3) (undo-tree-id4159 . -3) (undo-tree-id4160 . -3) (undo-tree-id4161 . -3) (undo-tree-id4162 . -3) (undo-tree-id4163 . -3) (undo-tree-id4164 . -3) (undo-tree-id4165 . -3) (undo-tree-id4166 . -3) (undo-tree-id4167 . -3) (undo-tree-id4168 . -3) (undo-tree-id4169 . -3) (undo-tree-id4170 . -3) (undo-tree-id4171 . -3) (undo-tree-id4172 . -3) (undo-tree-id4173 . -3) (undo-tree-id4174 . -3) (undo-tree-id4175 . -3) (undo-tree-id4176 . -3) (undo-tree-id4177 . -3) (undo-tree-id4178 . -3) (undo-tree-id4179 . -3) (undo-tree-id4180 . -3) (undo-tree-id4181 . -3) (undo-tree-id4182 . -3) (undo-tree-id4183 . -3) (undo-tree-id4184 . -3) (undo-tree-id4185 . -3) (undo-tree-id4186 . -3) (undo-tree-id4187 . -3) (undo-tree-id4188 . -3) (undo-tree-id4189 . -3) (undo-tree-id4190 . -3) (undo-tree-id4191 . -3) (undo-tree-id4192 . -3) (undo-tree-id4193 . -3) (undo-tree-id4194 . -3) (undo-tree-id4195 . -3) (undo-tree-id4196 . -3) (undo-tree-id4197 . -3) (undo-tree-id4198 . -3) (undo-tree-id4199 . -3) (undo-tree-id4200 . -3) (undo-tree-id4201 . -3) (undo-tree-id4202 . -3) (undo-tree-id4203 . -3) (undo-tree-id4204 . -3) (undo-tree-id4205 . -3) (undo-tree-id4206 . -3) 1244 (t 26712 60740 329595 973000)) ((1241 . 1244)) (26712 60760 332677 264000) 0 nil])
([nil nil ((1248 . 1253)) nil (26712 60784 472726 22000) 0 nil])
([nil nil ((#("array(" 0 6 (fontified t)) . -1235) (undo-tree-id4009 . -6) (undo-tree-id4010 . -6) (undo-tree-id4011 . -6) (undo-tree-id4012 . -6) (undo-tree-id4013 . -6) (undo-tree-id4014 . -6) (undo-tree-id4015 . -6) (undo-tree-id4016 . -6) (undo-tree-id4017 . -6) (undo-tree-id4018 . -6) (undo-tree-id4019 . -6) (undo-tree-id4020 . -6) (undo-tree-id4021 . -6) (undo-tree-id4022 . -6) (undo-tree-id4023 . -6) (undo-tree-id4024 . -6) (undo-tree-id4025 . -6) (undo-tree-id4026 . -6) (undo-tree-id4027 . -6) (undo-tree-id4028 . -6) (undo-tree-id4029 . -6) (undo-tree-id4030 . -6) (undo-tree-id4031 . -6) (undo-tree-id4032 . -6) (undo-tree-id4033 . -6) (undo-tree-id4034 . -6) (undo-tree-id4035 . -6) (undo-tree-id4036 . -6) (undo-tree-id4037 . -6) (undo-tree-id4038 . -6) (undo-tree-id4039 . -6) (undo-tree-id4040 . -6) (undo-tree-id4041 . -6) (undo-tree-id4042 . -6) (undo-tree-id4043 . -6) (undo-tree-id4044 . -6) (undo-tree-id4045 . -6) (undo-tree-id4046 . -6) (undo-tree-id4047 . -6) (undo-tree-id4048 . -6) (undo-tree-id4049 . -6) (undo-tree-id4050 . -6) (undo-tree-id4051 . -6) (undo-tree-id4052 . -6) (undo-tree-id4053 . -6) (undo-tree-id4054 . -6) (undo-tree-id4055 . -6) (undo-tree-id4056 . -6) (undo-tree-id4057 . -6) (undo-tree-id4058 . -6) (undo-tree-id4059 . -6) (undo-tree-id4060 . -6) (undo-tree-id4061 . -6) (undo-tree-id4062 . -6) (undo-tree-id4063 . -6) (undo-tree-id4064 . -6) (undo-tree-id4065 . -6) (undo-tree-id4066 . -6) (undo-tree-id4067 . -6) (undo-tree-id4068 . -6) (undo-tree-id4069 . -6) (undo-tree-id4070 . -6) (undo-tree-id4071 . -6) (undo-tree-id4072 . -6) (undo-tree-id4073 . -6) (undo-tree-id4074 . -6) (undo-tree-id4075 . -6) (undo-tree-id4076 . -6) (undo-tree-id4077 . -6) (undo-tree-id4078 . -6) (undo-tree-id4079 . -6) (undo-tree-id4080 . -6) (undo-tree-id4081 . -6) (undo-tree-id4082 . -6) (undo-tree-id4083 . -6) (undo-tree-id4084 . -6) (undo-tree-id4085 . -6) (undo-tree-id4086 . -6) (undo-tree-id4087 . -6) (undo-tree-id4088 . -6) (undo-tree-id4089 . -6) (undo-tree-id4090 . -6) (undo-tree-id4091 . -6) (undo-tree-id4092 . -6) (undo-tree-id4093 . -6) (undo-tree-id4094 . -6) (undo-tree-id4095 . -6) (undo-tree-id4096 . -6) (undo-tree-id4097 . -6) (undo-tree-id4098 . -6) (undo-tree-id4099 . -6) (undo-tree-id4100 . -6) (undo-tree-id4101 . -6) (undo-tree-id4102 . -6) (undo-tree-id4103 . -6) (undo-tree-id4104 . -6) (undo-tree-id4105 . -6) (undo-tree-id4106 . -6) (undo-tree-id4107 . -6) (undo-tree-id4108 . -6) (undo-tree-id4109 . -6) (undo-tree-id4110 . -6) 1241) ((1235 . 1241)) (26712 60759 997236 67000) 0 nil])
([nil nil ((1155 . 1156)) nil (26712 60784 472725 347000) 0 nil])
([nil nil ((#("state_" 0 6 (fontified t)) . -1229) (undo-tree-id3902 . -6) (undo-tree-id3903 . -6) (undo-tree-id3904 . -6) (undo-tree-id3905 . -6) (undo-tree-id3906 . -6) (undo-tree-id3907 . -6) (undo-tree-id3908 . -6) (undo-tree-id3909 . -6) (undo-tree-id3910 . -6) (undo-tree-id3911 . -6) (undo-tree-id3912 . -6) (undo-tree-id3913 . -6) (undo-tree-id3914 . -6) (undo-tree-id3915 . -6) (undo-tree-id3916 . -6) (undo-tree-id3917 . -6) (undo-tree-id3918 . -6) (undo-tree-id3919 . -6) (undo-tree-id3920 . -6) (undo-tree-id3921 . -6) (undo-tree-id3922 . -6) (undo-tree-id3923 . -6) (undo-tree-id3924 . -6) (undo-tree-id3925 . -6) (undo-tree-id3926 . -6) (undo-tree-id3927 . -6) (undo-tree-id3928 . -6) (undo-tree-id3929 . -6) (undo-tree-id3930 . -6) (undo-tree-id3931 . -6) (undo-tree-id3932 . -6) (undo-tree-id3933 . -6) (undo-tree-id3934 . -6) (undo-tree-id3935 . -6) (undo-tree-id3936 . -6) (undo-tree-id3937 . -6) (undo-tree-id3938 . -6) (undo-tree-id3939 . -6) (undo-tree-id3940 . -6) (undo-tree-id3941 . -6) (undo-tree-id3942 . -6) (undo-tree-id3943 . -6) (undo-tree-id3944 . -6) (undo-tree-id3945 . -6) (undo-tree-id3946 . -6) (undo-tree-id3947 . -6) (undo-tree-id3948 . -6) (undo-tree-id3949 . -6) (undo-tree-id3950 . -6) (undo-tree-id3951 . -6) (undo-tree-id3952 . -6) (undo-tree-id3953 . -6) (undo-tree-id3954 . -6) (undo-tree-id3955 . -6) (undo-tree-id3956 . -6) (undo-tree-id3957 . -6) (undo-tree-id3958 . -6) (undo-tree-id3959 . -6) (undo-tree-id3960 . -6) (undo-tree-id3961 . -6) (undo-tree-id3962 . -6) (undo-tree-id3963 . -6) (undo-tree-id3964 . -6) (undo-tree-id3965 . -6) (undo-tree-id3966 . -6) (undo-tree-id3967 . -6) (undo-tree-id3968 . -6) (undo-tree-id3969 . -6) (undo-tree-id3970 . -6) (undo-tree-id3971 . -6) (undo-tree-id3972 . -6) (undo-tree-id3973 . -6) (undo-tree-id3974 . -6) (undo-tree-id3975 . -6) (undo-tree-id3976 . -6) (undo-tree-id3977 . -6) (undo-tree-id3978 . -6) (undo-tree-id3979 . -6) (undo-tree-id3980 . -6) (undo-tree-id3981 . -6) (undo-tree-id3982 . -6) (undo-tree-id3983 . -6) (undo-tree-id3984 . -6) (undo-tree-id3985 . -6) (undo-tree-id3986 . -6) (undo-tree-id3987 . -6) (undo-tree-id3988 . -6) (undo-tree-id3989 . -6) (undo-tree-id3990 . -6) (undo-tree-id3991 . -6) (undo-tree-id3992 . -6) (undo-tree-id3993 . -6) (undo-tree-id3994 . -6) (undo-tree-id3995 . -6) (undo-tree-id3996 . -6) (undo-tree-id3997 . -6) (undo-tree-id3998 . -6) (undo-tree-id3999 . -6) (undo-tree-id4000 . -6) (undo-tree-id4001 . -6) (undo-tree-id4002 . -6) (undo-tree-id4003 . -6) (undo-tree-id4004 . -6) (undo-tree-id4005 . -6) (undo-tree-id4006 . -6) (undo-tree-id4007 . -6) (undo-tree-id4008 . -6) 1235) ((1229 . 1235)) (26712 60759 611829 594000) 0 nil])
([nil nil ((1156 . 1177)) nil (26712 60784 472724 633000) 0 nil])
([nil nil ((#("gen_" 0 4 (fontified t)) . -1225) (undo-tree-id3790 . -4) (undo-tree-id3791 . -4) (undo-tree-id3792 . -4) (undo-tree-id3793 . -4) (undo-tree-id3794 . -4) (undo-tree-id3795 . -4) (undo-tree-id3796 . -4) (undo-tree-id3797 . -4) (undo-tree-id3798 . -4) (undo-tree-id3799 . -4) (undo-tree-id3800 . -4) (undo-tree-id3801 . -4) (undo-tree-id3802 . -4) (undo-tree-id3803 . -4) (undo-tree-id3804 . -4) (undo-tree-id3805 . -4) (undo-tree-id3806 . -4) (undo-tree-id3807 . -4) (undo-tree-id3808 . -4) (undo-tree-id3809 . -4) (undo-tree-id3810 . -4) (undo-tree-id3811 . -4) (undo-tree-id3812 . -4) (undo-tree-id3813 . -4) (undo-tree-id3814 . -4) (undo-tree-id3815 . -4) (undo-tree-id3816 . -4) (undo-tree-id3817 . -4) (undo-tree-id3818 . -4) (undo-tree-id3819 . -4) (undo-tree-id3820 . -4) (undo-tree-id3821 . -4) (undo-tree-id3822 . -4) (undo-tree-id3823 . -4) (undo-tree-id3824 . -4) (undo-tree-id3825 . -4) (undo-tree-id3826 . -4) (undo-tree-id3827 . -4) (undo-tree-id3828 . -4) (undo-tree-id3829 . -4) (undo-tree-id3830 . -4) (undo-tree-id3831 . -4) (undo-tree-id3832 . -4) (undo-tree-id3833 . -4) (undo-tree-id3834 . -4) (undo-tree-id3835 . -4) (undo-tree-id3836 . -4) (undo-tree-id3837 . -4) (undo-tree-id3838 . -4) (undo-tree-id3839 . -4) (undo-tree-id3840 . -4) (undo-tree-id3841 . -4) (undo-tree-id3842 . -4) (undo-tree-id3843 . -4) (undo-tree-id3844 . -4) (undo-tree-id3845 . -4) (undo-tree-id3846 . -4) (undo-tree-id3847 . -4) (undo-tree-id3848 . -4) (undo-tree-id3849 . -4) (undo-tree-id3850 . -4) (undo-tree-id3851 . -4) (undo-tree-id3852 . -4) (undo-tree-id3853 . -4) (undo-tree-id3854 . -4) (undo-tree-id3855 . -4) (undo-tree-id3856 . -4) (undo-tree-id3857 . -4) (undo-tree-id3858 . -4) (undo-tree-id3859 . -4) (undo-tree-id3860 . -4) (undo-tree-id3861 . -4) (undo-tree-id3862 . -4) (undo-tree-id3863 . -4) (undo-tree-id3864 . -4) (undo-tree-id3865 . -4) (undo-tree-id3866 . -4) (undo-tree-id3867 . -4) (undo-tree-id3868 . -4) (undo-tree-id3869 . -4) (undo-tree-id3870 . -4) (undo-tree-id3871 . -4) (undo-tree-id3872 . -4) (undo-tree-id3873 . -4) (undo-tree-id3874 . -4) (undo-tree-id3875 . -4) (undo-tree-id3876 . -4) (undo-tree-id3877 . -4) (undo-tree-id3878 . -4) (undo-tree-id3879 . -4) (undo-tree-id3880 . -4) (undo-tree-id3881 . -4) (undo-tree-id3882 . -4) (undo-tree-id3883 . -4) (undo-tree-id3884 . -4) (undo-tree-id3885 . -4) (undo-tree-id3886 . -4) (undo-tree-id3887 . -4) (undo-tree-id3888 . -4) (undo-tree-id3889 . -4) (undo-tree-id3890 . -4) (undo-tree-id3891 . -4) (undo-tree-id3892 . -4) (undo-tree-id3893 . -4) (undo-tree-id3894 . -4) (undo-tree-id3895 . -4) (undo-tree-id3896 . -4) (undo-tree-id3897 . -4) (undo-tree-id3898 . -4) (undo-tree-id3899 . -4) (undo-tree-id3900 . -4) (undo-tree-id3901 . -4) 1229) ((1225 . 1229)) (26712 60758 980987 119000) 0 nil])
([nil nil ((1177 . 1178)) nil (26712 60784 472724 83000) 0 nil])
([nil nil ((#("print(" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t)) . -1219) (undo-tree-id3673 . -6) (undo-tree-id3674 . -6) (undo-tree-id3675 . -6) (undo-tree-id3676 . -6) (undo-tree-id3677 . -6) (undo-tree-id3678 . -6) (undo-tree-id3679 . -6) (undo-tree-id3680 . -6) (undo-tree-id3681 . -6) (undo-tree-id3682 . -6) (undo-tree-id3683 . -6) (undo-tree-id3684 . -6) (undo-tree-id3685 . -6) (undo-tree-id3686 . -6) (undo-tree-id3687 . -6) (undo-tree-id3688 . -6) (undo-tree-id3689 . -6) (undo-tree-id3690 . -6) (undo-tree-id3691 . -6) (undo-tree-id3692 . -6) (undo-tree-id3693 . -6) (undo-tree-id3694 . -6) (undo-tree-id3695 . -6) (undo-tree-id3696 . -6) (undo-tree-id3697 . -6) (undo-tree-id3698 . -6) (undo-tree-id3699 . -6) (undo-tree-id3700 . -6) (undo-tree-id3701 . -6) (undo-tree-id3702 . -6) (undo-tree-id3703 . -6) (undo-tree-id3704 . -6) (undo-tree-id3705 . -6) (undo-tree-id3706 . -6) (undo-tree-id3707 . -6) (undo-tree-id3708 . -6) (undo-tree-id3709 . -6) (undo-tree-id3710 . -6) (undo-tree-id3711 . -6) (undo-tree-id3712 . -6) (undo-tree-id3713 . -6) (undo-tree-id3714 . -6) (undo-tree-id3715 . -6) (undo-tree-id3716 . -6) (undo-tree-id3717 . -6) (undo-tree-id3718 . -6) (undo-tree-id3719 . -6) (undo-tree-id3720 . -6) (undo-tree-id3721 . -6) (undo-tree-id3722 . -6) (undo-tree-id3723 . -6) (undo-tree-id3724 . -6) (undo-tree-id3725 . -6) (undo-tree-id3726 . -6) (undo-tree-id3727 . -6) (undo-tree-id3728 . -6) (undo-tree-id3729 . -6) (undo-tree-id3730 . -6) (undo-tree-id3731 . -6) (undo-tree-id3732 . -6) (undo-tree-id3733 . -6) (undo-tree-id3734 . -6) (undo-tree-id3735 . -6) (undo-tree-id3736 . -6) (undo-tree-id3737 . -6) (undo-tree-id3738 . -6) (undo-tree-id3739 . -6) (undo-tree-id3740 . -6) (undo-tree-id3741 . -6) (undo-tree-id3742 . -6) (undo-tree-id3743 . -6) (undo-tree-id3744 . -6) (undo-tree-id3745 . -6) (undo-tree-id3746 . -6) (undo-tree-id3747 . -6) (undo-tree-id3748 . -6) (undo-tree-id3749 . -6) (undo-tree-id3750 . -6) (undo-tree-id3751 . -6) (undo-tree-id3752 . -6) (undo-tree-id3753 . -6) (undo-tree-id3754 . -6) (undo-tree-id3755 . -6) (undo-tree-id3756 . -6) (undo-tree-id3757 . -6) (undo-tree-id3758 . -6) (undo-tree-id3759 . -6) (undo-tree-id3760 . -6) (undo-tree-id3761 . -6) (undo-tree-id3762 . -6) (undo-tree-id3763 . -6) (undo-tree-id3764 . -6) (undo-tree-id3765 . -6) (undo-tree-id3766 . -6) (undo-tree-id3767 . -6) (undo-tree-id3768 . -6) (undo-tree-id3769 . -6) (undo-tree-id3770 . -6) (undo-tree-id3771 . -6) (undo-tree-id3772 . -6) (undo-tree-id3773 . -6) (undo-tree-id3774 . -6) (undo-tree-id3775 . -6) (undo-tree-id3776 . -6) (undo-tree-id3777 . -6) (undo-tree-id3778 . -6) (undo-tree-id3779 . -6) (undo-tree-id3780 . -6) (undo-tree-id3781 . -6) (undo-tree-id3782 . -6) (undo-tree-id3783 . -6) (undo-tree-id3784 . -6) (undo-tree-id3785 . -6) (undo-tree-id3786 . -6) (undo-tree-id3787 . -6) (undo-tree-id3788 . -6) (undo-tree-id3789 . -6) 1225) ((1219 . 1225)) (26712 60758 980698 280000) 0 nil])
([nil nil ((1178 . 1179)) nil (26712 60784 472723 80000) 0 nil])
nil
([nil nil ((1179 . 1189)) nil (26712 60784 472722 428000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1188) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) 1189) nil (26712 60784 472721 359000) 0 nil])
([nil nil ((1188 . 1193)) nil (26712 60784 472707 261000) 0 nil])
([nil nil ((1291 . 1301)) nil (26712 60784 472703 265000) 0 nil])
([nil nil ((740 . 760) (t 26712 60784 479665 644000)) nil (26712 60800 349517 535000) 0 nil])
([nil nil ((993 . 994) (t 26712 60800 354696 594000)) nil (26712 60832 706944 546000) 0 nil])
([nil nil ((999 . 1002)) nil (26712 60832 706943 873000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -1001) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) 1002) nil (26712 60832 706942 903000) 0 nil])
([nil nil ((1001 . 1003)) nil (26712 60832 706937 810000) 0 nil])
([nil nil ((1003 . 1004)) nil (26712 60832 706936 955000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1003) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) 1004) nil (26712 60832 706935 417000) 0 nil])
([nil nil ((1003 . 1004)) nil (26712 60832 706916 114000) 0 nil])
([nil nil ((1097 . 1114) (t 26712 60832 713768 772000)) nil (26712 60863 411397 52000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1110) (undo-tree-id4304 . -4) (undo-tree-id4305 . -4) (undo-tree-id4306 . -4) (undo-tree-id4307 . -4) (undo-tree-id4308 . -4) (undo-tree-id4309 . -4) (undo-tree-id4310 . -4) (undo-tree-id4311 . -4) (undo-tree-id4312 . -4) (undo-tree-id4313 . -4) (undo-tree-id4314 . -4) (undo-tree-id4315 . -4) (undo-tree-id4316 . -4) (undo-tree-id4317 . -4) (undo-tree-id4318 . -4) 1114) nil (26712 60863 411396 312000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1106) (undo-tree-id4282 . -4) (undo-tree-id4283 . -4) (undo-tree-id4284 . -4) (undo-tree-id4285 . -4) (undo-tree-id4286 . -4) (undo-tree-id4287 . -4) (undo-tree-id4288 . -4) (undo-tree-id4289 . -4) (undo-tree-id4290 . -4) (undo-tree-id4291 . -4) (undo-tree-id4292 . -4) (undo-tree-id4293 . -4) (undo-tree-id4294 . -4) (undo-tree-id4295 . -4) (undo-tree-id4296 . -4) (undo-tree-id4297 . -4) (undo-tree-id4298 . -4) (undo-tree-id4299 . -4) (undo-tree-id4300 . -4) (undo-tree-id4301 . -4) (undo-tree-id4302 . -4) (undo-tree-id4303 . -4) 1110) nil (26712 60863 411387 323000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1102) (undo-tree-id4253 . -4) (undo-tree-id4254 . -4) (undo-tree-id4255 . -4) (undo-tree-id4256 . -4) (undo-tree-id4257 . -4) (undo-tree-id4258 . -4) (undo-tree-id4259 . -4) (undo-tree-id4260 . -4) (undo-tree-id4261 . -4) (undo-tree-id4262 . -4) (undo-tree-id4263 . -4) (undo-tree-id4264 . -4) (undo-tree-id4265 . -4) (undo-tree-id4266 . -4) (undo-tree-id4267 . -4) (undo-tree-id4268 . -4) (undo-tree-id4269 . -4) (undo-tree-id4270 . -4) (undo-tree-id4271 . -4) (undo-tree-id4272 . -4) (undo-tree-id4273 . -4) (undo-tree-id4274 . -4) (undo-tree-id4275 . -4) (undo-tree-id4276 . -4) (undo-tree-id4277 . -4) (undo-tree-id4278 . -4) (undo-tree-id4279 . -4) (undo-tree-id4280 . -4) (undo-tree-id4281 . -4) 1106) nil (26712 60863 411369 835000) 0 nil])
([nil nil ((1102 . 1113)) nil (26712 60863 411339 608000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1112) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) 1113) nil (26712 60863 411338 166000) 0 nil])
([nil nil ((1112 . 1114)) nil (26712 60863 411319 914000) 0 nil])
([nil nil ((1127 . 1132) (t 26712 60863 418847 980000)) nil (26712 62224 848475 258000) 0 nil])
([nil nil ((1143 . 1149)) nil (26712 62224 848474 683000) 0 nil])
([nil nil ((1132 . 1145)) nil (26712 62224 848474 275000) 0 nil])
([nil nil ((1145 . 1152)) nil (26712 62224 848518 967000) 0 nil])
([nil nil ((#("ones" 0 4 (fontified t)) . -1150) (1154 . 1159) (#("ones" 0 4 (fontified t)) . -821) (825 . 830) (#("ones" 0 4 (fontified t)) . -777) (781 . 786) (#("ones" 0 4 (fontified t)) . -737) (741 . 746) (#("ones" 0 4 (fontified t)) . -458) (462 . 467) 1) nil (26712 62239 319046 795000) 0 nil] [nil nil ((1 . 4)) ((#("rep" 0 3 (fontified t)) . 1) (undo-tree-id4319 . -3)) (26712 62224 848470 408000) 0 nil])
([nil nil ((1157 . 1166) (t 26712 62239 323409 578000)) nil (26712 62532 966092 310000) 0 nil])
nil
([nil nil ((#("7" 0 1 (fontified t)) . -1163) (undo-tree-id4447 . -1) (#("5" 0 1 (fontified t)) . -1164) (undo-tree-id4448 . -1) (#(")" 0 1 (fontified t)) . -1165) (undo-tree-id4449 . -1) 1166) nil (26712 62532 966090 271000) 0 nil])
([nil nil ((1163 . 1164)) nil (26712 62532 966084 886000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1163) (undo-tree-id4446 . -1) 1164) nil (26712 62532 966083 734000) 0 nil])
([nil nil ((1163 . 1168)) nil (26712 62532 966081 120000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1165) (undo-tree-id4443 . -1) (#(" " 0 1 (fontified t)) . -1166) (undo-tree-id4444 . -1) (#("t" 0 1 (fontified t)) . -1167) (undo-tree-id4445 . -1) 1168) nil (26712 62532 966079 33000) 0 nil])
([nil nil ((1165 . 1178)) nil (26712 62532 966073 197000) 0 nil])
([nil nil ((1178 . 1183)) nil (26712 62532 966072 311000) 0 nil])
([nil nil ((1183 . 1190)) nil (26712 62532 966070 895000) 0 nil])
([nil nil ((1184 . 1188)) nil (26712 62532 966069 992000) 0 nil])
([nil nil ((1194 . 1197)) nil (26712 62532 966068 765000) 0 nil])
([nil nil ((1197 . 1204)) nil (26712 62532 966059 528000) 0 nil])
([nil nil ((1204 . 1209)) nil (26712 62532 966058 534000) 0 nil])
([nil nil ((1119 . 1120)) nil (26712 62532 966057 393000) 0 nil])
([nil nil ((1120 . 1122)) nil (26712 62532 966056 240000) 0 nil])
([nil nil ((1122 . 1132)) nil (26712 62532 966054 856000) 0 nil])
([nil nil ((#("takes " 0 6 (face font-lock-comment-face fontified t)) . -1126) (undo-tree-id4442 . -6) 1132) nil (26712 62532 966053 453000) 0 nil])
([nil nil ((#("rho " 0 4 (face font-lock-comment-face fontified t)) . -1122) (undo-tree-id4441 . -4) 1126) nil (26712 62532 966050 493000) 0 nil])
([nil nil ((1122 . 1127)) nil (26712 62532 966047 900000) 0 nil])
([nil nil ((#("turn " 0 5 (face font-lock-comment-face fontified t)) . -1122) (undo-tree-id4440 . -5) 1127) nil (26712 62532 966046 723000) 0 nil])
([nil nil ((1122 . 1123)) nil (26712 62532 966044 408000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1121) (undo-tree-id4438 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1122) (undo-tree-id4439 . -1) 1123) nil (26712 62532 966043 14000) 0 nil])
([nil nil ((1121 . 1127)) nil (26712 62532 966038 645000) 0 nil])
([nil nil ((1127 . 1148)) nil (26712 62532 966037 726000) 0 nil])
([nil nil ((1148 . 1152)) nil (26712 62532 966036 856000) 0 nil])
([nil nil ((708 . 709)) nil (26712 62532 966035 988000) 0 nil])
([nil nil ((709 . 718)) nil (26712 62532 966034 814000) 0 nil])
([nil nil ((718 . 739)) nil (26712 62532 966033 888000) 0 nil])
([nil nil ((739 . 752)) nil (26712 62532 966032 799000) 0 nil])
([nil nil ((752 . 753)) nil (26712 62532 966031 625000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -752) (undo-tree-id4437 . -1) 753) nil (26712 62532 966030 161000) 0 nil])
([nil nil ((752 . 762)) nil (26712 62532 966027 670000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -761) (undo-tree-id4436 . -1) 762) nil (26712 62532 966026 473000) 0 nil])
([nil nil ((761 . 767)) nil (26712 62532 966023 386000) 0 nil])
([nil nil ((767 . 770)) nil (26712 62532 966022 228000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -769) (undo-tree-id4435 . -1) 770) nil (26712 62532 966021 180000) 0 nil])
([nil nil ((769 . 773)) nil (26712 62532 966018 311000) 0 nil])
([nil nil ((730 . 731)) nil (26712 62532 966017 314000) 0 nil])
([nil nil ((731 . 744)) nil (26712 62532 966016 396000) 0 nil])
([nil nil ((#("z) " 0 3 (face font-lock-comment-face fontified t)) . -741) (undo-tree-id4434 . -3) 744) nil (26712 62532 966015 63000) 0 nil])
([nil nil ((#("y, " 0 3 (face font-lock-comment-face fontified t)) . -738) (undo-tree-id4433 . -3) 741) nil (26712 62532 966013 582000) 0 nil])
([nil nil ((#("x, " 0 3 (face font-lock-comment-face fontified t)) . -735) (undo-tree-id4432 . -3) 738) nil (26712 62532 966012 424000) 0 nil])
([nil nil ((#("at (" 0 4 (face font-lock-comment-face fontified t)) . -731) (undo-tree-id4431 . -4) 735) nil (26712 62532 966010 823000) 0 nil])
([nil nil ((731 . 741)) nil (26712 62532 966009 814000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -783) (undo-tree-id4430 . -1) 784) nil (26712 62532 966009 43000) 0 nil])
([nil nil ((#("x - " 0 4 (face font-lock-comment-face fontified t)) . -779) (undo-tree-id4429 . -4) 783) nil (26712 62532 966007 310000) 0 nil])
([nil nil ((#("at (" 0 4 (face font-lock-comment-face fontified t)) . -775) (undo-tree-id4428 . -4) 779) nil (26712 62532 966005 827000) 0 nil])
([nil nil ((#("columns - " 0 10 (face font-lock-comment-face fontified t)) . -765) (undo-tree-id4427 . -10) 775) nil (26712 62532 966004 648000) 0 nil])
([nil nil ((765 . 775)) nil (26712 62532 966003 516000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-comment-face fontified t)) . -773) (undo-tree-id4425 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -774) (undo-tree-id4426 . -1) 775) nil (26712 62532 966002 694000) 0 nil])
([nil nil ((773 . 776)) nil (26712 62532 966000 939000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -773) (undo-tree-id4422 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -774) (undo-tree-id4423 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -775) (undo-tree-id4424 . -1) 776) nil (26712 62532 966000 188000) 0 nil])
([nil nil ((773 . 777)) nil (26712 62532 965997 826000) 0 nil])
([nil nil ((777 . 781)) nil (26712 62532 965997 344000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-comment-face fontified t)) . -779) (undo-tree-id4420 . -1) (#("]" 0 1 (face font-lock-comment-face fontified t)) . -780) (undo-tree-id4421 . -1) 781) nil (26712 62532 965996 634000) 0 nil])
([nil nil ((779 . 786)) nil (26712 62532 965994 759000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -785) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) 786) nil (26712 62532 965993 760000) 0 nil])
([nil nil ((788 . 793) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 777) (775 . 777) (775 . 776) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 775) (774 . 775) (785 . 786)) nil (26712 62532 965987 897000) 0 nil])
([nil nil ((780 . 782)) nil (26712 62532 965987 16000) 0 nil])
([nil nil ((795 . 796)) nil (26712 62532 965986 686000) 0 nil])
([nil nil ((779 . 780)) nil (26712 62532 965986 209000) 0 nil])
([nil nil ((783 . 790)) nil (26712 62532 965985 278000) 0 nil])
([nil nil ((804 . 810)) nil (26712 62532 965984 620000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -806) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (#("+" 0 1 (face font-lock-comment-face fontified t)) . -807) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -808) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -809) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) 810) nil (26712 62532 965981 749000) 0 nil])
([nil nil ((806 . 815)) nil (26712 62532 965920 163000) 0 nil])
([nil nil ((815 . 817)) nil (26712 62532 965919 688000) 0 nil])
([nil nil ((#("{" 0 1 (face font-lock-comment-face fontified t)) . -816) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) 817) nil (26712 62532 965918 577000) 0 nil])
([nil nil ((816 . 823)) nil (26712 62532 965901 949000) 0 nil])
([nil nil ((1357 . 1361) (t 26712 62532 971298 302000)) nil (26712 63203 195385 318000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1360) (undo-tree-id4533 . -1) 1361) nil (26712 63203 195384 614000) 0 nil])
([nil nil ((1360 . 1362)) nil (26712 63203 195383 767000) 0 nil])
([nil nil ((1362 . 1367)) nil (26712 63203 195383 466000) 0 nil])
([nil nil ((1367 . 1372)) nil (26712 63203 195382 949000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1371) (undo-tree-id4532 . -1) 1372) nil (26712 63203 195382 329000) 0 nil])
([nil nil ((#("y = " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -1367) (undo-tree-id4531 . -4) 1371) nil (26712 63203 195381 473000) 0 nil])
([nil nil ((#("1
    " 0 2 (fontified t) 2 6 (fontified t)) . -1361) (undo-tree-id4530 . -6) 1367) nil (26712 63203 195380 518000) 0 nil])
([nil nil ((#("x = " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -1357) (undo-tree-id4529 . -4) 1361) nil (26712 63203 195379 264000) 0 nil])
([nil nil ((1357 . 1377)) nil (26712 63203 195378 116000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -1376) (undo-tree-id4528 . -1) 1377) nil (26712 63203 195377 613000) 0 nil])
([nil nil ((1376 . 1379)) nil (26712 63203 195376 725000) 0 nil])
([nil nil ((1379 . 1388)) nil (26712 63203 195376 132000) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -1372) (undo-tree-id4527 . -3) 1375) nil (26712 63203 195375 215000) 0 nil])
([nil nil ((1352 . 1357)) nil (26712 63203 195374 187000) 0 nil])
([nil nil ((1357 . 1362)) nil (26712 63203 195373 721000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1361) (undo-tree-id4526 . -1) 1362) nil (26712 63203 195373 66000) 0 nil])
([nil nil ((1361 . 1362)) nil (26712 63203 195371 908000) 0 nil])
([nil nil ((1362 . 1367)) nil (26712 63203 195371 387000) 0 nil])
([nil nil ((1367 . 1372)) nil (26712 63203 195370 920000) 0 nil])
([nil nil ((1405 . 1411)) nil (26712 63203 195370 323000) 0 nil])
([nil nil ((#("new[" 0 4 (fontified t)) . -1407) (undo-tree-id4525 . -4) 1411) nil (26712 63203 195369 629000) 0 nil])
([nil nil ((#("A_" 0 2 (fontified t)) . -1405) (undo-tree-id4524 . -2) 1407) nil (26712 63203 195368 116000) 0 nil])
([nil nil ((1405 . 1420)) nil (26712 63203 195367 125000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -1419) (undo-tree-id4523 . -1) 1420) nil (26712 63203 195366 370000) 0 nil])
([nil nil ((1419 . 1424)) nil (26712 63203 195365 216000) 0 nil])
([nil nil ((1424 . 1437)) nil (26712 63203 195364 507000) 0 nil])
([nil nil ((1437 . 1445)) nil (26712 63203 195364 187000) 0 nil])
([nil nil ((#("new = " 0 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-operator-face fontified t) 5 6 (fontified t)) . -1439) (undo-tree-id4522 . -6) 1445) nil (26712 63203 195363 374000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1438) (undo-tree-id4521 . -1) 1439) nil (26712 63203 195362 320000) 0 nil])
([nil nil ((1438 . 1454)) nil (26712 63203 195361 376000) 0 nil])
([nil nil ((1454 . 1463)) nil (26712 63203 195360 815000) 0 nil])
([nil nil ((1463 . 1477)) nil (26712 63203 195360 278000) 0 nil])
([nil nil ((1477 . 1484)) nil (26712 63203 195359 954000) 0 nil])
([nil nil ((1484 . 1491)) nil (26712 63203 195359 309000) 0 nil])
([nil nil ((1491 . 1504)) nil (26712 63203 195358 935000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1500) (undo-tree-id4520 . -4) 1504) nil (26712 63203 195358 119000) 0 nil])
([nil nil ((1500 . 1501)) nil (26712 63203 195357 136000) 0 nil])
([nil nil ((1501 . 1505)) nil (26712 63203 195356 381000) 0 nil])
([nil nil ((1505 . 1514)) nil (26712 63203 195355 855000) 0 nil])
([nil nil ((1514 . 1518)) nil (26712 63203 195355 254000) 0 nil])
([nil nil ((1491 . 1504)) nil (26712 63203 195354 816000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1500) (undo-tree-id4519 . -4) 1504) nil (26712 63203 195353 819000) 0 nil])
([nil nil ((1500 . 1507)) nil (26712 63203 195352 693000) 0 nil])
([nil nil ((#("prime" 0 5 (fontified t)) . -1502) (undo-tree-id4518 . -5) 1507) nil (26712 63203 195351 949000) 0 nil])
([nil nil ((1502 . 1503)) nil (26712 63203 195350 731000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -1502) (undo-tree-id4517 . -1) 1503) nil (26712 63203 195350 60000) 0 nil])
([nil nil ((1502 . 1511)) nil (26712 63203 195349 28000) 0 nil])
([nil nil ((1538 . 1558)) nil (26712 63203 195348 524000) 0 nil])
([nil nil ((1558 . 1559)) nil (26712 63203 195348 153000) 0 nil])
([nil nil ((1559 . 1568)) nil (26712 63203 195347 695000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1564) (undo-tree-id4502 . -4) (undo-tree-id4503 . -4) (undo-tree-id4504 . -4) (undo-tree-id4505 . -4) (undo-tree-id4506 . -4) (undo-tree-id4507 . -4) (undo-tree-id4508 . -4) (undo-tree-id4509 . -4) (undo-tree-id4510 . -4) (undo-tree-id4511 . -4) (undo-tree-id4512 . -4) (undo-tree-id4513 . -4) (undo-tree-id4514 . -4) (undo-tree-id4515 . -4) (undo-tree-id4516 . -4) 1568) nil (26712 63203 195346 852000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1560) (undo-tree-id4480 . -4) (undo-tree-id4481 . -4) (undo-tree-id4482 . -4) (undo-tree-id4483 . -4) (undo-tree-id4484 . -4) (undo-tree-id4485 . -4) (undo-tree-id4486 . -4) (undo-tree-id4487 . -4) (undo-tree-id4488 . -4) (undo-tree-id4489 . -4) (undo-tree-id4490 . -4) (undo-tree-id4491 . -4) (undo-tree-id4492 . -4) (undo-tree-id4493 . -4) (undo-tree-id4494 . -4) (undo-tree-id4495 . -4) (undo-tree-id4496 . -4) (undo-tree-id4497 . -4) (undo-tree-id4498 . -4) (undo-tree-id4499 . -4) (undo-tree-id4500 . -4) (undo-tree-id4501 . -4) 1564) nil (26712 63203 195336 81000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1559) (undo-tree-id4450 . 1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) 1560) nil (26712 63203 195323 375000) 0 nil])
([nil nil ((#("foo = theta(A)" 0 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-operator-face fontified t) 5 14 (fontified t)) . 1660) (undo-tree-id4541 . -14) (undo-tree-id4542 . -14) (undo-tree-id4543 . -14) (undo-tree-id4544 . -14) (undo-tree-id4545 . -14) (undo-tree-id4546 . -14) (undo-tree-id4547 . -14) (undo-tree-id4548 . -14) (undo-tree-id4549 . -14) (undo-tree-id4550 . -14) (undo-tree-id4551 . -14) (undo-tree-id4552 . -14) (undo-tree-id4553 . -14) (undo-tree-id4554 . -14) (undo-tree-id4555 . -14) (undo-tree-id4556 . -14) (undo-tree-id4557 . -14) (undo-tree-id4558 . -14) (undo-tree-id4559 . -14) (undo-tree-id4560 . -14) (undo-tree-id4561 . -14) (undo-tree-id4562 . -14) (undo-tree-id4563 . -14) (undo-tree-id4564 . -14) (undo-tree-id4565 . -14) (undo-tree-id4566 . -14) (t 26712 63203 200179 243000)) nil (26712 63321 81004 897000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1767 . 1768) (nil fontified nil 1759 . 1768) (nil fontified nil 1758 . 1759) (nil fontified nil 1757 . 1758) (nil fontified nil 1754 . 1757) (1754 . 1768)) nil (26712 63321 80991 127000) 0 nil])
([nil nil ((1754 . 1758) 1768) nil (26712 63321 80990 305000) 0 nil])
([nil nil ((1772 . 1773)) nil (26712 63321 80989 895000) 0 nil])
([nil nil ((1787 . 1792)) nil (26712 63321 80989 506000) 0 nil])
([nil nil ((1792 . 1797)) nil (26712 63321 80989 159000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1796) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) 1797) nil (26712 63321 80988 327000) 0 nil])
([nil nil ((1796 . 1799)) nil (26712 63321 80974 85000) 0 nil])
([nil nil ((1799 . 1806)) nil (26712 63321 80973 644000) 0 nil])
([nil nil ((1806 . 1811)) nil (26712 63321 80973 132000) 0 nil])
([nil nil ((1811 . 1821)) nil (26712 63321 80972 404000) 0 nil])
([nil nil ((apply -2 1773 1790 undo--wrap-and-run-primitive-undo 1773 1790 ((1777 . 1779) 1773))) nil (26712 63321 80968 602000) 0 nil])
([nil nil ((1482 . 1483) (t 26712 63321 86654 526000)) nil (26712 63353 613605 359000) 0 nil])
([nil nil ((apply 2 1774 1788 undo--wrap-and-run-primitive-undo 1774 1788 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1778) 1790 (t 26712 63353 620726 750000)))) nil (26712 63389 44020 146000) 0 nil])
([nil nil ((1773 . 1778) (t 26712 63389 49145 224000)) nil (26712 63424 951143 659000) 0 nil])
([nil nil ((1778 . 1799)) nil (26712 63424 951142 903000) 0 nil])
([nil nil ((1799 . 1802)) nil (26712 63424 951142 307000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -1797) (undo-tree-id4568 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -1798) (undo-tree-id4569 . -1) (#("N" 0 1 (face font-lock-string-face fontified t)) . -1799) (undo-tree-id4570 . -1) 1800) nil (26712 63424 951141 544000) 0 nil])
([nil nil ((1797 . 1800)) nil (26712 63424 951139 263000) 0 nil])
([nil nil ((1836 . 1841)) nil (26712 63424 951138 913000) 0 nil])
([nil nil ((1841 . 1844)) nil (26712 63424 951138 450000) 0 nil])
([nil nil ((1844 . 1856)) nil (26712 63424 951137 895000) 0 nil])
([nil nil ((#("RHO" 0 3 (face font-lock-string-face fontified t)) . -1793) (undo-tree-id4567 . -3) 1796) nil (26712 63424 951136 998000) 0 nil])
([nil nil ((1793 . 1798)) nil (26712 63424 951129 498000) 0 nil])
([nil nil ((1858 . 1867)) nil (26712 63424 951125 803000) 0 nil])
([nil nil ((1539 . 1543) (t 26712 63424 956988 649000)) nil (26712 63457 200612 611000) 0 nil])
([nil nil ((1564 . 1565)) nil (26712 63642 254357 313000) 0 nil])
([nil nil ((1463 . 1464) (t 26712 63457 205233 79000)) ((#(" " 0 1 (fontified t)) . 1463)) (26712 63680 262132 82000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1463)) nil (26712 63686 321571 226000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 1463)) ((1463 . 1464)) (26712 63678 58660 663000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1564) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) 1565) nil (26712 63686 321570 292000) 0 nil])
([nil nil ((1466 . 1470) (t 26712 63652 60055 529000)) ((#("int(" 0 3 (face font-lock-builtin-face fontified t) 3 4 (fontified t)) . 1466)) (26712 63677 724315 72000) 0 nil])
([nil nil ((#("int((" 0 3 (face font-lock-builtin-face fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1539) (undo-tree-id4689 . -5) 1544) nil (26712 63686 321557 605000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1495) (undo-tree-id4571 . -1) 1496) ((1495 . 1496)) (26712 63677 357206 665000) 0 nil])
([nil nil ((1539 . 1540) (t 26712 63686 327181 669000)) nil (26712 63709 899036 960000) 0 nil])
([nil nil ((1495 . 1497)) ((#(")]" 0 2 (fontified t)) . 1495) (undo-tree-id4572 . -2) (undo-tree-id4573 . -2) (undo-tree-id4574 . -2) (undo-tree-id4575 . -2) (undo-tree-id4576 . -2) (undo-tree-id4577 . -2) (undo-tree-id4578 . -2) (undo-tree-id4579 . -2) (undo-tree-id4580 . -2) (undo-tree-id4581 . -2) (undo-tree-id4582 . -2) (undo-tree-id4583 . -2) (undo-tree-id4584 . -2) (undo-tree-id4585 . -2) (undo-tree-id4586 . -2) (undo-tree-id4587 . -2) (undo-tree-id4588 . -2) (undo-tree-id4589 . -2) (undo-tree-id4590 . -2) (undo-tree-id4591 . -2) (undo-tree-id4592 . -2) (undo-tree-id4593 . -2) (undo-tree-id4594 . -2) (undo-tree-id4595 . -2) (undo-tree-id4596 . -2) (undo-tree-id4597 . -2) (undo-tree-id4598 . -2) (undo-tree-id4599 . -2) (undo-tree-id4600 . -2) (undo-tree-id4601 . -2) (undo-tree-id4602 . -2) (undo-tree-id4603 . -2) (undo-tree-id4604 . -2) (undo-tree-id4605 . -2) (undo-tree-id4606 . -2) (undo-tree-id4607 . -2) (undo-tree-id4608 . -2) (undo-tree-id4609 . -2) (undo-tree-id4610 . -2) (undo-tree-id4611 . -2) (undo-tree-id4612 . -2) (undo-tree-id4613 . -2) (undo-tree-id4614 . -2) (undo-tree-id4615 . -2) (undo-tree-id4616 . -2) (undo-tree-id4617 . -2) (undo-tree-id4618 . -2) (undo-tree-id4619 . -2) (undo-tree-id4620 . -2) (undo-tree-id4621 . -2) (undo-tree-id4622 . -2) (undo-tree-id4623 . -2) (undo-tree-id4624 . -2) (undo-tree-id4625 . -2) (undo-tree-id4626 . -2) (undo-tree-id4627 . -2) (undo-tree-id4628 . -2) (undo-tree-id4629 . -2) (undo-tree-id4630 . -2) (undo-tree-id4631 . -2) (undo-tree-id4632 . -2) (undo-tree-id4633 . -2) (undo-tree-id4634 . -2) (undo-tree-id4635 . -2) (undo-tree-id4636 . -2) (undo-tree-id4637 . -2) (undo-tree-id4638 . -2) (undo-tree-id4639 . -2) (undo-tree-id4640 . -2) (undo-tree-id4641 . -2) (undo-tree-id4642 . -2) (undo-tree-id4643 . -2) (undo-tree-id4644 . -2) (undo-tree-id4645 . -2) (undo-tree-id4646 . -2) (undo-tree-id4647 . -2) (undo-tree-id4648 . -2) (undo-tree-id4649 . -2) (undo-tree-id4650 . -2) (undo-tree-id4651 . -2) (undo-tree-id4652 . -2) (undo-tree-id4653 . -2) (undo-tree-id4654 . -2) (undo-tree-id4655 . -2) (undo-tree-id4656 . -2) (undo-tree-id4657 . -2) (undo-tree-id4658 . -2) (undo-tree-id4659 . -2) (undo-tree-id4660 . -2) (undo-tree-id4661 . -2) (undo-tree-id4662 . -2) (undo-tree-id4663 . -2) (undo-tree-id4664 . -2) (undo-tree-id4665 . -2) (undo-tree-id4666 . -2) (undo-tree-id4667 . -2) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -2) (undo-tree-id4671 . -2) (undo-tree-id4672 . -2) (undo-tree-id4673 . -2) (undo-tree-id4674 . -2) (undo-tree-id4675 . -2) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) (undo-tree-id4678 . -2) (undo-tree-id4679 . -2) (undo-tree-id4680 . -2) (undo-tree-id4681 . -2) (undo-tree-id4682 . -2) (undo-tree-id4683 . -2) (undo-tree-id4684 . -2) (undo-tree-id4685 . -2) (undo-tree-id4686 . -2) (undo-tree-id4687 . -2) (undo-tree-id4688 . -2) (t 26712 63663 941553 647000)) (26712 63663 934336 892000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1455) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (#("n" 0 1 (fontified t)) . -1456) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (#("e" 0 1 (fontified t)) . -1457) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (#("w" 0 1 (fontified t)) . -1458) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) 1459) nil (26712 63709 899030 532000) 0 nil])
nil
([nil nil ((1574 . 1575) (t 26712 63709 912713 989000)) nil (26712 63794 558126 854000) 0 nil])
([nil nil ((1575 . 1576)) nil (26712 63794 558125 516000) 0 nil])
([nil nil ((1575 . 1585)) nil (26712 63794 558123 492000) 0 nil])
([nil nil ((1585 . 1590)) nil (26712 63794 558122 210000) 0 nil])
([nil nil ((1253 . 1267)) nil (26712 63794 558120 993000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-comment-face fontified t)) . -1265) (undo-tree-id4930 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1266) (undo-tree-id4931 . -1) 1267) nil (26712 63794 558119 481000) 0 nil])
([nil nil ((1265 . 1270)) nil (26712 63794 558107 849000) 0 nil])
([nil nil ((1591 . 1592)) nil (26712 63794 558106 869000) 0 nil])
([nil nil ((1592 . 1598)) nil (26712 63794 558105 672000) 0 nil])
([nil nil ((1598 . 1619)) nil (26712 63794 558104 519000) 0 nil])
([nil nil ((1619 . 1627)) nil (26712 63794 558099 311000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -1626) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) 1627 (t 26712 63794 564362 327000)) nil (26712 63800 540109 272000) 0 nil])
([nil nil ((1626 . 1635)) nil (26712 63800 540101 719000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -1634) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) 1635) nil (26712 63800 540101 184000) 0 nil])
([nil nil ((#("stat" 0 4 (face font-lock-comment-face fontified t)) . -1630) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -2) (undo-tree-id4938 . -2) (undo-tree-id4939 . -2) (undo-tree-id4940 . -2) (undo-tree-id4941 . -2) (undo-tree-id4942 . -3) (undo-tree-id4943 . -3) (undo-tree-id4944 . -3) (undo-tree-id4945 . -3) (undo-tree-id4946 . -3) (undo-tree-id4947 . -4) (undo-tree-id4948 . -4) (undo-tree-id4949 . -4) (undo-tree-id4950 . -4) (undo-tree-id4951 . -4) (undo-tree-id4952 . -4) (undo-tree-id4953 . -4) (undo-tree-id4954 . -4) (undo-tree-id4955 . -4) (undo-tree-id4956 . -4) (undo-tree-id4957 . -4) (undo-tree-id4958 . -4) (undo-tree-id4959 . -4) (undo-tree-id4960 . -4) (undo-tree-id4961 . -4) (undo-tree-id4962 . -4) 1634) nil (26712 63800 540097 149000) 0 nil])
([nil nil ((1630 . 1640)) nil (26712 63800 540051 616000) 0 nil])
([nil nil ((1640 . 1644)) nil (26712 63800 540048 235000) 0 nil])
([nil nil ((1660 . 1681) (t 26712 63800 549840 14000)) nil (26712 65166 981192 729000) 0 nil])
([nil nil ((1681 . 1691)) nil (26712 65166 981192 266000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1690) (undo-tree-id5064 . -1) 1691) nil (26712 65166 981191 903000) 0 nil])
([nil nil ((1690 . 1698)) nil (26712 65166 981191 112000) 0 nil])
([nil nil ((1698 . 1702)) nil (26712 65166 981190 773000) 0 nil])
([nil nil ((1702 . 1707)) nil (26712 65166 981190 541000) 0 nil])
([nil nil ((1707 . 1715)) nil (26712 65166 981190 311000) 0 nil])
([nil nil ((#("iin " 0 4 (fontified t)) . -1711) (undo-tree-id5063 . -4) 1715) nil (26712 65166 981189 874000) 0 nil])
([nil nil ((1711 . 1725)) nil (26712 65166 981189 17000) 0 nil])
([nil nil ((1725 . 1734)) nil (26712 65166 981188 785000) 0 nil])
([nil nil ((1734 . 1737)) nil (26712 65166 981188 403000) 0 nil])
([nil nil ((1737 . 1739)) nil (26712 65166 981188 168000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1738) (undo-tree-id5062 . -1) 1739) nil (26712 65166 981187 819000) 0 nil])
([nil nil ((1738 . 1752)) nil (26712 65166 981186 327000) 0 nil])
([nil nil ((1752 . 1765)) nil (26712 65166 981186 94000) 0 nil])
([nil nil ((1765 . 1780)) nil (26712 65166 981185 858000) 0 nil])
([nil nil ((1780 . 1781)) nil (26712 65166 981185 508000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1780) (undo-tree-id5061 . -1) 1781) nil (26712 65166 981185 78000) 0 nil])
([nil nil ((1780 . 1784)) nil (26712 65166 981184 296000) 0 nil])
([nil nil ((1784 . 1801)) nil (26712 65166 981183 919000) 0 nil])
([nil nil ((1801 . 1818)) nil (26712 65166 981183 684000) 0 nil])
([nil nil ((1818 . 1831)) nil (26712 65166 981183 448000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1830) (undo-tree-id5060 . -1) 1831) nil (26712 65166 981183 5000) 0 nil])
([nil nil ((1830 . 1835)) nil (26712 65166 981182 184000) 0 nil])
([nil nil ((1835 . 1840)) nil (26712 65166 981181 956000) 0 nil])
([nil nil ((1840 . 1857)) nil (26712 65166 981181 596000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1853) (undo-tree-id5059 . -4) 1857) nil (26712 65166 981181 203000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1849) (undo-tree-id5058 . -4) 1853) nil (26712 65166 981180 59000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1845) (undo-tree-id5057 . -4) 1849) nil (26712 65166 981178 988000) 0 nil])
([nil nil ((1845 . 1857)) nil (26712 65166 981178 202000) 0 nil])
([nil nil ((1857 . 1859)) nil (26712 65166 981177 957000) 0 nil])
([nil nil ((1859 . 1870)) nil (26712 65166 981177 729000) 0 nil])
([nil nil ((1870 . 1875)) nil (26712 65166 981177 357000) 0 nil])
([nil nil ((1875 . 1884)) nil (26712 65166 981177 119000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -1881) (undo-tree-id5056 . -3) 1884) nil (26712 65166 981176 686000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -1879) (undo-tree-id5055 . -2) 1881) nil (26712 65166 981175 702000) 0 nil])
([nil nil ((1879 . 1893)) nil (26712 65166 981174 938000) 0 nil])
([nil nil ((1893 . 1902)) nil (26712 65166 981174 707000) 0 nil])
([nil nil ((1902 . 1917)) nil (26712 65166 981174 384000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -1916) (undo-tree-id5054 . -1) 1917) nil (26712 65166 981174 14000) 0 nil])
([nil nil ((1916 . 1920)) nil (26712 65166 981173 186000) 0 nil])
([nil nil ((1920 . 1933)) nil (26712 65166 981172 310000) 0 nil])
([nil nil ((1933 . 1952)) nil (26712 65166 981172 73000) 0 nil])
([nil nil ((1952 . 1969)) nil (26712 65166 981171 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1917 . 1918) (nil fontified nil 1916 . 1918) (nil fontified nil 1913 . 1916) (nil fontified nil 1912 . 1913) (nil fontified nil 1882 . 1912) (nil fontified nil 1881 . 1882) (nil fontified nil 1880 . 1881) (nil fontified nil 1875 . 1880) (nil fontified nil 1871 . 1875) (1871 . 1918)) nil (26712 65166 981171 338000) 0 nil])
([nil nil ((2016 . 2022)) nil (26712 65166 981170 617000) 0 nil])
([nil nil ((2022 . 2026)) nil (26712 65166 981170 371000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -2024) (undo-tree-id5052 . -1) (#("z" 0 1 (fontified t)) . -2025) (undo-tree-id5053 . -1) 2026) nil (26712 65166 981169 799000) 0 nil])
([nil nil ((2024 . 2025)) nil (26712 65166 981168 549000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -2024) (undo-tree-id5051 . -1) 2025) nil (26712 65166 981168 66000) 0 nil])
([nil nil ((2024 . 2036)) nil (26712 65166 981167 249000) 0 nil])
([nil nil ((2036 . 2047)) nil (26712 65166 981167 3000) 0 nil])
([nil nil ((2047 . 2068)) nil (26712 65166 981166 685000) 0 nil])
([nil nil ((2068 . 2069)) nil (26712 65166 981166 392000) 0 nil])
([nil nil ((2069 . 2079)) nil (26712 65166 981165 996000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -2078) (undo-tree-id5050 . -1) 2079) nil (26712 65166 981165 619000) 0 nil])
([nil nil ((2078 . 2088)) nil (26712 65166 981164 765000) 0 nil])
([nil nil ((2088 . 2092)) nil (26712 65166 981164 531000) 0 nil])
([nil nil ((2092 . 2096)) nil (26712 65166 981164 212000) 0 nil])
([nil nil ((#("|" 0 1 (face font-lock-operator-face fontified t)) . -2094) (undo-tree-id5048 . -1) (#(" " 0 1 (fontified t)) . -2095) (undo-tree-id5049 . -1) 2096) nil (26712 65166 981163 703000) 0 nil])
([nil nil ((2094 . 2097)) nil (26712 65166 981162 112000) 0 nil])
([nil nil ((2097 . 2106)) nil (26712 65166 981161 878000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -2104) (undo-tree-id5046 . -1) (#(" " 0 1 (fontified t)) . -2105) (undo-tree-id5047 . -1) 2106) nil (26712 65166 981161 300000) 0 nil])
([nil nil ((2104 . 2115)) nil (26712 65166 981160 29000) 0 nil])
([nil nil ((2115 . 2132)) nil (26712 65166 981159 678000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2128) (undo-tree-id5045 . -4) 2132) nil (26712 65166 981159 202000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2124) (undo-tree-id5044 . -4) 2128) nil (26712 65166 981158 222000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2120) (undo-tree-id5043 . -4) 2124) nil (26712 65166 981157 284000) 0 nil])
([nil nil ((2120 . 2132)) nil (26712 65166 981156 301000) 0 nil])
([nil nil ((2132 . 2133)) nil (26712 65166 981156 73000) 0 nil])
([nil nil ((2133 . 2134)) nil (26712 65166 981155 699000) 0 nil])
([nil nil ((1858 . 1859)) nil (26712 65166 981155 171000) 0 nil])
([nil nil ((1859 . 1875)) nil (26712 65166 981154 753000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1874) (undo-tree-id5042 . -1) 1875) nil (26712 65166 981154 349000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -1873) (undo-tree-id5041 . -1) 1874) nil (26712 65166 981153 287000) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-comment-face fontified t)) . -1870) (undo-tree-id5038 . -1) (#("y" 0 1 (face font-lock-comment-face fontified t)) . -1871) (undo-tree-id5039 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1872) (undo-tree-id5040 . -1) 1873) nil (26712 65166 981151 192000) 0 nil])
([nil nil ((1870 . 1891)) nil (26712 65166 981149 284000) 0 nil])
([nil nil ((1891 . 1897)) nil (26712 65166 981149 50000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-comment-face fontified t)) . -1896) (undo-tree-id5037 . -1) 1897) nil (26712 65166 981148 529000) 0 nil])
([nil nil ((#("to " 0 3 (face font-lock-comment-face fontified t)) . -1893) (undo-tree-id5036 . -3) 1896) nil (26712 65166 981147 101000) 0 nil])
([nil nil ((#("function " 0 9 (face font-lock-comment-face fontified t)) . -1884) (undo-tree-id5035 . -9) 1893) nil (26712 65166 981146 161000) 0 nil])
([nil nil ((1884 . 1885)) nil (26712 65166 981145 171000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -1884) (undo-tree-id5034 . -1) 1885) nil (26712 65166 981144 670000) 0 nil])
([nil nil ((1884 . 1895)) nil (26712 65166 981143 909000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1894) (undo-tree-id5033 . -1) 1895) nil (26712 65166 981143 382000) 0 nil])
([nil nil ((1894 . 1899)) nil (26712 65166 981142 600000) 0 nil])
([nil nil ((1899 . 1903)) nil (26712 65166 981142 281000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -1902) (undo-tree-id5032 . -1) 1903) nil (26712 65166 981141 938000) 0 nil])
([nil nil ((1902 . 1921)) nil (26712 65166 981141 101000) 0 nil])
([nil nil ((#("arry " 0 5 (face font-lock-comment-face fontified t)) . -1916) (undo-tree-id5031 . -5) 1921) nil (26712 65166 981140 729000) 0 nil])
([nil nil ((1916 . 1928)) nil (26712 65166 981139 823000) 0 nil])
([nil nil ((1934 . 1951) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 1930) (1928 . 1930) (1928 . 1929) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 1928) (1927 . 1928) (1928 . 1932)) nil (26712 65166 981139 281000) 0 nil])
([nil nil ((1951 . 1963)) nil (26712 65166 981138 518000) 0 nil])
([nil nil ((2238 . 2239)) nil (26712 65166 981138 283000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2238) (undo-tree-id5030 . -1) 2239) nil (26712 65166 981137 779000) 0 nil])
([nil nil ((2239 . 2247)) nil (26712 65166 981136 947000) 0 nil])
([nil nil ((2247 . 2248) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 2246) (undo-tree-id5029 . -1) (2247 . 2248)) nil (26712 65166 981136 302000) 0 nil])
([nil nil ((2247 . 2257)) nil (26712 65166 981135 397000) 0 nil])
([nil nil ((2257 . 2262)) nil (26712 65166 981135 23000) 0 nil])
([nil nil ((#("# iota:" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 7 (face font-lock-comment-face fontified t)) . 2239)) nil (26712 65166 981134 506000) 0 nil])
([nil nil ((2239 . 2260)) nil (26712 65166 981133 964000) 0 nil])
([nil nil ((126 . 127) (126 . 127)) nil (26712 65166 981133 588000) 0 nil])
([nil nil ((126 . 127)) nil (26712 65166 981133 144000) 0 nil])
([nil nil ((127 . 135)) nil (26712 65166 981132 838000) 0 nil])
([nil nil ((#("Ke" 0 2 (face font-lock-comment-face fontified t)) . -133) (undo-tree-id5028 . -2) 135) nil (26712 65166 981132 381000) 0 nil])
([nil nil ((133 . 146)) nil (26712 65166 981131 226000) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -144) (undo-tree-id5026 . -1) (#("3" 0 1 (face font-lock-comment-face fontified t)) . -145) (undo-tree-id5027 . -1) 146) nil (26712 65166 981130 621000) 0 nil])
([nil nil ((144 . 149)) nil (26712 65166 981129 8000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -148) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) 149) nil (26712 65166 981128 367000) 0 nil])
([nil nil ((148 . 169)) nil (26712 65166 981121 551000) 0 nil])
([nil nil ((169 . 170)) nil (26712 65166 981121 299000) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . -168) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (#("2" 0 1 (face font-lock-comment-face fontified t)) . -169) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) 170) nil (26712 65166 981120 488000) 0 nil])
([nil nil ((168 . 172)) nil (26712 65166 981106 942000) 0 nil])
([nil nil ((172 . 177)) nil (26712 65166 981106 562000) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -176) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) 177) nil (26712 65166 981105 251000) 0 nil])
([nil nil ((176 . 178)) nil (26712 65195 142676 422000) 0 nil])
([nil nil ((2330 . 2336) (t 26712 65166 987135 625000)) nil (26712 65253 407467 332000) 0 nil] [nil nil ((1444 . 1445) (t 26712 65166 987135 625000)) ((#("n" 0 1 (fontified t)) . 1444) (undo-tree-id5065 . -1)) (26712 65195 142532 589000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2334) (undo-tree-id5080 . -1) (#("^" 0 1 (face font-lock-operator-face fontified t)) . -2335) (undo-tree-id5081 . -1) 2336) nil (26712 65253 407466 768000) 0 nil])
nil
([nil nil ((2334 . 2346)) nil (26712 65253 407465 365000) 0 nil])
([nil nil ((2346 . 2355)) nil (26712 65253 407465 49000) 0 nil])
([nil nil ((2355 . 2363)) nil (26712 65253 407464 779000) 0 nil])
([nil nil ((2363 . 2368)) nil (26712 65253 407464 427000) 0 nil])
([nil nil ((2368 . 2373)) nil (26712 65253 407464 186000) 0 nil])
([nil nil ((2373 . 2380)) nil (26712 65253 407463 857000) 0 nil])
([nil nil ((2380 . 2381)) nil (26712 65253 407463 558000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2380) (undo-tree-id5079 . -1) 2381) nil (26712 65253 407462 996000) 0 nil])
([nil nil ((2380 . 2385)) nil (26712 65253 407461 904000) 0 nil])
([nil nil ((2385 . 2389)) nil (26712 65253 407461 528000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2396 . 2397) (nil fontified nil 2389 . 2397) (2389 . 2397)) nil (26712 65253 468640 350000) 0 nil])
([nil nil ((#("    R = 10000000" 0 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (fontified t) 8 15 (fontified t) 15 16 (fontified t rear-nonsticky t)) . 2381) (undo-tree-id5093 . -8) (undo-tree-id5094 . -16) (undo-tree-id5095 . -16) (undo-tree-id5096 . -16) (undo-tree-id5097 . -16) (undo-tree-id5098 . -16) (undo-tree-id5099 . -16)) nil (26712 65299 674971 659000) 0 nil] [nil nil ((#("    R = 10000000" 0 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 16 (fontified t)) . 2364) (undo-tree-id5067 . -16) (undo-tree-id5068 . -16) (undo-tree-id5069 . -16) (undo-tree-id5070 . -16) (undo-tree-id5071 . -16) (undo-tree-id5072 . -16) (undo-tree-id5073 . -16) (undo-tree-id5074 . -16) (undo-tree-id5075 . -16) (undo-tree-id5076 . -16) (undo-tree-id5077 . -16) (undo-tree-id5078 . -16)) ((2364 . 2380)) (26712 65253 407524 582000) 0 nil])
([nil nil ((2381 . 2385)) nil (26712 65299 674966 406000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2364) (undo-tree-id5066 . -1)) ((2364 . 2365)) (26712 65253 407450 449000) 0 nil])
([nil nil ((2385 . 2396)) nil (26712 65299 674965 941000) 0 nil])
nil
([nil nil ((2396 . 2402)) nil (26712 65299 674965 526000) 0 nil])
([nil nil ((#("%" 0 1 (face font-lock-operator-face fontified t)) . -2401) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) 2402) nil (26712 65299 674964 418000) 0 nil])
([nil nil ((2401 . 2405)) nil (26712 65299 674948 555000) 0 nil])
([nil nil ((2405 . 2409)) nil (26712 65299 674948 182000) 0 nil])
([nil nil ((2409 . 2418)) nil (26712 65299 674947 705000) 0 nil])
([nil nil ((2372 . 2373)) nil (26712 65299 674947 8000) 0 nil])
([nil nil ((2374 . 2376)) nil (26712 65299 674946 608000) 0 nil])
([nil nil ((2377 . 2379)) nil (26712 65299 674946 80000) 0 nil])
([nil nil ((2380 . 2382)) nil (26712 65299 674945 697000) 0 nil])
([nil nil ((2383 . 2385)) nil (26712 65299 674945 261000) 0 nil])
([nil nil ((2386 . 2388)) nil (26712 65299 674944 750000) 0 nil])
([nil nil ((2389 . 2391)) nil (26712 65299 674943 832000) 0 nil])
([nil nil ((2392 . 2394)) nil (26712 65299 674942 942000) 0 nil])
([nil nil ((2395 . 2396)) nil (26712 65299 674939 97000) 0 nil])
([nil nil ((2434 . 2441) (t 26712 65299 682103 867000)) nil (26712 65460 652648 255000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2439) (undo-tree-id5116 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -2440) (undo-tree-id5117 . -1) 2441) nil (26712 65460 652647 516000) 0 nil])
([nil nil ((2439 . 2452)) nil (26712 65460 652646 205000) 0 nil])
([nil nil ((2452 . 2461)) nil (26712 65460 652645 885000) 0 nil])
([nil nil ((2461 . 2470)) nil (26712 65460 652645 659000) 0 nil])
([nil nil ((2470 . 2479)) nil (26712 65460 652645 333000) 0 nil])
([nil nil ((2479 . 2488)) nil (26712 65460 652645 91000) 0 nil])
([nil nil ((2488 . 2500)) nil (26712 65460 652644 769000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2499) (undo-tree-id5115 . -1) 2500) nil (26712 65460 652644 359000) 0 nil])
([nil nil ((2499 . 2506)) nil (26712 65460 652643 271000) 0 nil])
([nil nil ((2506 . 2515)) nil (26712 65460 652642 673000) 0 nil])
([nil nil ((2425 . 2434)) nil (26712 65460 652642 180000) 0 nil])
([nil nil ((2434 . 2441)) nil (26712 65460 652641 890000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -2439) (undo-tree-id5113 . -1) (#(" " 0 1 (fontified t)) . -2440) (undo-tree-id5114 . -1) 2441) nil (26712 65460 652641 318000) 0 nil])
([nil nil ((2439 . 2445)) nil (26712 65460 652639 815000) 0 nil])
([nil nil ((2526 . 2535)) nil (26712 65460 652639 523000) 0 nil])
([nil nil ((2535 . 2545)) nil (26712 65460 652639 124000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -2544) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) 2545) nil (26712 65460 652638 351000) 0 nil])
([nil nil ((2544 . 2553)) nil (26712 65460 652622 161000) 0 nil])
([nil nil ((2553 . 2562)) nil (26712 65460 652621 792000) 0 nil])
([nil nil ((2562 . 2566)) nil (26712 65460 652621 121000) 0 nil])
([nil nil ((2566 . 2571)) nil (26712 65460 652617 360000) 0 nil])
([nil nil ((2571 . 2580) (t 26712 65460 658229 698000)) nil (26712 65486 85166 5000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2576) (undo-tree-id5118 . -4) (undo-tree-id5119 . -4) (undo-tree-id5120 . -4) (undo-tree-id5121 . -4) (undo-tree-id5122 . -4) (undo-tree-id5123 . -4) (undo-tree-id5124 . -4) (undo-tree-id5125 . -4) (undo-tree-id5126 . -4) (undo-tree-id5127 . -4) (undo-tree-id5128 . -4) (undo-tree-id5129 . -4) (undo-tree-id5130 . -4) (undo-tree-id5131 . -4) (undo-tree-id5132 . -4) (undo-tree-id5133 . -4) (undo-tree-id5134 . -4) (undo-tree-id5135 . -4) (undo-tree-id5136 . -4) (undo-tree-id5137 . -4) 2580) nil (26712 65486 85164 327000) 0 nil])
([nil nil ((2576 . 2587)) nil (26712 65486 85135 633000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -2589) (2588 . 2589) (t 26712 65486 93204 49000)) nil (26713 930 951932 782000) 0 nil])
([nil nil ((2589 . 2594)) nil (26713 930 951932 362000) 0 nil])
([nil nil ((#("io" 0 2 (fontified t)) . -2592) (undo-tree-id5157 . -2) 2594) nil (26713 930 951931 949000) 0 nil])
([nil nil ((#("df " 0 3 (fontified t)) . -2589) (undo-tree-id5156 . -3) 2592) nil (26713 930 951931 18000) 0 nil])
([nil nil ((2589 . 2606)) nil (26713 930 951930 131000) 0 nil])
([nil nil ((2606 . 2611)) nil (26713 930 951929 837000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2603) (undo-tree-id5155 . -1) 2604) nil (26713 930 951929 358000) 0 nil])
([nil nil ((#("i_" 0 2 (fontified t)) . -2601) (undo-tree-id5154 . -2) 2603) nil (26713 930 951928 342000) 0 nil])
([nil nil ((2601 . 2612)) nil (26713 930 951927 400000) 0 nil])
([nil nil ((2619 . 2623)) nil (26713 930 951927 28000) 0 nil])
([nil nil ((#("for " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -2619) (undo-tree-id5138 . -4) (undo-tree-id5139 . -4) (undo-tree-id5140 . -4) (undo-tree-id5141 . -4) (undo-tree-id5142 . -4) (undo-tree-id5143 . -4) (undo-tree-id5144 . -4) (undo-tree-id5145 . -4) (undo-tree-id5146 . -4) (undo-tree-id5147 . -4) (undo-tree-id5148 . -4) (undo-tree-id5149 . -4) (undo-tree-id5150 . -4) (undo-tree-id5151 . -4) (undo-tree-id5152 . -4) (undo-tree-id5153 . -4) 2623) nil (26713 930 951925 751000) 0 nil])
([nil nil ((2619 . 2635)) nil (26713 930 951907 259000) 0 nil])
([nil nil ((2635 . 2640)) nil (26713 930 951903 528000) 0 nil])
([nil nil ((2640 . 2641) (t 26713 930 958385 155000)) nil (26713 1136 340770 219000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t)) . -2640) (undo-tree-id5468 . -1) 2641) nil (26713 1136 340769 692000) 0 nil])
([nil nil ((2640 . 2649)) nil (26713 1136 340768 932000) 0 nil])
([nil nil ((2645 . 2657)) nil (26713 1136 340768 711000) 0 nil])
([nil nil ((2661 . 2664)) nil (26713 1136 340768 418000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2663) (undo-tree-id5467 . -1) 2664) nil (26713 1136 340768 30000) 0 nil])
([nil nil ((2663 . 2675)) nil (26713 1136 340767 281000) 0 nil])
([nil nil ((2676 . 2680)) nil (26713 1136 340767 60000) 0 nil])
([nil nil ((2680 . 2681)) nil (26713 1136 340766 842000) 0 nil])
([nil nil ((2680 . 2696)) nil (26713 1136 340766 622000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -2695) (undo-tree-id5466 . -1) 2696) nil (26713 1136 340766 179000) 0 nil])
([nil nil ((2695 . 2698)) nil (26713 1136 340765 456000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -2696) (undo-tree-id5464 . -1) (#(":" 0 1 (fontified t)) . -2697) (undo-tree-id5465 . -1) 2698) nil (26713 1136 340764 967000) 0 nil])
([nil nil ((2696 . 2698)) nil (26713 1136 340763 676000) 0 nil])
([nil nil ((2698 . 2707)) nil (26713 1136 340763 405000) 0 nil])
([nil nil ((2707 . 2708)) nil (26713 1136 340763 185000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -2707) (undo-tree-id5463 . -1) 2708) nil (26713 1136 340762 771000) 0 nil])
([nil nil ((2707 . 2710)) nil (26713 1136 340761 958000) 0 nil])
([nil nil ((#("rc" 0 2 (face font-lock-variable-name-face fontified t)) . -2640) (undo-tree-id5462 . -2) 2642) nil (26713 1136 340761 661000) 0 nil])
([nil nil ((2640 . 2642)) nil (26713 1136 340760 804000) 0 nil])
([nil nil ((#("rc[" 0 3 (fontified t)) . -2707) (undo-tree-id5461 . -3) 2710) nil (26713 1136 340760 335000) 0 nil])
([nil nil ((2707 . 2710)) nil (26713 1136 340759 556000) 0 nil])
([nil nil ((2710 . 2722)) nil (26713 1136 340759 129000) 0 nil])
([nil nil ((2722 . 2725)) nil (26713 1136 340758 713000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -2724) (undo-tree-id5460 . -1) 2725) nil (26713 1136 340758 390000) 0 nil])
([nil nil ((2724 . 2733)) nil (26713 1136 340756 989000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2731) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (#("_" 0 1 (fontified t)) . -2732) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) 2733) nil (26713 1136 340755 719000) 0 nil])
([nil nil ((2731 . 2743)) nil (26713 1136 340740 216000) 0 nil])
([nil nil ((2743 . 2752)) nil (26713 1136 340739 878000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2748) (undo-tree-id5408 . -4) (undo-tree-id5409 . -4) (undo-tree-id5410 . -4) (undo-tree-id5411 . -4) (undo-tree-id5412 . -4) (undo-tree-id5413 . -4) (undo-tree-id5414 . -4) (undo-tree-id5415 . -4) (undo-tree-id5416 . -4) (undo-tree-id5417 . -4) (undo-tree-id5418 . -4) (undo-tree-id5419 . -4) (undo-tree-id5420 . -4) (undo-tree-id5421 . -4) (undo-tree-id5422 . -4) (undo-tree-id5423 . -4) (undo-tree-id5424 . -4) (undo-tree-id5425 . -4) (undo-tree-id5426 . -4) (undo-tree-id5427 . -4) 2752) nil (26713 1136 340739 194000) 0 nil])
([nil nil ((2748 . 2763)) nil (26713 1136 340729 635000) 0 nil])
([nil nil ((2763 . 2767)) nil (26713 1136 340729 183000) 0 nil])
([nil nil ((2767 . 2776)) nil (26713 1136 340728 788000) 0 nil])
([nil nil ((2776 . 2778)) nil (26713 1136 340728 506000) 0 nil])
([nil nil ((#("    for z in range(64):" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 10 (fontified t) 10 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 18 (face font-lock-builtin-face fontified t) 18 23 (fontified t)) . 2744) (undo-tree-id5242 . -4) (undo-tree-id5243 . -4) (undo-tree-id5244 . -4) (undo-tree-id5245 . -4) (undo-tree-id5246 . -4) (undo-tree-id5247 . -4) (undo-tree-id5248 . -4) (undo-tree-id5249 . -4) (undo-tree-id5250 . -4) (undo-tree-id5251 . -4) (undo-tree-id5252 . -4) (undo-tree-id5253 . -4) (undo-tree-id5254 . -4) (undo-tree-id5255 . -4) (undo-tree-id5256 . -4) (undo-tree-id5257 . -4) (undo-tree-id5258 . -4) (undo-tree-id5259 . -4) (undo-tree-id5260 . -4) (undo-tree-id5261 . -4) (undo-tree-id5262 . -4) (undo-tree-id5263 . -4) (undo-tree-id5264 . -4) (undo-tree-id5265 . -4) (undo-tree-id5266 . -4) (undo-tree-id5267 . -4) (undo-tree-id5268 . -4) (undo-tree-id5269 . -4) (undo-tree-id5270 . -4) (undo-tree-id5271 . -5) (undo-tree-id5272 . -5) (undo-tree-id5273 . -5) (undo-tree-id5274 . -5) (undo-tree-id5275 . -5) (undo-tree-id5276 . -6) (undo-tree-id5277 . -6) (undo-tree-id5278 . -6) (undo-tree-id5279 . -6) (undo-tree-id5280 . -6) (undo-tree-id5281 . -7) (undo-tree-id5282 . -7) (undo-tree-id5283 . -7) (undo-tree-id5284 . -7) (undo-tree-id5285 . -7) (undo-tree-id5286 . -8) (undo-tree-id5287 . -8) (undo-tree-id5288 . -8) (undo-tree-id5289 . -8) (undo-tree-id5290 . -8) (undo-tree-id5291 . -8) (undo-tree-id5292 . -8) (undo-tree-id5293 . -8) (undo-tree-id5294 . -8) (undo-tree-id5295 . -8) (undo-tree-id5296 . -8) (undo-tree-id5297 . -9) (undo-tree-id5298 . -9) (undo-tree-id5299 . -9) (undo-tree-id5300 . -9) (undo-tree-id5301 . -9) (undo-tree-id5302 . -10) (undo-tree-id5303 . -10) (undo-tree-id5304 . -10) (undo-tree-id5305 . -10) (undo-tree-id5306 . -10) (undo-tree-id5307 . -10) (undo-tree-id5308 . -11) (undo-tree-id5309 . -11) (undo-tree-id5310 . -11) (undo-tree-id5311 . -11) (undo-tree-id5312 . -11) (undo-tree-id5313 . -12) (undo-tree-id5314 . -12) (undo-tree-id5315 . -12) (undo-tree-id5316 . -12) (undo-tree-id5317 . -12) (undo-tree-id5318 . -13) (undo-tree-id5319 . -13) (undo-tree-id5320 . -13) (undo-tree-id5321 . -13) (undo-tree-id5322 . -13) (undo-tree-id5323 . -13) (undo-tree-id5324 . -14) (undo-tree-id5325 . -14) (undo-tree-id5326 . -14) (undo-tree-id5327 . -14) (undo-tree-id5328 . -14) (undo-tree-id5329 . -15) (undo-tree-id5330 . -15) (undo-tree-id5331 . -15) (undo-tree-id5332 . -15) (undo-tree-id5333 . -15) (undo-tree-id5334 . -16) (undo-tree-id5335 . -16) (undo-tree-id5336 . -16) (undo-tree-id5337 . -16) (undo-tree-id5338 . -16) (undo-tree-id5339 . -17) (undo-tree-id5340 . -17) (undo-tree-id5341 . -17) (undo-tree-id5342 . -17) (undo-tree-id5343 . -17) (undo-tree-id5344 . -18) (undo-tree-id5345 . -18) (undo-tree-id5346 . -18) (undo-tree-id5347 . -18) (undo-tree-id5348 . -18) (undo-tree-id5349 . -19) (undo-tree-id5350 . -19) (undo-tree-id5351 . -19) (undo-tree-id5352 . -19) (undo-tree-id5353 . -19) (undo-tree-id5354 . -4) (undo-tree-id5355 . -4) (undo-tree-id5356 . -4) (undo-tree-id5357 . -4) (undo-tree-id5358 . -4) (undo-tree-id5359 . -4) (undo-tree-id5360 . -19) (undo-tree-id5361 . -19) (undo-tree-id5362 . -19) (undo-tree-id5363 . -19) (undo-tree-id5364 . -19) (undo-tree-id5365 . -20) (undo-tree-id5366 . -20) (undo-tree-id5367 . -20) (undo-tree-id5368 . -20) (undo-tree-id5369 . -20) (undo-tree-id5370 . -21) (undo-tree-id5371 . -21) (undo-tree-id5372 . -21) (undo-tree-id5373 . -21) (undo-tree-id5374 . -21) (undo-tree-id5375 . -22) (undo-tree-id5376 . -22) (undo-tree-id5377 . -22) (undo-tree-id5378 . -22) (undo-tree-id5379 . -22) (undo-tree-id5380 . -22) (undo-tree-id5381 . -22) (undo-tree-id5382 . -22) (undo-tree-id5383 . -22) (undo-tree-id5384 . -22) (undo-tree-id5385 . -22) (undo-tree-id5386 . -22) (undo-tree-id5387 . -4) (undo-tree-id5388 . -23) (undo-tree-id5389 . -23) (undo-tree-id5390 . -23) (undo-tree-id5391 . -23) (undo-tree-id5392 . -23) (undo-tree-id5393 . -4) (undo-tree-id5394 . -4) (undo-tree-id5395 . -4) (undo-tree-id5396 . -10) (undo-tree-id5397 . -10) (undo-tree-id5398 . -10) (undo-tree-id5399 . -10) (undo-tree-id5400 . -10) (undo-tree-id5401 . -10) (undo-tree-id5402 . -23) (undo-tree-id5403 . -23) (undo-tree-id5404 . -23) (undo-tree-id5405 . -23) (undo-tree-id5406 . -23) (undo-tree-id5407 . -23)) nil (26713 1136 340725 828000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2744) (undo-tree-id5240 . 1) (undo-tree-id5241 . -1)) nil (26713 1136 340645 140000) 0 nil])
([nil nil ((#("        PA" 0 10 (fontified t)) . 2744) (undo-tree-id5206 . 10) (undo-tree-id5207 . -8) (undo-tree-id5208 . -8) (undo-tree-id5209 . -8) (undo-tree-id5210 . -8) (undo-tree-id5211 . -8) (undo-tree-id5212 . -8) (undo-tree-id5213 . -8) (undo-tree-id5214 . -8) (undo-tree-id5215 . -8) (undo-tree-id5216 . -8) (undo-tree-id5217 . -8) (undo-tree-id5218 . -8) (undo-tree-id5219 . -9) (undo-tree-id5220 . -9) (undo-tree-id5221 . -9) (undo-tree-id5222 . -9) (undo-tree-id5223 . -9) (undo-tree-id5224 . -10) (undo-tree-id5225 . -10) (undo-tree-id5226 . -10) (undo-tree-id5227 . -10) (undo-tree-id5228 . -10) (undo-tree-id5229 . -10) (undo-tree-id5230 . -10) (undo-tree-id5231 . -10) (undo-tree-id5232 . -10) (undo-tree-id5233 . -10) (undo-tree-id5234 . -10) (undo-tree-id5235 . -10) (undo-tree-id5236 . -10) (undo-tree-id5237 . -10) (undo-tree-id5238 . -10) (undo-tree-id5239 . -10)) nil (26713 1136 340643 235000) 0 nil])
([nil nil ((2744 . 2752)) nil (26713 1136 340626 92000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2748) (undo-tree-id5192 . -4) (undo-tree-id5193 . -4) (undo-tree-id5194 . -4) (undo-tree-id5195 . -4) (undo-tree-id5196 . -4) (undo-tree-id5197 . -4) (undo-tree-id5198 . -4) (undo-tree-id5199 . -4) (undo-tree-id5200 . -4) (undo-tree-id5201 . -4) (undo-tree-id5202 . -4) (undo-tree-id5203 . -4) (undo-tree-id5204 . -4) (undo-tree-id5205 . -4) 2752) nil (26713 1136 340625 420000) 0 nil])
([nil nil ((2748 . 2759)) nil (26713 1136 340618 970000) 0 nil])
([nil nil ((2759 . 2762)) nil (26713 1136 340618 626000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -2760) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (#(" " 0 1 (fontified t)) . -2761) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) 2762) nil (26713 1136 340616 812000) 0 nil])
([nil nil ((2760 . 2765)) nil (26713 1136 340586 181000) 0 nil])
([nil nil ((2765 . 2770) (t 26713 1136 348795 740000)) nil (26713 1507 16949 289000) 0 nil])
([nil nil ((2770 . 2782)) nil (26713 1507 16948 678000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -2763) (undo-tree-id5475 . -1) (#("C" 0 1 (fontified t)) . -2764) (undo-tree-id5476 . -1) 2765) nil (26713 1507 16947 736000) 0 nil])
([nil nil ((2763 . 2764)) nil (26713 1507 16945 628000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2736) (#("        " 0 8 (fontified nil)) . -2699) (2695 . 2699) (#("    " 0 4 (fontified t)) . -2676) 2765) nil (26713 1507 16944 558000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2632) (#("    " 0 4 (fontified t)) . -2615)) nil (26713 1507 16943 74000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -2683) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) 2684) nil (26713 1507 16941 461000) 0 nil])
([nil nil ((2683 . 2684)) nil (26713 1507 16927 454000) 0 nil])
([nil nil ((2705 . 2707) (t 26713 1507 29057 186000)) nil (26713 1567 465122 528000) 0 nil])
([nil nil ((2705 . 2707)) nil (26713 1567 465121 926000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -2747) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) 2748) nil (26713 1567 465120 614000) 0 nil])
([nil nil ((2747 . 2749)) nil (26713 1567 465100 847000) 0 nil])
([nil nil ((2631 . 2632) (t 26713 1567 479552 453000)) nil (26713 1728 763125 900000) 0 nil])
([nil nil ((2632 . 2653)) nil (26713 1728 763125 509000) 0 nil])
([nil nil ((2653 . 2654)) nil (26713 1728 763125 149000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -2653) (undo-tree-id5490 . -1) 2654) nil (26713 1728 763124 678000) 0 nil])
([nil nil ((2653 . 2660)) nil (26713 1728 763123 501000) 0 nil])
([nil nil ((#("7" 0 1 (fontified t)) . -2659) (undo-tree-id5489 . -1) 2660) nil (26713 1728 763169 38000) 0 nil])
([nil nil ((2659 . 2674)) ((#("64), dtype=int)" 0 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 14 (face font-lock-builtin-face fontified t) 14 15 (fontified t)) . 2659)) (26713 1729 276348 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -2749) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) 2750 (t 26713 1730 54364 450000)) nil (26713 1781 788750 538000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2749) (#(" " 0 1 (fontified t)) . 2749)) nil (26713 1781 788720 977000) 0 nil])
([nil nil ((2792 . 2796) (#("    " 0 4 (fontified nil)) . -2754) (2746 . 2754) (2723 . 2727) (2683 . 2687) (2636 . 2640) (2615 . 2619) 2790) nil (26713 1781 788716 911000) 0 nil])
([nil nil ((#("    A_new = numpy.zeros((5, 5, 64), dtype=int)" 0 4 (fontified t) 4 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 31 (fontified t) 31 41 (fontified t) 41 42 (face font-lock-operator-face fontified t) 42 45 (face font-lock-builtin-face fontified t) 45 46 (fontified t)) . 2636) (undo-tree-id5535 . -46) (undo-tree-id5536 . -46) (undo-tree-id5537 . -46) (undo-tree-id5538 . -46) (undo-tree-id5539 . -46) (undo-tree-id5540 . -46) (t 26713 1781 796444 466000)) nil (26713 1792 312668 19000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2636) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1)) nil (26713 1792 312661 530000) 0 nil])
([nil nil ((2588 . 2589) (t 26713 1792 320033 406000)) nil (26713 1852 229313 539000) 0 nil])
([nil nil ((2589 . 2603)) nil (26713 1852 229313 171000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2602) (undo-tree-id5725 . -1) 2603) nil (26713 1852 229312 752000) 0 nil])
([nil nil ((2602 . 2607)) nil (26713 1852 229311 990000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -2606) (undo-tree-id5724 . -1) 2607) nil (26713 1852 229311 530000) 0 nil])
([nil nil ((#("Ar" 0 2 (face font-lock-comment-face fontified t)) . -2604) (undo-tree-id5723 . -2) 2606) nil (26713 1852 229310 521000) 0 nil])
([nil nil ((#("state " 0 6 (face font-lock-comment-face fontified t)) . -2598) (undo-tree-id5722 . -6) 2604) nil (26713 1852 229309 586000) 0 nil])
([nil nil ((2598 . 2609)) nil (26713 1852 229308 826000) 0 nil])
([nil nil ((2609 . 2618)) nil (26713 1852 229308 587000) 0 nil])
([nil nil ((#("of" 0 2 (face font-lock-comment-face fontified t)) . -2616) (undo-tree-id5721 . -2) 2618) nil (26713 1852 229308 113000) 0 nil])
([nil nil ((#("element " 0 8 (face font-lock-comment-face fontified t)) . -2608) (undo-tree-id5720 . -8) 2616) nil (26713 1852 229307 236000) 0 nil])
([nil nil ((#("first " 0 6 (face font-lock-comment-face fontified t)) . -2602) (undo-tree-id5719 . -6) 2608) nil (26713 1852 229306 363000) 0 nil])
([nil nil ((#("the " 0 4 (face font-lock-comment-face fontified t)) . -2598) (undo-tree-id5718 . -4) 2602) nil (26713 1852 229305 439000) 0 nil])
([nil nil ((2598 . 2604)) nil (26713 1852 229304 703000) 0 nil])
([nil nil ((#("]" 0 1 (face font-lock-comment-face fontified t)) . -2603) (undo-tree-id5717 . -1) 2604) nil (26713 1852 229304 400000) 0 nil])
([nil nil ((2603 . 2624)) nil (26713 1852 229303 609000) 0 nil])
([nil nil ((2624 . 2625)) nil (26713 1852 229303 374000) 0 nil])
([nil nil ((#("A " 0 2 (face font-lock-comment-face fontified t)) . -2623) (undo-tree-id5716 . -2) 2625) nil (26713 1852 229303 20000) 0 nil])
([nil nil ((#("element " 0 8 (face font-lock-comment-face fontified t)) . -2615) (undo-tree-id5715 . -8) 2623) nil (26713 1852 229302 209000) 0 nil])
([nil nil ((2615 . 2619)) nil (26713 1852 229301 442000) 0 nil])
([nil nil ((2619 . 2626)) nil (26713 1852 229301 130000) 0 nil])
([nil nil ((#("so " 0 3 (face font-lock-comment-face fontified t)) . -2623) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -2) (undo-tree-id5704 . -2) (undo-tree-id5705 . -2) (undo-tree-id5706 . -2) (undo-tree-id5707 . -2) (undo-tree-id5708 . -3) (undo-tree-id5709 . -3) (undo-tree-id5710 . -3) (undo-tree-id5711 . -3) (undo-tree-id5712 . -3) (undo-tree-id5713 . -3) (undo-tree-id5714 . -3) 2626) nil (26713 1852 229300 481000) 0 nil])
([nil nil ((2623 . 2628)) nil (26713 1852 229291 225000) 0 nil])
([nil nil ((#("as" 0 2 (face font-lock-comment-face fontified t)) . -2626) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -2) (undo-tree-id5693 . -2) (undo-tree-id5694 . -2) (undo-tree-id5695 . -2) (undo-tree-id5696 . -2) (undo-tree-id5697 . -2) 2628) nil (26713 1852 229290 590000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2625) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) 2626) nil (26713 1852 229284 578000) 0 nil])
([nil nil ((#("so" 0 2 (face font-lock-comment-face fontified t)) . -2623) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -2) (undo-tree-id5624 . -2) (undo-tree-id5625 . -2) (undo-tree-id5626 . -2) (undo-tree-id5627 . -2) (undo-tree-id5628 . -2) (undo-tree-id5629 . -2) (undo-tree-id5630 . -2) (undo-tree-id5631 . -2) (undo-tree-id5632 . -2) (undo-tree-id5633 . -2) (undo-tree-id5634 . -2) (undo-tree-id5635 . -2) (undo-tree-id5636 . -2) (undo-tree-id5637 . -2) (undo-tree-id5638 . -2) (undo-tree-id5639 . -2) (undo-tree-id5640 . -2) (undo-tree-id5641 . -2) (undo-tree-id5642 . -2) (undo-tree-id5643 . -2) (undo-tree-id5644 . -2) (undo-tree-id5645 . -2) (undo-tree-id5646 . -2) (undo-tree-id5647 . -2) (undo-tree-id5648 . -2) (undo-tree-id5649 . -2) (undo-tree-id5650 . -2) (undo-tree-id5651 . -2) (undo-tree-id5652 . -2) (undo-tree-id5653 . -2) (undo-tree-id5654 . -2) (undo-tree-id5655 . -2) (undo-tree-id5656 . -2) (undo-tree-id5657 . -2) (undo-tree-id5658 . -2) (undo-tree-id5659 . -2) 2625) nil (26713 1852 229271 957000) 0 nil])
([nil nil ((2623 . 2643)) nil (26713 1852 229250 789000) 0 nil])
([nil nil ((#("coun" 0 4 (face font-lock-comment-face fontified t)) . -2639) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -2) (undo-tree-id5603 . -2) (undo-tree-id5604 . -2) (undo-tree-id5605 . -2) (undo-tree-id5606 . -2) (undo-tree-id5607 . -3) (undo-tree-id5608 . -3) (undo-tree-id5609 . -3) (undo-tree-id5610 . -3) (undo-tree-id5611 . -3) (undo-tree-id5612 . -4) (undo-tree-id5613 . -4) (undo-tree-id5614 . -4) (undo-tree-id5615 . -4) (undo-tree-id5616 . -4) (undo-tree-id5617 . -4) 2643) nil (26713 1852 229249 954000) 0 nil])
([nil nil ((2639 . 2649)) nil (26713 1852 229236 434000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 2660) (2658 . 2660) (2658 . 2659) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 2658) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (2657 . 2658) (2649 . 2665)) nil (26713 1852 229235 668000) 0 nil])
([nil nil ((2667 . 2675)) nil (26713 1852 229229 959000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -2674) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) 2675) nil (26713 1852 229229 345000) 0 nil])
([nil nil ((2674 . 2677)) nil (26713 1852 229223 375000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -2675) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -2676) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) 2677) nil (26713 1852 229222 388000) 0 nil])
([nil nil ((2675 . 2686)) nil (26713 1852 229209 159000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2685) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) 2686) nil (26713 1852 229208 21000) 0 nil])
([nil nil ((2685 . 2686)) nil (26713 1852 229190 282000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -2685) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) 2686 (t 26713 1852 236163 545000)) nil (26713 1859 281303 919000) 0 nil])
([nil nil ((2685 . 2695)) nil (26713 1859 281300 227000) 0 nil])
([nil nil ((#("in " 0 3 (face font-lock-comment-face fontified t)) . -2692) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -2) (undo-tree-id5778 . -2) (undo-tree-id5779 . -2) (undo-tree-id5780 . -2) (undo-tree-id5781 . -2) (undo-tree-id5782 . -3) (undo-tree-id5783 . -3) (undo-tree-id5784 . -3) (undo-tree-id5785 . -3) (undo-tree-id5786 . -3) (undo-tree-id5787 . -3) (undo-tree-id5788 . -3) (undo-tree-id5789 . -3) (undo-tree-id5790 . -3) (undo-tree-id5791 . -3) (undo-tree-id5792 . -3) (undo-tree-id5793 . -3) 2695) nil (26713 1859 281299 500000) 0 nil])
([nil nil ((2692 . 2697)) nil (26713 1859 281287 495000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2695) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -2696) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) 2697) nil (26713 1859 281286 697000) 0 nil])
([nil nil ((2695 . 2697)) nil (26713 1859 281272 479000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2695) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -2696) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) 2697) nil (26713 1859 281271 215000) 0 nil])
([nil nil ((2695 . 2704)) nil (26713 1859 281247 496000) 0 nil])
([nil nil ((#("    print(\"TESTING THETA\\n\\n\")
    print(foo)
    foo = rho(foo)
    print(\"TESTING RHO\\n\\n\")
    print(foo)
" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 24 (face font-lock-string-face fontified t) 24 26 (face font-lock-constant-face fontified t) 26 28 (face font-lock-constant-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 35 (fontified t) 35 40 (face font-lock-builtin-face fontified t) 40 46 (fontified t) 46 50 (fontified t) 50 53 (face font-lock-variable-name-face fontified t) 53 54 (fontified t) 54 55 (face font-lock-operator-face fontified t) 55 65 (fontified t) 65 69 (fontified t) 69 74 (face font-lock-builtin-face fontified t) 74 75 (fontified t) 75 87 (face font-lock-string-face fontified t) 87 89 (face font-lock-constant-face fontified t) 89 91 (face font-lock-constant-face fontified t) 91 92 (face font-lock-string-face fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 98 (fontified t) 98 103 (face font-lock-builtin-face fontified t) 103 108 (fontified t) 108 109 (fontified t)) . -3097) (undo-tree-id5834 . -109) 3206 (t 26713 1859 289508 295000)) nil (26713 1973 324387 882000) 0 nil])
([nil nil ((3097 . 3101)) nil (26713 1973 324386 977000) 0 nil])
([nil nil ((3096 . 3101)) nil (26713 1973 324386 735000) 0 nil])
([nil nil ((3101 . 3112)) nil (26713 1973 324386 498000) 0 nil])
([nil nil ((3085 . 3086)) nil (26713 1973 324386 194000) 0 nil])
([nil nil ((3105 . 3106)) nil (26713 1973 324385 952000) 0 nil])
([nil nil ((3119 . 3126)) nil (26713 1973 324385 621000) 0 nil])
([nil nil ((#("theta" 0 5 (fontified t)) . -3109) (undo-tree-id5833 . -5) 3114) nil (26713 1973 324385 319000) 0 nil])
([nil nil ((3109 . 3113)) nil (26713 1973 324384 506000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 3125) (undo-tree-id5830 . -4) (3125 . 3130) (#(" " 0 1 (fontified nil)) . 3124) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (3125 . 3126)) nil (26713 1973 324384 4000) 0 nil])
([nil nil ((3126 . 3140)) nil (26713 1973 324382 114000) 0 nil])
([nil nil ((#("thi" 0 3 (face font-lock-comment-face fontified t)) . -3137) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -2) (undo-tree-id5820 . -2) (undo-tree-id5821 . -2) (undo-tree-id5822 . -2) (undo-tree-id5823 . -2) (undo-tree-id5824 . -3) (undo-tree-id5825 . -3) (undo-tree-id5826 . -3) (undo-tree-id5827 . -3) (undo-tree-id5828 . -3) (undo-tree-id5829 . -3) 3140) nil (26713 1973 324381 531000) 0 nil])
([nil nil ((3137 . 3139)) nil (26713 1973 324372 805000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -3138) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) 3139) nil (26713 1973 324372 327000) 0 nil])
([nil nil ((3138 . 3143)) nil (26713 1973 324368 542000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -3142) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) 3143) nil (26713 1973 324367 953000) 0 nil])
([nil nil ((3142 . 3146)) nil (26713 1973 324357 859000) 0 nil])
([nil nil ((3113 . 3118)) nil (26713 1973 324357 627000) 0 nil])
([nil nil ((3129 . 3130)) nil (26713 1973 324357 318000) 0 nil])
([nil nil ((3130 . 3138)) nil (26713 1973 324357 29000) 0 nil])
([nil nil ((3138 . 3143)) nil (26713 1973 324356 731000) 0 nil])
([nil nil ((3143 . 3154)) nil (26713 1973 324356 433000) 0 nil])
([nil nil ((3154 . 3156)) nil (26713 1973 324356 144000) 0 nil])
([nil nil ((3156 . 3161)) nil (26713 1973 324355 828000) 0 nil])
([nil nil ((3154 . 3157)) nil (26713 1973 324355 123000) 0 nil])
([nil nil ((3159 . 3164)) nil (26713 1973 324354 690000) 0 nil])
([nil nil ((3164 . 3181)) nil (26713 1973 324354 197000) 0 nil])
([nil nil ((3208 . 3209) 3181) nil (26713 1973 324350 855000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3187) (undo-tree-id5867 . -1) (t 26713 1973 330465 168000)) nil (26713 1981 211903 903000) 0 nil])
([nil nil ((#("# rho, pi, chi, iota" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 20 (face font-lock-comment-face fontified t)) . 3187) (undo-tree-id5836 . -11) (undo-tree-id5837 . -11) (undo-tree-id5838 . -11) (undo-tree-id5839 . -11) (undo-tree-id5840 . -11) (undo-tree-id5841 . -11) (undo-tree-id5842 . -11) (undo-tree-id5843 . -11) (undo-tree-id5844 . -11) (undo-tree-id5845 . -11) (undo-tree-id5846 . -11) (undo-tree-id5847 . -11) (undo-tree-id5848 . -11) (undo-tree-id5849 . -11) (undo-tree-id5850 . -11) (undo-tree-id5851 . -12) (undo-tree-id5852 . -12) (undo-tree-id5853 . -12) (undo-tree-id5854 . -12) (undo-tree-id5855 . -12) (undo-tree-id5856 . -16) (undo-tree-id5857 . -16) (undo-tree-id5858 . -16) (undo-tree-id5859 . -16) (undo-tree-id5860 . -16) (undo-tree-id5861 . -20) (undo-tree-id5862 . -20) (undo-tree-id5863 . -20) (undo-tree-id5864 . -20) (undo-tree-id5865 . -20) (undo-tree-id5866 . -20)) nil (26713 1981 211902 395000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3187) (undo-tree-id5835 . -1)) nil (26713 1981 211883 160000) 0 nil])
([nil nil ((3187 . 3188) (3187 . 3188)) nil (26713 1981 211872 430000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3031) (t 26713 1981 218768 516000)) nil (26713 2013 144192 740000) 0 nil])
([nil nil ((3034 . 3035) 3031) nil (26713 2013 144192 236000) 0 nil])
([nil nil ((apply 2 3031 3043 undo--wrap-and-run-primitive-undo 3031 3043 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3035)))) nil (26713 2013 144191 809000) 0 nil])
([nil nil ((#("    # print(gen_state_array(S))" 0 4 (fontified t) 4 6 (face font-lock-comment-delimiter-face fontified t) 6 11 (face font-lock-comment-face fontified t) 11 12 (face font-lock-comment-face fontified t) 12 16 (face font-lock-comment-face fontified t) 16 22 (face font-lock-comment-face fontified t) 22 28 (face font-lock-comment-face fontified t) 28 31 (face font-lock-comment-face fontified t)) . 3044) (undo-tree-id5871 . -4) (undo-tree-id5872 . -4) (undo-tree-id5873 . -4) (undo-tree-id5874 . -4) (undo-tree-id5875 . -4) (undo-tree-id5876 . -4) (undo-tree-id5877 . -4) (undo-tree-id5878 . -4) (undo-tree-id5879 . -4) (undo-tree-id5880 . -4) (undo-tree-id5881 . -4) (undo-tree-id5882 . -31) (undo-tree-id5883 . -31) (undo-tree-id5884 . -31) (undo-tree-id5885 . -31) (undo-tree-id5886 . -31) (undo-tree-id5887 . -31)) nil (26713 2013 144190 927000) 0 nil])
([nil nil ((3150 . 3154) (#("    " 0 4 (fontified nil)) . 3149) (undo-tree-id5868 . -4) (undo-tree-id5869 . -4) (undo-tree-id5870 . -4) (3153 . 3154)) nil (26713 2013 144171 418000) 0 nil])
([nil nil ((3154 . 3160)) nil (26713 2013 144162 144000) 0 nil])
([nil nil ((3160 . 3165)) nil (26713 2013 144158 657000) 0 nil])
([nil nil ((2901 . 2902) (t 26713 2013 151949 322000)) nil (26713 2541 168635 871000) 0 nil])
([nil nil ((2902 . 2903)) nil (26713 2541 168635 557000) 0 nil])
([nil nil ((2901 . 2912)) nil (26713 2541 168635 171000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -2909) (undo-tree-id5940 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -2910) (undo-tree-id5941 . -1) (#("k" 0 1 (face font-lock-function-name-face fontified t)) . -2911) (undo-tree-id5942 . -1) 2912) nil (26713 2541 168634 621000) 0 nil])
([nil nil ((2909 . 2912)) nil (26713 2541 168631 906000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2911) (undo-tree-id5939 . -1) 2912) nil (26713 2541 168631 460000) 0 nil])
([nil nil ((2911 . 2912)) nil (26713 2541 168630 725000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -2911) (undo-tree-id5938 . -1) 2912) nil (26713 2541 168630 374000) 0 nil])
([nil nil ((2911 . 2919)) nil (26713 2541 168629 587000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -2918) (undo-tree-id5937 . -1) 2919) nil (26713 2541 168628 913000) 0 nil])
([nil nil ((2918 . 2925)) nil (26713 2541 168628 174000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2924) (undo-tree-id5936 . -1) 2925) nil (26713 2541 168627 842000) 0 nil])
([nil nil ((2924 . 2926)) nil (26713 2541 168627 27000) 0 nil])
([nil nil ((2926 . 2927)) nil (26713 2541 168626 722000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2926) (undo-tree-id5935 . -1) 2927) nil (26713 2541 168626 364000) 0 nil])
([nil nil ((2926 . 2927)) nil (26713 2541 168625 603000) 0 nil])
([nil nil ((2927 . 2932)) nil (26713 2541 168625 379000) 0 nil])
([nil nil ((2914 . 2917)) nil (26713 2541 168625 0) 0 nil])
([nil nil ((2900 . 2901)) nil (26713 2541 168624 760000) 0 nil])
([nil nil ((2901 . 2906)) nil (26713 2541 168624 523000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -2905) (undo-tree-id5934 . -1) 2906) nil (26713 2541 168624 160000) 0 nil])
([nil nil ((2905 . 2916)) nil (26713 2541 168623 357000) 0 nil])
([nil nil ((#("con" 0 3 (face font-lock-comment-face fontified t)) . -2913) (undo-tree-id5933 . -3) 2916) nil (26713 2541 168622 982000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2912) (undo-tree-id5932 . -1) 2913) nil (26713 2541 168622 139000) 0 nil])
([nil nil ((#("p:" 0 2 (face font-lock-comment-face fontified t)) . -2910) (undo-tree-id5931 . -2) 2912) nil (26713 2541 168621 255000) 0 nil])
([nil nil ((#("keccak_" 0 7 (face font-lock-comment-face fontified t)) . -2903) (undo-tree-id5930 . -7) 2910) nil (26713 2541 168620 266000) 0 nil])
([nil nil ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 2901)) nil (26713 2541 168619 433000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2901)) nil (26713 2541 168619 150000) 0 nil])
([nil nil ((2935 . 2938)) nil (26713 2541 168618 921000) 0 nil])
([nil nil ((#("sta" 0 3 (fontified t)) . -2935) (undo-tree-id5929 . -3) 2938) nil (26713 2541 168618 455000) 0 nil])
([nil nil ((2935 . 2940)) nil (26713 2541 168617 746000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2939) (undo-tree-id5928 . -1) 2940) nil (26713 2541 168617 375000) 0 nil])
([nil nil ((2939 . 2949)) nil (26713 2541 168616 533000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2931) 2949) nil (26713 2541 168616 147000) 0 nil])
([nil nil ((2931 . 2935) 2945) nil (26713 2541 168615 807000) 0 nil])
([nil nil ((2949 . 2950)) nil (26713 2541 168615 429000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2949) (undo-tree-id5927 . -1) 2950) nil (26713 2541 168615 93000) 0 nil])
([nil nil ((2949 . 2954)) nil (26713 2541 168614 283000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2951) (undo-tree-id5924 . -1) (#("r" 0 1 (fontified t)) . -2952) (undo-tree-id5925 . -1) (#("y" 0 1 (fontified t)) . -2953) (undo-tree-id5926 . -1) 2954) nil (26713 2541 168613 507000) 0 nil])
([nil nil ((2951 . 2954)) nil (26713 2541 168611 863000) 0 nil])
([nil nil ((2954 . 2957)) nil (26713 2541 168611 635000) 0 nil])
([nil nil ((2957 . 2962)) nil (26713 2541 168611 220000) 0 nil])
([nil nil ((2962 . 2983)) nil (26713 2541 168610 988000) 0 nil])
([nil nil ((2983 . 2995)) nil (26713 2541 168610 754000) 0 nil])
([nil nil ((#("&" 0 1 (face font-lock-operator-face fontified t)) . -2994) (undo-tree-id5923 . -1) 2995) nil (26713 2541 168610 331000) 0 nil])
([nil nil ((2994 . 2997)) nil (26713 2541 168609 547000) 0 nil])
([nil nil ((2997 . 2999)) nil (26713 2541 168609 302000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -2994) (undo-tree-id5922 . -1) 2995) nil (26713 2541 168608 858000) 0 nil])
([nil nil ((#("2*" 0 1 (fontified t) 1 2 (face font-lock-operator-face fontified t)) . -2992) (undo-tree-id5921 . -2) 2994) nil (26713 2541 168608 44000) 0 nil])
([nil nil ((#("12 + " 0 3 (fontified t) 3 4 (face font-lock-operator-face fontified t) 4 5 (fontified t)) . -2987) (undo-tree-id5920 . -5) 2992) nil (26713 2541 168607 117000) 0 nil])
([nil nil ((2987 . 2989)) nil (26713 2541 168606 177000) 0 nil])
([nil nil ((2993 . 3000)) nil (26713 2541 168605 926000) 0 nil])
([nil nil ((#("rounds" 0 6 (fontified t)) . -2922) (undo-tree-id5919 . -6) 2928) nil (26713 2541 168605 522000) 0 nil])
([nil nil ((#("n_" 0 2 (fontified t)) . -2920) (undo-tree-id5918 . -2) 2922) nil (26713 2541 168603 523000) 0 nil])
([nil nil ((#("b, " 0 3 (fontified t)) . -2917) (undo-tree-id5917 . -3) 2920) nil (26713 2541 168602 572000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2915) (undo-tree-id5915 . -1) (#(" " 0 1 (fontified t)) . -2916) (undo-tree-id5916 . -1) 2917) nil (26713 2541 168601 537000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -2911) (undo-tree-id5913 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -2912) (undo-tree-id5914 . -1) 2913) nil (26713 2541 168600 80000) 0 nil])
([nil nil ((#("rounds" 0 6 (fontified t)) . -2979) (undo-tree-id5912 . -6) 2985) nil (26713 2541 168598 510000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -2978) (undo-tree-id5911 . -1) 2979) nil (26713 2541 168597 651000) 0 nil])
([nil nil ((2978 . 2979)) nil (26713 2541 168596 669000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2977) (undo-tree-id5909 . -1) (#("2" 0 1 (fontified t)) . -2978) (undo-tree-id5910 . -1) 2979) nil (26713 2541 168596 230000) 0 nil])
([nil nil ((2977 . 2979)) nil (26713 2541 168594 981000) 0 nil])
([nil nil ((#("24" 0 2 (fontified t)) . -2977) (undo-tree-id5908 . -2) 2979) nil (26713 2541 168594 483000) 0 nil])
([nil nil ((#("24 - " 0 2 (fontified t) 2 3 (fontified t) 3 4 (face font-lock-operator-face fontified t) 4 5 (fontified t)) . -2972) (undo-tree-id5907 . -5) 2977) nil (26713 2541 168593 601000) 0 nil])
([nil nil ((2972 . 2977)) nil (26713 2541 168592 796000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -2976) (undo-tree-id5906 . -1) 2977) nil (26713 2541 168592 353000) 0 nil])
([nil nil ((2976 . 2977)) nil (26713 2541 168591 564000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2976) (undo-tree-id5905 . -1) 2977) nil (26713 2541 168591 206000) 0 nil])
([nil nil ((2976 . 2979)) nil (26713 2541 168590 25000) 0 nil])
([nil nil ((2979 . 2988)) nil (26713 2541 168589 797000) 0 nil])
([nil nil ((2988 . 2997)) nil (26713 2541 168589 576000) 0 nil])
([nil nil ((2997 . 3017)) nil (26713 2541 168589 237000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3016) (undo-tree-id5904 . -1) 3017) nil (26713 2541 168588 868000) 0 nil])
([nil nil ((3016 . 3027)) nil (26713 2541 168588 75000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3026) (undo-tree-id5903 . -1) 3027) nil (26713 2541 168587 646000) 0 nil])
([nil nil ((3026 . 3030)) nil (26713 2541 168586 860000) 0 nil])
([nil nil ((3030 . 3039)) nil (26713 2541 168586 635000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3035) (undo-tree-id5902 . -4) 3039) nil (26713 2541 168586 205000) 0 nil])
([nil nil ((3035 . 3051)) nil (26713 2541 168585 485000) 0 nil])
([nil nil ((#("array(" 0 6 (fontified t)) . -3045) (undo-tree-id5901 . -6) 3051) nil (26713 2541 168585 119000) 0 nil])
([nil nil ((3045 . 3054)) nil (26713 2541 168584 217000) 0 nil])
([nil nil ((#("16" 0 2 (fontified t)) . -3052) (undo-tree-id5900 . -2) 3054) nil (26713 2541 168583 849000) 0 nil])
([nil nil ((#("zeros((" 0 7 (fontified t)) . -3045) (undo-tree-id5899 . -7) 3052) nil (26713 2541 168582 649000) 0 nil])
([nil nil ((3045 . 3049)) nil (26713 2541 168581 601000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -3048) (undo-tree-id5898 . -1) 3049) nil (26713 2541 168581 59000) 0 nil])
([nil nil ((3048 . 3055)) nil (26713 2541 168577 991000) 0 nil])
([nil nil ((#("0]*" 0 2 (fontified t) 2 3 (face font-lock-operator-face fontified t)) . -3052) (undo-tree-id5897 . -3) 3055) nil (26713 2541 168577 555000) 0 nil])
([nil nil ((#("array([" 0 7 (fontified t)) . -3045) (undo-tree-id5896 . -7) 3052) nil (26713 2541 168576 616000) 0 nil])
([nil nil ((3045 . 3063)) nil (26713 2541 168575 737000) 0 nil])
([nil nil ((3063 . 3069)) nil (26713 2541 168575 481000) 0 nil])
([nil nil ((3069 . 3074)) nil (26713 2541 168575 258000) 0 nil])
([nil nil ((3074 . 3081)) nil (26713 2541 168575 36000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3080) (undo-tree-id5895 . -1) 3081) nil (26713 2541 168574 667000) 0 nil])
([nil nil ((3080 . 3089)) nil (26713 2541 168573 889000) 0 nil])
([nil nil ((3089 . 3092)) nil (26713 2541 168573 655000) 0 nil])
([nil nil ((3092 . 3101)) nil (26713 2541 168573 299000) 0 nil])
([nil nil ((3101 . 3119)) nil (26713 2541 168573 66000) 0 nil])
([nil nil ((3119 . 3132)) nil (26713 2541 168572 818000) 0 nil])
([nil nil ((3132 . 3148)) nil (26713 2541 168572 500000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -3147) (undo-tree-id5894 . -1) 3148) nil (26713 2541 168572 128000) 0 nil])
([nil nil ((3147 . 3150)) nil (26713 2541 168571 201000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -3149) (undo-tree-id5893 . -1) 3150) nil (26713 2541 168570 789000) 0 nil])
([nil nil ((3149 . 3151)) nil (26713 2541 168569 898000) 0 nil])
([nil nil ((3151 . 3168)) nil (26713 2541 168569 565000) 0 nil])
([nil nil ((3168 . 3170)) nil (26713 2541 168569 259000) 0 nil])
([nil nil ((3170 . 3181)) nil (26713 2541 168568 901000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3179) (undo-tree-id5891 . -1) (#("y" 0 1 (fontified t)) . -3180) (undo-tree-id5892 . -1) 3181) nil (26713 2541 168568 287000) 0 nil])
([nil nil ((3179 . 3184)) nil (26713 2541 168566 517000) 0 nil])
([nil nil ((3170 . 3173)) nil (26713 2541 168566 193000) 0 nil])
([nil nil ((3170 . 3178)) nil (26713 2541 168565 759000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3175) (undo-tree-id5888 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3176) (undo-tree-id5889 . -1) (#(" " 0 1 (fontified t)) . -3177) (undo-tree-id5890 . -1) 3178) nil (26713 2541 168564 643000) 0 nil])
([nil nil ((3175 . 3183)) nil (26713 2541 168552 41000) 0 nil])
([nil nil ((3202 . 3218) (#("                " 0 16 (fontified nil)) . 3201) (undo-tree-id6016 . -16) (undo-tree-id6017 . -16) (undo-tree-id6018 . -16) (undo-tree-id6019 . -16) (undo-tree-id6020 . -16) (undo-tree-id6021 . -16) (undo-tree-id6022 . -16) (undo-tree-id6023 . -16) (undo-tree-id6024 . -16) (undo-tree-id6025 . -16) (undo-tree-id6026 . -16) (undo-tree-id6027 . -16) (undo-tree-id6028 . -16) (3200 . 3218) (t 26713 2541 176663 824000)) nil (26713 2575 314052 837000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3214) (undo-tree-id6006 . -4) (undo-tree-id6007 . -4) (undo-tree-id6008 . -4) (undo-tree-id6009 . -4) (undo-tree-id6010 . -4) (undo-tree-id6011 . -4) (undo-tree-id6012 . -4) (undo-tree-id6013 . -4) (undo-tree-id6014 . -4) (undo-tree-id6015 . -4) 3218) nil (26713 2575 314046 251000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3210) (undo-tree-id5989 . -4) (undo-tree-id5990 . -4) (undo-tree-id5991 . -4) (undo-tree-id5992 . -4) (undo-tree-id5993 . -4) (undo-tree-id5994 . -4) (undo-tree-id5995 . -4) (undo-tree-id5996 . -4) (undo-tree-id5997 . -4) (undo-tree-id5998 . -4) (undo-tree-id5999 . -4) (undo-tree-id6000 . -4) (undo-tree-id6001 . -4) (undo-tree-id6002 . -4) (undo-tree-id6003 . -4) (undo-tree-id6004 . -4) (undo-tree-id6005 . -4) 3214) nil (26713 2575 314041 122000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3206) (undo-tree-id5965 . -4) (undo-tree-id5966 . -4) (undo-tree-id5967 . -4) (undo-tree-id5968 . -4) (undo-tree-id5969 . -4) (undo-tree-id5970 . -4) (undo-tree-id5971 . -4) (undo-tree-id5972 . -4) (undo-tree-id5973 . -4) (undo-tree-id5974 . -4) (undo-tree-id5975 . -4) (undo-tree-id5976 . -4) (undo-tree-id5977 . -4) (undo-tree-id5978 . -4) (undo-tree-id5979 . -4) (undo-tree-id5980 . -4) (undo-tree-id5981 . -4) (undo-tree-id5982 . -4) (undo-tree-id5983 . -4) (undo-tree-id5984 . -4) (undo-tree-id5985 . -4) (undo-tree-id5986 . -4) (undo-tree-id5987 . -4) (undo-tree-id5988 . -4) 3210) nil (26713 2575 314031 889000) 0 nil])
([nil nil ((3206 . 3214)) nil (26713 2575 314018 545000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3200) (undo-tree-id5943 . 1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) 3201) nil (26713 2591 247094 701000) 0 nil])
([nil nil ((#("    foo1 = theta(A)
    foo2 = rho(foo1)
    foo3 = pi(foo2)
    foo4 = chi(foo3)
    foo5 = iota(foo4)
" 0 4 (fontified t) 4 8 (face font-lock-variable-name-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-operator-face fontified t) 10 18 (fontified t) 18 19 (fontified t rear-nonsticky t) 19 20 (fontified t) 20 24 (fontified t) 24 28 (face font-lock-variable-name-face fontified t) 28 29 (fontified t) 29 30 (face font-lock-operator-face fontified t) 30 40 (fontified t) 40 41 (fontified t) 41 45 (fontified t) 45 49 (face font-lock-variable-name-face fontified t) 49 50 (fontified t) 50 51 (face font-lock-operator-face fontified t) 51 61 (fontified t) 61 65 (fontified t) 65 69 (face font-lock-variable-name-face fontified t) 69 70 (fontified t) 70 71 (face font-lock-operator-face fontified t) 71 82 (fontified t) 82 86 (fontified t) 86 90 (face font-lock-variable-name-face fontified t) 90 91 (fontified t) 91 92 (face font-lock-operator-face fontified t) 92 103 (fontified t) 103 104 (fontified t)) . -3359) (undo-tree-id6254 . -41) (undo-tree-id6255 . -104) (undo-tree-id6256 . -104) (undo-tree-id6257 . -104) (undo-tree-id6258 . -104) (undo-tree-id6259 . -104) (undo-tree-id6260 . -104) (undo-tree-id6261 . -104) (undo-tree-id6262 . -104) (undo-tree-id6263 . -104) (undo-tree-id6264 . -104) (undo-tree-id6265 . -104) (undo-tree-id6266 . -97) (undo-tree-id6267 . -97) (undo-tree-id6268 . -97) (undo-tree-id6269 . -97) (undo-tree-id6270 . -97) (undo-tree-id6271 . -97) (undo-tree-id6272 . -97) (undo-tree-id6273 . -97) (undo-tree-id6274 . -97) (undo-tree-id6275 . -97) (undo-tree-id6276 . -82) (undo-tree-id6277 . -82) (undo-tree-id6278 . -82) (undo-tree-id6279 . -82) (undo-tree-id6280 . -82) (undo-tree-id6281 . -82) (undo-tree-id6282 . -82) (undo-tree-id6283 . -82) (undo-tree-id6284 . -82) (undo-tree-id6285 . -82) (undo-tree-id6286 . -104) (undo-tree-id6287 . -104) (undo-tree-id6288 . -104) (undo-tree-id6289 . -104) (undo-tree-id6290 . -104) (undo-tree-id6291 . -104) (undo-tree-id6292 . -104) (undo-tree-id6293 . -104) (undo-tree-id6294 . -104) (undo-tree-id6295 . -104) (undo-tree-id6296 . -104) (undo-tree-id6297 . -104) (undo-tree-id6298 . -104) (undo-tree-id6299 . -104) (undo-tree-id6300 . -104) (undo-tree-id6301 . -104) (undo-tree-id6302 . -104) (undo-tree-id6303 . -104) (undo-tree-id6304 . -82) (undo-tree-id6305 . -82) (undo-tree-id6306 . -82) (undo-tree-id6307 . -82) (undo-tree-id6308 . -82) (undo-tree-id6309 . -82) (undo-tree-id6310 . -82) (undo-tree-id6311 . -61) (undo-tree-id6312 . -61) (undo-tree-id6313 . -61) (undo-tree-id6314 . -61) (undo-tree-id6315 . -61) (undo-tree-id6316 . -41) (undo-tree-id6317 . -41) (undo-tree-id6318 . -41) (undo-tree-id6319 . -41) (undo-tree-id6320 . -41) (undo-tree-id6321 . -20) (undo-tree-id6322 . -20) (undo-tree-id6323 . -20) (undo-tree-id6324 . -20) (undo-tree-id6325 . -20) (undo-tree-id6326 . -104) (undo-tree-id6327 . -20) (undo-tree-id6328 . -20) (undo-tree-id6329 . -20) (undo-tree-id6330 . -20) (undo-tree-id6331 . -20) (undo-tree-id6332 . -20) (undo-tree-id6333 . -20) (undo-tree-id6334 . -41) (undo-tree-id6335 . -41) (undo-tree-id6336 . -41) (undo-tree-id6337 . -41) (undo-tree-id6338 . -41) (undo-tree-id6339 . -61) (undo-tree-id6340 . -61) (undo-tree-id6341 . -61) (undo-tree-id6342 . -61) (undo-tree-id6343 . -61) (undo-tree-id6344 . -82) (undo-tree-id6345 . -82) (undo-tree-id6346 . -82) (undo-tree-id6347 . -82) (undo-tree-id6348 . -82) (undo-tree-id6349 . -104) (undo-tree-id6350 . -104) (undo-tree-id6351 . -104) (undo-tree-id6352 . -104) (undo-tree-id6353 . -41) (undo-tree-id6354 . -104) (undo-tree-id6355 . -104) (undo-tree-id6356 . -104) 3463 (t 26713 2575 321075 996000)) nil (26713 2600 420898 207000) 0 nil] [nil nil ((#("    print(S)

    foo1 = theta(A)
    foo2 = rho(foo1)
    foo3 = pi(foo2)
    foo4 = chi(foo3)
    foo5 = iota(foo4)
" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 18 (fontified t) 18 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 32 (fontified t) 32 33 (fontified t rear-nonsticky t) 33 34 (fontified t) 34 38 (fontified t) 38 42 (face font-lock-variable-name-face fontified t) 42 43 (fontified t) 43 44 (face font-lock-operator-face fontified t) 44 54 (fontified t) 54 55 (fontified t) 55 59 (fontified t) 59 63 (face font-lock-variable-name-face fontified t) 63 64 (fontified t) 64 65 (face font-lock-operator-face fontified t) 65 75 (fontified t) 75 79 (fontified t) 79 83 (face font-lock-variable-name-face fontified t) 83 84 (fontified t) 84 85 (face font-lock-operator-face fontified t) 85 96 (fontified t) 96 100 (fontified t) 100 104 (face font-lock-variable-name-face fontified t) 104 105 (fontified t) 105 106 (face font-lock-operator-face fontified t) 106 117 (fontified t) 117 118 (fontified t)) . 3345) (undo-tree-id6029 . -118) (undo-tree-id6030 . -55) (undo-tree-id6031 . -118) (undo-tree-id6032 . -118) (undo-tree-id6033 . -118) (undo-tree-id6034 . -118) (undo-tree-id6035 . -118) (undo-tree-id6036 . -118) (undo-tree-id6037 . -118) (undo-tree-id6038 . -118) (undo-tree-id6039 . -118) (undo-tree-id6040 . -118) (undo-tree-id6041 . -118) (undo-tree-id6042 . -111) (undo-tree-id6043 . -111) (undo-tree-id6044 . -111) (undo-tree-id6045 . -111) (undo-tree-id6046 . -111) (undo-tree-id6047 . -111) (undo-tree-id6048 . -111) (undo-tree-id6049 . -111) (undo-tree-id6050 . -111) (undo-tree-id6051 . -111) (undo-tree-id6052 . -96) (undo-tree-id6053 . -96) (undo-tree-id6054 . -96) (undo-tree-id6055 . -96) (undo-tree-id6056 . -96) (undo-tree-id6057 . -96) (undo-tree-id6058 . -96) (undo-tree-id6059 . -96) (undo-tree-id6060 . -96) (undo-tree-id6061 . -96) (undo-tree-id6062 . -118) (undo-tree-id6063 . -118) (undo-tree-id6064 . -118) (undo-tree-id6065 . -118) (undo-tree-id6066 . -118) (undo-tree-id6067 . -118) (undo-tree-id6068 . -118) (undo-tree-id6069 . -118) (undo-tree-id6070 . -118) (undo-tree-id6071 . -118) (undo-tree-id6072 . -118) (undo-tree-id6073 . -118) (undo-tree-id6074 . -118) (undo-tree-id6075 . -118) (undo-tree-id6076 . -118) (undo-tree-id6077 . -118) (undo-tree-id6078 . -118) (undo-tree-id6079 . -118) (undo-tree-id6080 . -96) (undo-tree-id6081 . -96) (undo-tree-id6082 . -96) (undo-tree-id6083 . -96) (undo-tree-id6084 . -96) (undo-tree-id6085 . -96) (undo-tree-id6086 . -96) (undo-tree-id6087 . -75) (undo-tree-id6088 . -75) (undo-tree-id6089 . -75) (undo-tree-id6090 . -75) (undo-tree-id6091 . -75) (undo-tree-id6092 . -55) (undo-tree-id6093 . -55) (undo-tree-id6094 . -55) (undo-tree-id6095 . -55) (undo-tree-id6096 . -55) (undo-tree-id6097 . -34) (undo-tree-id6098 . -34) (undo-tree-id6099 . -34) (undo-tree-id6100 . -34) (undo-tree-id6101 . -34) (undo-tree-id6102 . -14) (undo-tree-id6103 . -14) (undo-tree-id6104 . -14) (undo-tree-id6105 . -14) (undo-tree-id6106 . -14) (undo-tree-id6107 . -13) (undo-tree-id6108 . -13) (undo-tree-id6109 . -13) (undo-tree-id6110 . -13) (undo-tree-id6111 . -13) (undo-tree-id6112 . -55) (t 26713 2575 321075 996000)) ((3345 . 3463)) (26713 2591 246905 879000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3358) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) 3359) nil (26713 2600 420753 948000) 0 nil])
nil
([nil nil ((3358 . 3362)) nil (26713 2600 420652 697000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3362) (undo-tree-id6119 . -1)) nil (26713 2600 420652 142000) 0 nil])
([nil nil ((#("    print(foo5)" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 15 (fontified t)) . 3362) (undo-tree-id6113 . -15) (undo-tree-id6114 . -15) (undo-tree-id6115 . -15) (undo-tree-id6116 . -15) (undo-tree-id6117 . -15) (undo-tree-id6118 . -15)) nil (26713 2600 420650 36000) 0 nil])
([nil nil ((3362 . 3378)) nil (26713 2600 420634 703000) 0 nil])
([nil nil ((3344 . 3349) (t 26713 2600 430361 435000)) nil (26713 2641 214402 614000) 0 nil])
([nil nil ((3349 . 3359)) nil (26713 2641 214401 335000) 0 nil])
([nil nil ((#("OR" 0 2 (face font-lock-string-face fontified t)) . -3357) (undo-tree-id6546 . -2) 3359) nil (26713 2641 214399 682000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -3356) (undo-tree-id6545 . -1) 3357) nil (26713 2641 214396 608000) 0 nil])
([nil nil ((3356 . 3375)) nil (26713 2641 214393 869000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -3373) (undo-tree-id6543 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3374) (undo-tree-id6544 . -1) 3375) nil (26713 2641 214392 222000) 0 nil])
([nil nil ((3373 . 3377)) nil (26713 2641 214387 915000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -3376) (undo-tree-id6542 . -1) 3377) nil (26713 2641 214386 723000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -3374) (undo-tree-id6540 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -3375) (undo-tree-id6541 . -1) 3376) nil (26713 2641 214383 563000) 0 nil])
([nil nil ((3374 . 3379)) nil (26713 2641 214379 351000) 0 nil])
([nil nil ((3392 . 3397)) nil (26713 2641 214378 457000) 0 nil])
([nil nil ((3397 . 3408)) nil (26713 2641 214377 491000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-string-face fontified t)) . -3407) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) 3408) nil (26713 2641 214375 846000) 0 nil])
([nil nil ((3407 . 3419)) nil (26713 2641 214366 468000) 0 nil])
([nil nil ((#("STRING" 0 6 (face font-lock-string-face fontified t)) . -3413) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -2) (undo-tree-id6504 . -2) (undo-tree-id6505 . -2) (undo-tree-id6506 . -2) (undo-tree-id6507 . -2) (undo-tree-id6508 . -3) (undo-tree-id6509 . -3) (undo-tree-id6510 . -3) (undo-tree-id6511 . -3) (undo-tree-id6512 . -3) (undo-tree-id6513 . -4) (undo-tree-id6514 . -4) (undo-tree-id6515 . -4) (undo-tree-id6516 . -4) (undo-tree-id6517 . -4) (undo-tree-id6518 . -5) (undo-tree-id6519 . -5) (undo-tree-id6520 . -5) (undo-tree-id6521 . -5) (undo-tree-id6522 . -5) (undo-tree-id6523 . -6) (undo-tree-id6524 . -6) (undo-tree-id6525 . -6) (undo-tree-id6526 . -6) (undo-tree-id6527 . -6) (undo-tree-id6528 . -6) (undo-tree-id6529 . -6) (undo-tree-id6530 . -6) (undo-tree-id6531 . -6) (undo-tree-id6532 . -6) (undo-tree-id6533 . -6) 3419) nil (26713 2641 214362 165000) 0 nil])
([nil nil ((#("KECCAK " 0 7 (face font-lock-string-face fontified t)) . -3406) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -2) (undo-tree-id6412 . -2) (undo-tree-id6413 . -2) (undo-tree-id6414 . -2) (undo-tree-id6415 . -2) (undo-tree-id6416 . -3) (undo-tree-id6417 . -3) (undo-tree-id6418 . -3) (undo-tree-id6419 . -3) (undo-tree-id6420 . -3) (undo-tree-id6421 . -4) (undo-tree-id6422 . -4) (undo-tree-id6423 . -4) (undo-tree-id6424 . -4) (undo-tree-id6425 . -4) (undo-tree-id6426 . -5) (undo-tree-id6427 . -5) (undo-tree-id6428 . -5) (undo-tree-id6429 . -5) (undo-tree-id6430 . -5) (undo-tree-id6431 . -6) (undo-tree-id6432 . -6) (undo-tree-id6433 . -6) (undo-tree-id6434 . -6) (undo-tree-id6435 . -6) (undo-tree-id6436 . -6) (undo-tree-id6437 . -6) (undo-tree-id6438 . -6) (undo-tree-id6439 . -6) (undo-tree-id6440 . -6) (undo-tree-id6441 . -7) (undo-tree-id6442 . -7) (undo-tree-id6443 . -7) (undo-tree-id6444 . -7) (undo-tree-id6445 . -7) (undo-tree-id6446 . -7) (undo-tree-id6447 . -7) (undo-tree-id6448 . -7) (undo-tree-id6449 . -7) (undo-tree-id6450 . -7) (undo-tree-id6451 . -7) (undo-tree-id6452 . -7) (undo-tree-id6453 . -7) (undo-tree-id6454 . -7) (undo-tree-id6455 . -7) (undo-tree-id6456 . -7) (undo-tree-id6457 . -7) (undo-tree-id6458 . -7) (undo-tree-id6459 . -7) (undo-tree-id6460 . -7) (undo-tree-id6461 . -7) (undo-tree-id6462 . -7) (undo-tree-id6463 . -7) (undo-tree-id6464 . -7) (undo-tree-id6465 . -7) (undo-tree-id6466 . -7) (undo-tree-id6467 . -7) (undo-tree-id6468 . -7) (undo-tree-id6469 . -7) (undo-tree-id6470 . -7) (undo-tree-id6471 . -7) (undo-tree-id6472 . -7) (undo-tree-id6473 . -7) (undo-tree-id6474 . -7) (undo-tree-id6475 . -7) (undo-tree-id6476 . -7) (undo-tree-id6477 . -7) (undo-tree-id6478 . -7) (undo-tree-id6479 . -7) (undo-tree-id6480 . -7) (undo-tree-id6481 . -7) (undo-tree-id6482 . -7) (undo-tree-id6483 . -7) (undo-tree-id6484 . -7) (undo-tree-id6485 . -7) (undo-tree-id6486 . -7) (undo-tree-id6487 . -7) (undo-tree-id6488 . -7) (undo-tree-id6489 . -7) (undo-tree-id6490 . -7) (undo-tree-id6491 . -7) (undo-tree-id6492 . -7) 3413) nil (26713 2641 214301 742000) 0 nil])
([nil nil ((3406 . 3407)) nil (26713 2641 214235 428000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-string-face fontified t)) . -3406) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) 3407) nil (26713 2641 214234 567000) 0 nil])
([nil nil ((3406 . 3415)) nil (26713 2641 214223 443000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-string-face fontified t)) . -3414) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) 3415) nil (26713 2641 214222 544000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-string-face fontified t)) . -3413) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) 3414) nil (26713 2641 214216 27000) 0 nil])
([nil nil ((3413 . 3424)) nil (26713 2641 214204 577000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -3423) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) 3424) nil (26713 2641 214202 831000) 0 nil])
([nil nil ((3423 . 3427)) nil (26713 2641 214184 974000) 0 nil])
([nil nil ((3231 . 3243) (t 26713 2641 223795 259000)) nil (26713 2665 252190 904000) 0 nil])
([nil nil ((3286 . 3287)) nil (26713 2665 252186 124000) 0 nil])
([nil nil ((3463 . 3468) (t 26713 2665 261034 538000)) nil (26713 2930 669323 919000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3464) (undo-tree-id6548 . -4) 3468) nil (26713 2930 669322 938000) 0 nil])
([nil nil ((3464 . 3483)) nil (26713 2930 669321 178000) 0 nil])
([nil nil ((2911 . 2913)) nil (26713 2930 669320 677000) 0 nil])
([nil nil ((3459 . 3461)) nil (26713 2930 669320 72000) 0 nil])
([nil nil ((3468 . 3470)) nil (26713 2930 669319 347000) 0 nil])
([nil nil ((3467 . 3472)) nil (26713 2930 669318 648000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3468) (undo-tree-id6547 . -4) 3472) nil (26713 2930 669316 945000) 0 nil])
([nil nil ((3468 . 3482)) nil (26713 2930 669304 344000) 0 nil])
([nil nil ((3217 . 3218) (t 26713 2930 679021 551000)) nil (26714 13400 154402 983000) 0 nil])
([nil nil ((3218 . 3219) (3218 . 3219)) nil (26714 13400 154401 87000) 0 nil])
([nil nil ((3218 . 3229)) nil (26714 13400 154398 872000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-function-name-face fontified t)) . -3224) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -3225) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (#("1" 0 1 (face font-lock-function-name-face fontified t)) . -3226) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (#("0" 0 1 (face font-lock-function-name-face fontified t)) . -3227) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (#("1" 0 1 (face font-lock-function-name-face fontified t)) . -3228) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) 3229) nil (26714 13400 154349 927000) 0 nil])
([nil nil ((3224 . 3228)) nil (26714 13400 153991 908000) 0 nil])
([nil nil ((3228 . 3232)) nil (26714 13400 153990 910000) 0 nil])
([nil nil ((3232 . 3237)) nil (26714 13400 153986 346000) 0 nil])
([nil nil ((3229 . 3232) (t 26714 13400 166259 1000)) nil (26714 15811 93193 415000) 0 nil])
([nil nil ((3240 . 3253)) nil (26714 15811 93193 6000) 0 nil])
([nil nil ((3217 . 3218)) nil (26714 15811 93192 729000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3217) (undo-tree-id7151 . -1) 3218) nil (26714 15811 93192 248000) 0 nil])
([nil nil ((3217 . 3227)) nil (26714 15811 93191 513000) 0 nil])
([nil nil ((#("with" 0 4 (face font-lock-comment-face fontified t)) . -3223) (undo-tree-id7150 . -4) 3227) nil (26714 15811 93191 21000) 0 nil])
([nil nil ((3223 . 3242)) nil (26714 15811 93190 239000) 0 nil])
([nil nil ((3242 . 3247)) nil (26714 15811 93190 25000) 0 nil])
([nil nil ((#("wher" 0 4 (face font-lock-comment-face fontified t)) . -3243) (undo-tree-id7149 . -4) 3247) nil (26714 15811 93189 682000) 0 nil])
([nil nil ((3243 . 3252)) nil (26714 15811 93188 845000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -3251) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) 3252) nil (26714 15811 93188 184000) 0 nil])
([nil nil ((3251 . 3265)) nil (26714 15811 93185 271000) 0 nil])
([nil nil ((#("were " 0 5 (face font-lock-comment-face fontified t)) . -3260) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -2) (undo-tree-id7122 . -2) (undo-tree-id7123 . -2) (undo-tree-id7124 . -2) (undo-tree-id7125 . -2) (undo-tree-id7126 . -3) (undo-tree-id7127 . -3) (undo-tree-id7128 . -3) (undo-tree-id7129 . -3) (undo-tree-id7130 . -3) (undo-tree-id7131 . -4) (undo-tree-id7132 . -4) (undo-tree-id7133 . -4) (undo-tree-id7134 . -4) (undo-tree-id7135 . -4) (undo-tree-id7136 . -5) (undo-tree-id7137 . -5) (undo-tree-id7138 . -5) (undo-tree-id7139 . -5) (undo-tree-id7140 . -5) (undo-tree-id7141 . -5) (undo-tree-id7142 . -5) 3265) nil (26714 15811 93184 243000) 0 nil])
([nil nil ((3260 . 3266)) nil (26714 15811 93171 968000) 0 nil])
([nil nil ((#("hwere " 0 6 (face font-lock-comment-face fontified t)) . -3260) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -2) (undo-tree-id7090 . -2) (undo-tree-id7091 . -2) (undo-tree-id7092 . -2) (undo-tree-id7093 . -2) (undo-tree-id7094 . -3) (undo-tree-id7095 . -3) (undo-tree-id7096 . -3) (undo-tree-id7097 . -3) (undo-tree-id7098 . -3) (undo-tree-id7099 . -4) (undo-tree-id7100 . -4) (undo-tree-id7101 . -4) (undo-tree-id7102 . -4) (undo-tree-id7103 . -4) (undo-tree-id7104 . -5) (undo-tree-id7105 . -5) (undo-tree-id7106 . -5) (undo-tree-id7107 . -5) (undo-tree-id7108 . -5) (undo-tree-id7109 . -6) (undo-tree-id7110 . -6) (undo-tree-id7111 . -6) (undo-tree-id7112 . -6) (undo-tree-id7113 . -6) (undo-tree-id7114 . -6) (undo-tree-id7115 . -6) 3266) nil (26714 15811 93170 896000) 0 nil])
([nil nil ((3260 . 3265)) nil (26714 15811 93154 40000) 0 nil])
([nil nil ((#("whee " 0 5 (face font-lock-comment-face fontified t)) . -3260) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -2) (undo-tree-id7063 . -2) (undo-tree-id7064 . -2) (undo-tree-id7065 . -2) (undo-tree-id7066 . -2) (undo-tree-id7067 . -3) (undo-tree-id7068 . -3) (undo-tree-id7069 . -3) (undo-tree-id7070 . -3) (undo-tree-id7071 . -3) (undo-tree-id7072 . -4) (undo-tree-id7073 . -4) (undo-tree-id7074 . -4) (undo-tree-id7075 . -4) (undo-tree-id7076 . -4) (undo-tree-id7077 . -5) (undo-tree-id7078 . -5) (undo-tree-id7079 . -5) (undo-tree-id7080 . -5) (undo-tree-id7081 . -5) (undo-tree-id7082 . -5) (undo-tree-id7083 . -5) 3265) nil (26714 15811 93153 52000) 0 nil])
([nil nil ((3260 . 3268)) nil (26714 15811 93138 518000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3267) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) 3268) nil (26714 15811 93137 900000) 0 nil])
([nil nil ((3267 . 3288)) nil (26714 15811 93129 304000) 0 nil])
([nil nil ((3293 . 3304) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 3287) (3285 . 3287) (3285 . 3286) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 3285) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (3284 . 3285) (3288 . 3291)) nil (26714 15811 93128 204000) 0 nil])
([nil nil ((3304 . 3319)) nil (26714 15811 93112 100000) 0 nil])
([nil nil ((3355 . 3362) (t 26714 15811 101298 872000)) nil (26714 15891 130654 233000) 0 nil])
([nil nil ((3362 . 3365)) nil (26714 15891 130653 772000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -3363) (undo-tree-id7198 . -1) (#(" " 0 1 (fontified t)) . -3364) (undo-tree-id7199 . -1) 3365) nil (26714 15891 130653 34000) 0 nil])
([nil nil ((3363 . 3367)) nil (26714 15891 130650 945000) 0 nil])
([nil nil ((3367 . 3368)) nil (26714 15891 130650 611000) 0 nil])
([nil nil ((#("%" 0 1 (face font-lock-operator-face fontified t)) . -3367) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) 3368) nil (26714 15891 130650 85000) 0 nil])
([nil nil ((3367 . 3369)) nil (26714 15891 130644 274000) 0 nil])
([nil nil ((#("%" 0 1 (face font-lock-operator-face fontified t)) . -3368) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) 3369) nil (26714 15891 130643 737000) 0 nil])
([nil nil ((3368 . 3371)) nil (26714 15891 130640 389000) 0 nil])
([nil nil ((3371 . 3376)) nil (26714 15891 130639 875000) 0 nil])
([nil nil ((3376 . 3396)) nil (26714 15891 130639 542000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . -3394) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -3395) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) 3396) nil (26714 15891 130638 595000) 0 nil])
([nil nil ((3394 . 3396)) nil (26714 15891 130625 422000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3395) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) 3396) nil (26714 15891 130624 21000) 0 nil])
([nil nil ((3395 . 3397)) nil (26714 15891 130609 106000) 0 nil])
([nil nil ((3397 . 3409)) nil (26714 15891 130605 225000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3360) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) 3361 (t 26714 15891 139219 530000)) nil (26714 15905 704072 282000) 0 nil])
([nil nil ((3360 . 3361)) nil (26714 15905 704056 288000) 0 nil])
([nil nil ((3216 . 3217) (t 26714 15905 712532 91000)) nil (26714 16399 814464 15000) 0 nil])
([nil nil ((3216 . 3217)) nil (26714 16399 814459 165000) 0 nil])
([nil nil ((3217 . 3224) (t 26714 16399 822399 308000)) nil (26714 16957 374910 529000) 0 nil])
([nil nil ((3224 . 3238)) nil (26714 16957 374910 227000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3235) (undo-tree-id7237 . -1) (#("," 0 1 (fontified t)) . -3236) (undo-tree-id7238 . -1) (#(" " 0 1 (fontified t)) . -3237) (undo-tree-id7239 . -1) 3238) nil (26714 16957 374909 265000) 0 nil])
([nil nil ((3235 . 3239)) nil (26714 16957 374907 660000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -3238) (undo-tree-id7236 . -1) 3239) nil (26714 16957 374907 295000) 0 nil])
([nil nil ((3238 . 3241)) nil (26714 16957 374906 392000) 0 nil])
([nil nil ((3241 . 3242)) nil (26714 16957 374906 158000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3241) (undo-tree-id7235 . -1) 3242) nil (26714 16957 374905 758000) 0 nil])
([nil nil ((3217 . 3220)) nil (26714 16957 374904 934000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3218) (undo-tree-id7233 . -1) (#(" " 0 1 (fontified t)) . -3219) (undo-tree-id7234 . -1) 3220) nil (26714 16957 374904 455000) 0 nil])
([nil nil ((3218 . 3221)) nil (26714 16957 374902 921000) 0 nil])
([nil nil ((3221 . 3222)) nil (26714 16957 374902 542000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -3221) (undo-tree-id7232 . -1) 3222) nil (26714 16957 374901 926000) 0 nil])
([nil nil ((3245 . 3250)) nil (26714 16957 374901 95000) 0 nil])
([nil nil ((#("def sponge(f, pad, r, N, d):" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 10 (face font-lock-function-name-face fontified t) 10 28 (fontified t)) . 3217)) nil (26714 16957 374900 677000) 0 nil])
([nil nil ((3217 . 3228)) nil (26714 16957 374900 431000) 0 nil])
([nil nil ((3228 . 3229)) nil (26714 16957 374900 150000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -3228) (undo-tree-id7231 . -1) 3229) nil (26714 16957 374899 776000) 0 nil])
([nil nil ((3228 . 3232)) nil (26714 16957 374898 993000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -3231) (undo-tree-id7230 . -1) 3232) nil (26714 16957 374898 558000) 0 nil])
([nil nil ((3231 . 3233)) nil (26714 16957 374897 736000) 0 nil])
([nil nil ((3232 . 3235)) nil (26714 16957 374897 507000) 0 nil])
([nil nil ((3236 . 3237)) nil (26714 16957 374897 184000) 0 nil])
([nil nil ((3237 . 3242)) nil (26714 16957 374896 943000) 0 nil])
([nil nil ((#("# Pad message S with 10*1 (regex notation) where 0s are added until
# total length is a multiple of x.
def pad101(x, S):
    offset = x - (len(S) + 2) % x
    return S + \"1\" + \"0\"*offset + \"1\"
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 68 (face font-lock-comment-face fontified t) 68 70 (face font-lock-comment-delimiter-face fontified t) 70 102 (face font-lock-comment-face fontified t) 102 103 (face font-lock-comment-face fontified t) 103 106 (face font-lock-keyword-face fontified t) 106 107 (fontified t) 107 113 (face font-lock-function-name-face fontified t) 113 121 (fontified t) 121 125 (fontified t) 125 131 (face font-lock-variable-name-face fontified t) 131 132 (fontified t) 132 133 (face font-lock-operator-face fontified t) 133 136 (fontified t) 136 137 (face font-lock-operator-face fontified t) 137 139 (fontified t) 139 142 (face font-lock-builtin-face fontified t) 142 146 (fontified t) 146 147 (face font-lock-operator-face fontified t) 147 151 (fontified t) 151 152 (face font-lock-operator-face fontified t) 152 155 (fontified t) 155 159 (fontified t) 159 165 (face font-lock-keyword-face fontified t) 165 168 (fontified t) 168 169 (face font-lock-operator-face fontified t) 169 170 (fontified t) 170 173 (face font-lock-string-face fontified t) 173 174 (fontified t) 174 175 (face font-lock-operator-face fontified t) 175 176 (fontified t) 176 179 (face font-lock-string-face fontified t) 179 180 (face font-lock-operator-face fontified t) 180 187 (fontified t) 187 188 (face font-lock-operator-face fontified t) 188 189 (fontified t) 189 192 (face font-lock-string-face fontified t) 192 193 (fontified t)) . 3249) (undo-tree-id7229 . -193) 3442) nil (26714 16957 374896 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3409 . 3410) (nil fontified nil 3409 . 3410) (nil fontified nil 3406 . 3409) (nil fontified nil 3405 . 3406) (nil fontified nil 3404 . 3405) (nil fontified nil 3397 . 3404) (nil fontified nil 3396 . 3397) (nil fontified nil 3393 . 3396) (nil fontified nil 3392 . 3393) (nil fontified nil 3391 . 3392) (nil fontified nil 3390 . 3391) (nil fontified nil 3387 . 3390) (nil fontified nil 3386 . 3387) (nil fontified nil 3385 . 3386) (nil fontified nil 3382 . 3385) (nil fontified nil 3376 . 3382) (nil fontified nil 3372 . 3376) (nil fontified nil 3369 . 3372) (nil fontified nil 3368 . 3369) (nil fontified nil 3364 . 3368) (nil fontified nil 3363 . 3364) (nil fontified nil 3359 . 3363) (nil fontified nil 3356 . 3359) (nil fontified nil 3354 . 3356) (nil fontified nil 3353 . 3354) (nil fontified nil 3350 . 3353) (nil fontified nil 3349 . 3350) (nil fontified nil 3348 . 3349) (nil fontified nil 3342 . 3348) (nil fontified nil 3338 . 3342) (nil fontified nil 3330 . 3338) (nil fontified nil 3324 . 3330) (nil fontified nil 3323 . 3324) (nil fontified nil 3320 . 3323) (nil fontified nil 3319 . 3320) (nil fontified nil 3287 . 3319) (nil fontified nil 3285 . 3287) (nil fontified nil 3219 . 3285) (nil fontified nil 3217 . 3219) (3217 . 3410)) nil (26714 16957 374895 76000) 0 nil])
([nil nil ((3410 . 3411)) nil (26714 16957 374892 710000) 0 nil])
([nil nil ((3410 . 3411)) nil (26714 16957 374892 483000) 0 nil])
([nil nil ((3437 . 3443)) nil (26714 16957 374892 172000) 0 nil])
([nil nil ((3411 . 3412)) nil (26714 16957 374891 924000) 0 nil])
([nil nil ((3412 . 3429)) nil (26714 16957 374891 604000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3428) (undo-tree-id7228 . -1) 3429) nil (26714 16957 374891 72000) 0 nil])
([nil nil ((3428 . 3439)) nil (26714 16957 374890 150000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -3438) (undo-tree-id7227 . -1) 3439) nil (26714 16957 374889 805000) 0 nil])
([nil nil ((3438 . 3447)) nil (26714 16957 374888 958000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -3445) (undo-tree-id7225 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3446) (undo-tree-id7226 . -1) 3447) nil (26714 16957 374888 467000) 0 nil])
([nil nil ((3445 . 3446)) nil (26714 16957 374887 52000) 0 nil])
([nil nil ((3478 . 3483)) nil (26714 16957 374886 758000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3482) (undo-tree-id7224 . -1) 3483) nil (26714 16957 374886 331000) 0 nil])
([nil nil ((3482 . 3487)) nil (26714 16957 374885 224000) 0 nil])
([nil nil ((3487 . 3488)) nil (26714 16957 374884 928000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3487) (undo-tree-id7223 . -1) 3488) nil (26714 16957 374884 406000) 0 nil])
([nil nil ((3487 . 3490)) nil (26714 16957 374883 510000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -3489) (undo-tree-id7222 . -1) 3490) nil (26714 16957 374883 24000) 0 nil])
([nil nil ((3489 . 3493)) nil (26714 16957 374882 143000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -3491) (undo-tree-id7220 . -1) (#("c" 0 1 (fontified t)) . -3492) (undo-tree-id7221 . -1) 3493) nil (26714 16957 374881 517000) 0 nil])
([nil nil ((3491 . 3500)) nil (26714 16957 374878 225000) 0 nil])
([nil nil ((#("S + " 0 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -3383) (undo-tree-id7219 . -4) 3387) nil (26714 16957 374877 838000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -3376) (undo-tree-id7213 . -7) (undo-tree-id7214 . -7) (undo-tree-id7215 . -7) (undo-tree-id7216 . -7) (undo-tree-id7217 . -7) (undo-tree-id7218 . -7) 3383) nil (26714 16957 374876 286000) 0 nil])
([nil nil ((3376 . 3383)) nil (26714 16957 374872 255000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3382) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) 3383) nil (26714 16957 374868 667000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -3334) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) 3335 (t 26714 16957 384163 886000)) nil (26714 17030 715446 187000) 0 nil])
([nil nil ((3334 . 3335)) nil (26714 17030 715443 136000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-comment-face fontified t)) . -3231) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) 3232) nil (26714 17030 715442 597000) 0 nil])
([nil nil ((#("message " 0 8 (face font-lock-comment-face fontified t)) . -3223) (undo-tree-id7384 . -8) (undo-tree-id7385 . -8) (undo-tree-id7386 . -8) (undo-tree-id7387 . -8) (undo-tree-id7388 . -8) (undo-tree-id7389 . -8) (undo-tree-id7390 . -8) (undo-tree-id7391 . -8) (undo-tree-id7392 . -8) (undo-tree-id7393 . -8) (undo-tree-id7394 . -8) (undo-tree-id7395 . -8) (undo-tree-id7396 . -8) (undo-tree-id7397 . -8) (undo-tree-id7398 . -8) (undo-tree-id7399 . -8) 3231) nil (26714 17030 715436 567000) 0 nil])
([nil nil ((3223 . 3230)) nil (26714 17030 715427 377000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -3282) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) 3283) nil (26714 17030 715426 899000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . 3282)) nil (26714 17030 715425 568000) 0 nil])
([nil nil ((3298 . 3299) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 3285) (3283 . 3285) (3283 . 3284) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 3283) (3282 . 3283) (3295 . 3296)) nil (26714 17030 715425 10000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3297) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (#("(" 0 1 (face font-lock-comment-face fontified t)) . -3298) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) 3299) nil (26714 17030 715423 388000) 0 nil])
([nil nil ((3230 . 3233)) nil (26714 17030 715405 317000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -3231) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -3232) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) 3233) nil (26714 17030 715404 437000) 0 nil])
([nil nil ((3231 . 3239)) nil (26714 17030 715394 107000) 0 nil])
([nil nil ((#("irigi" 0 5 (face font-lock-comment-face fontified t)) . -3234) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -2) (undo-tree-id7302 . -2) (undo-tree-id7303 . -2) (undo-tree-id7304 . -2) (undo-tree-id7305 . -2) (undo-tree-id7306 . -3) (undo-tree-id7307 . -3) (undo-tree-id7308 . -3) (undo-tree-id7309 . -3) (undo-tree-id7310 . -3) (undo-tree-id7311 . -4) (undo-tree-id7312 . -4) (undo-tree-id7313 . -4) (undo-tree-id7314 . -4) (undo-tree-id7315 . -4) (undo-tree-id7316 . -5) (undo-tree-id7317 . -5) (undo-tree-id7318 . -5) (undo-tree-id7319 . -5) (undo-tree-id7320 . -5) (undo-tree-id7321 . -5) 3239) nil (26714 17030 715393 304000) 0 nil])
([nil nil ((3234 . 3236)) nil (26714 17030 715379 782000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -3235) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) 3236) nil (26714 17030 715379 175000) 0 nil])
([nil nil ((3235 . 3238)) nil (26714 17030 715376 16000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -3237) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) 3238) nil (26714 17030 715375 154000) 0 nil])
([nil nil ((#("of " 0 3 (face font-lock-comment-face fontified t)) . -3234) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -2) (undo-tree-id7263 . -2) (undo-tree-id7264 . -2) (undo-tree-id7265 . -2) (undo-tree-id7266 . -2) (undo-tree-id7267 . -3) (undo-tree-id7268 . -3) (undo-tree-id7269 . -3) (undo-tree-id7270 . -3) (undo-tree-id7271 . -3) (undo-tree-id7272 . -3) (undo-tree-id7273 . -3) (undo-tree-id7274 . -3) (undo-tree-id7275 . -3) (undo-tree-id7276 . -3) (undo-tree-id7277 . -3) (undo-tree-id7278 . -3) (undo-tree-id7279 . -3) (undo-tree-id7280 . -3) (undo-tree-id7281 . -3) (undo-tree-id7282 . -3) (undo-tree-id7283 . -3) 3237) nil (26714 17030 715370 911000) 0 nil])
([nil nil ((3234 . 3242)) nil (26714 17030 715345 916000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -3294) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) 3295) nil (26714 17030 715345 257000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . 3294)) nil (26714 17030 715334 672000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 3285) (3283 . 3285) (3283 . 3284) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 3283) (3282 . 3283) (3327 . 3328)) nil (26714 17030 715330 559000) 0 nil])
([nil nil ((3330 . 3331) (t 26714 17030 724052 674000)) nil (26714 17051 493092 386000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3330) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) 3331) nil (26714 17051 493091 843000) 0 nil])
([nil nil ((3330 . 3347)) nil (26714 17051 493088 346000) 0 nil])
([nil nil ((#("th" 0 2 (face font-lock-comment-face fontified t)) . -3345) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -2) (undo-tree-id7565 . -2) (undo-tree-id7566 . -2) (undo-tree-id7567 . -2) (undo-tree-id7568 . -2) (undo-tree-id7569 . -2) 3347) nil (26714 17051 493087 796000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-comment-face fontified t)) . -3343) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3344) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) 3345) nil (26714 17051 493082 103000) 0 nil])
([nil nil ((3343 . 3345)) nil (26714 17051 493055 199000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -3343) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -3344) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) 3345) nil (26714 17051 493054 423000) 0 nil])
([nil nil ((3360 . 3366) (3350 . 3352) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 3350) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (3349 . 3350) (3343 . 3358)) nil (26714 17051 493043 236000) 0 nil])
([nil nil ((3366 . 3368)) nil (26714 17051 493039 591000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . -3366) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -3367) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) 3368) nil (26714 17051 493038 16000) 0 nil])
([nil nil ((3366 . 3368)) nil (26714 17051 493013 872000) 0 nil])
([nil nil ((3544 . 3548)) nil (26714 17051 493013 542000) 0 nil])
([nil nil ((#("S)" 0 2 (fontified t)) . -3409) (undo-tree-id7428 . -2) (undo-tree-id7429 . -2) (undo-tree-id7430 . -2) (undo-tree-id7431 . -2) (undo-tree-id7432 . -2) (undo-tree-id7433 . -2) 3411) nil (26714 17051 493012 834000) 0 nil])
([nil nil ((#("len(" 0 3 (face font-lock-builtin-face fontified t) 3 4 (fontified t)) . -3405) (undo-tree-id7417 . -4) (undo-tree-id7418 . -4) (undo-tree-id7419 . -4) (undo-tree-id7420 . -4) (undo-tree-id7421 . -4) (undo-tree-id7422 . -4) (undo-tree-id7423 . -4) (undo-tree-id7424 . -4) (undo-tree-id7425 . -4) (undo-tree-id7426 . -4) (undo-tree-id7427 . -4) 3409) nil (26714 17051 493006 281000) 0 nil])
([nil nil ((3405 . 3406)) nil (26714 17051 492988 188000) 0 nil])
([nil nil ((3543 . 3548) (t 26714 17051 502015 538000)) nil (26714 17232 960791 563000) 0 nil])
([nil nil ((3548 . 3561)) nil (26714 17232 960790 692000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3560) (undo-tree-id7929 . -1) 3561) nil (26714 17232 960790 321000) 0 nil])
([nil nil ((3560 . 3563)) nil (26714 17232 960789 508000) 0 nil])
([nil nil ((3563 . 3568)) nil (26714 17232 960789 167000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3562) (undo-tree-id7928 . -1) 3563) nil (26714 17232 960788 704000) 0 nil])
([nil nil ((3562 . 3572)) nil (26714 17232 960787 590000) 0 nil])
([nil nil ((3572 . 3577)) nil (26714 17232 960787 245000) 0 nil])
([nil nil ((3577 . 3584)) nil (26714 17232 960787 10000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -3582) (undo-tree-id7926 . -1) (#(" " 0 1 (fontified t)) . -3583) (undo-tree-id7927 . -1) 3584) nil (26714 17232 960786 609000) 0 nil])
([nil nil ((3582 . 3586)) nil (26714 17232 960785 275000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3585) (undo-tree-id7925 . -1) 3586) nil (26714 17232 960784 643000) 0 nil])
([nil nil ((3585 . 3593)) nil (26714 17232 960783 877000) 0 nil])
([nil nil ((3593 . 3598)) nil (26714 17232 960783 656000) 0 nil])
([nil nil ((#("c = b - 1600 + c" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 13 (fontified t) 13 14 (face font-lock-operator-face fontified t) 14 16 (fontified t)) . 3577)) nil (26714 17232 960783 264000) 0 nil])
([nil nil ((3577 . 3582)) nil (26714 17232 960782 987000) 0 nil])
([nil nil ((#("blo" 0 3 (fontified t)) . -3579) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -2) (undo-tree-id7915 . -2) (undo-tree-id7916 . -2) (undo-tree-id7917 . -2) (undo-tree-id7918 . -2) (undo-tree-id7919 . -3) (undo-tree-id7920 . -3) (undo-tree-id7921 . -3) (undo-tree-id7922 . -3) (undo-tree-id7923 . -3) (undo-tree-id7924 . -3) 3582) nil (26714 17232 960782 395000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -3578) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) 3579) nil (26714 17232 960774 242000) 0 nil])
([nil nil ((3578 . 3591)) nil (26714 17232 960762 698000) 0 nil])
([nil nil ((3591 . 3593)) nil (26714 17232 960762 357000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -3592) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) 3593) nil (26714 17232 960761 647000) 0 nil])
([nil nil ((3592 . 3605)) nil (26714 17232 960756 541000) 0 nil])
([nil nil ((3605 . 3608)) nil (26714 17232 960755 972000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -3601) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (#(" " 0 1 (fontified t)) . -3602) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) 3603) nil (26714 17232 960754 820000) 0 nil])
([nil nil ((3601 . 3602)) nil (26714 17232 960737 57000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3600) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -3601) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) 3602) nil (26714 17232 960735 860000) 0 nil])
([nil nil ((3600 . 3601)) nil (26714 17232 960711 556000) 0 nil])
([nil nil ((3606 . 3607)) nil (26714 17232 960711 324000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3606) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) 3607) nil (26714 17232 960710 718000) 0 nil])
([nil nil ((3606 . 3609)) nil (26714 17232 960706 151000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3608) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) 3609) nil (26714 17232 960705 521000) 0 nil])
([nil nil ((3608 . 3610)) nil (26714 17232 960702 249000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3606) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (#(" " 0 1 (fontified t)) . -3607) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . -3608) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (#(" " 0 1 (fontified t)) . -3609) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) 3610) nil (26714 17232 960699 278000) 0 nil])
([nil nil ((3606 . 3611)) nil (26714 17232 960637 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3608) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3609) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (#(" " 0 1 (fontified t)) . -3610) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) 3611) nil (26714 17232 960635 854000) 0 nil])
([nil nil ((3608 . 3613)) nil (26714 17232 960609 399000) 0 nil])
([nil nil ((3613 . 3634)) nil (26714 17232 960608 912000) 0 nil])
([nil nil ((3634 . 3637)) nil (26714 17232 960608 108000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -3635) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (#("n" 0 1 (fontified t)) . -3636) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) 3637) nil (26714 17232 960606 846000) 0 nil])
([nil nil ((3635 . 3638)) nil (26714 17232 960586 254000) 0 nil])
([nil nil ((3638 . 3642)) nil (26714 17232 960582 793000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -3641) (undo-tree-id7962 . -1) 3642 (t 26714 17232 971602 614000)) nil (26714 17469 182425 472000) 0 nil])
([nil nil ((3641 . 3642)) nil (26714 17469 182424 64000) 0 nil])
([nil nil ((3642 . 3647)) nil (26714 17469 182423 651000) 0 nil])
([nil nil ((3647 . 3650)) nil (26714 17469 182423 172000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3649) (undo-tree-id7961 . -1) 3650) nil (26714 17469 182422 552000) 0 nil])
([nil nil ((3649 . 3653)) nil (26714 17469 182421 207000) 0 nil])
([nil nil ((3653 . 3654)) nil (26714 17469 182420 713000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3653) (undo-tree-id7960 . -1) 3654) nil (26714 17469 182419 726000) 0 nil])
([nil nil ((3653 . 3657)) nil (26714 17469 182417 916000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . -3655) (undo-tree-id7958 . -1) (#(" " 0 1 (fontified t)) . -3656) (undo-tree-id7959 . -1) 3657) nil (26714 17469 182417 35000) 0 nil])
([nil nil ((3655 . 3657)) nil (26714 17469 182414 806000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -3655) (undo-tree-id7956 . -1) (#(" " 0 1 (fontified t)) . -3656) (undo-tree-id7957 . -1) 3657) nil (26714 17469 182413 748000) 0 nil])
([nil nil ((3655 . 3661)) nil (26714 17469 182411 7000) 0 nil])
([nil nil ((3661 . 3666)) nil (26714 17469 182410 706000) 0 nil])
([nil nil ((3666 . 3675)) nil (26714 17469 182410 239000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -3672) (undo-tree-id7955 . -3) 3675) nil (26714 17469 182409 522000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -3670) (undo-tree-id7954 . -2) 3672) nil (26714 17469 182406 541000) 0 nil])
([nil nil ((3670 . 3681)) nil (26714 17469 182404 922000) 0 nil])
([nil nil ((#("range(" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t)) . -3675) (undo-tree-id7953 . -6) 3681) nil (26714 17469 182404 395000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -3672) (undo-tree-id7952 . -3) 3675) nil (26714 17469 182402 900000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3670) (undo-tree-id7950 . -1) (#(" " 0 1 (fontified t)) . -3671) (undo-tree-id7951 . -1) 3672) nil (26714 17469 182401 226000) 0 nil])
([nil nil ((3670 . 3681)) nil (26714 17469 182398 640000) 0 nil])
([nil nil ((3681 . 3684)) nil (26714 17469 182398 258000) 0 nil])
([nil nil ((3684 . 3693)) nil (26714 17469 182397 874000) 0 nil])
([nil nil ((3693 . 3699)) nil (26714 17469 182397 107000) 0 nil])
([nil nil ((#("f(" 0 2 (fontified t)) . -3697) (undo-tree-id7949 . -2) 3699) nil (26714 17469 182396 251000) 0 nil])
([nil nil ((3697 . 3706)) nil (26714 17469 182393 241000) 0 nil])
([nil nil ((3706 . 3710)) nil (26714 17469 182392 276000) 0 nil])
([nil nil ((3684 . 3693)) nil (26714 17469 182391 372000) 0 nil])
([nil nil ((3693 . 3705)) nil (26714 17469 182390 650000) 0 nil])
([nil nil ((3705 . 3714)) nil (26714 17469 182390 33000) 0 nil])
([nil nil ((#("up" 0 2 (face font-lock-comment-face fontified t)) . -3712) (undo-tree-id7948 . -2) 3714) nil (26714 17469 182389 242000) 0 nil])
([nil nil ((#("this " 0 5 (face font-lock-comment-face fontified t)) . -3707) (undo-tree-id7947 . -5) 3712) nil (26714 17469 182387 743000) 0 nil])
([nil nil ((#("clean " 0 6 (face font-lock-comment-face fontified t)) . -3701) (undo-tree-id7946 . -6) 3707) nil (26714 17469 182386 98000) 0 nil])
([nil nil ((3701 . 3711)) nil (26714 17469 182384 698000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3710) (undo-tree-id7945 . -1) 3711) nil (26714 17469 182383 820000) 0 nil])
([nil nil ((3736 . 3737)) nil (26714 17469 182382 338000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3736) (undo-tree-id7944 . -1) 3737) nil (26714 17469 182381 551000) 0 nil])
([nil nil ((3736 . 3745)) nil (26714 17469 182379 257000) 0 nil])
([nil nil ((3745 . 3747)) nil (26714 17469 182378 727000) 0 nil])
([nil nil ((3736 . 3737)) nil (26714 17469 182378 328000) 0 nil])
([nil nil ((3748 . 3752)) nil (26714 17469 182377 657000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3751) (undo-tree-id7943 . -1) 3752) nil (26714 17469 182376 880000) 0 nil])
([nil nil ((3751 . 3756)) nil (26714 17469 182375 143000) 0 nil])
([nil nil ((3756 . 3759)) nil (26714 17469 182374 719000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3651) (undo-tree-id7942 . -1) 3652) nil (26714 17469 182374 149000) 0 nil])
([nil nil ((3651 . 3663)) nil (26714 17469 182372 114000) 0 nil])
([nil nil ((#("0\" * 1600" 0 1 (fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 9 (face font-lock-string-face fontified t)) . 3663) (undo-tree-id7936 . -9) (undo-tree-id7937 . -9) (undo-tree-id7938 . -9) (undo-tree-id7939 . -9) (undo-tree-id7940 . -9) (undo-tree-id7941 . -9)) nil (26714 17469 182370 153000) 0 nil])
([nil nil ((3663 . 3664)) nil (26714 17469 182362 13000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -3663) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) 3664) nil (26714 17469 182359 913000) 0 nil])
([nil nil ((3663 . 3681)) nil (26714 17469 182340 746000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-comment-face fontified t)) . -3466) (undo-tree-id8001 . -1) 3467 (t 26714 17469 192507 49000)) nil (26714 17498 101376 424000) 0 nil])
([nil nil ((#("string " 0 7 (face font-lock-comment-face fontified t)) . -3459) (undo-tree-id7994 . -7) (undo-tree-id7995 . -7) (undo-tree-id7996 . -7) (undo-tree-id7997 . -7) (undo-tree-id7998 . -7) (undo-tree-id7999 . -7) (undo-tree-id8000 . -7) 3466) nil (26714 17498 101372 717000) 0 nil])
([nil nil ((3459 . 3464)) nil (26714 17498 101366 287000) 0 nil])
([nil nil ((#("array" 0 5 (face font-lock-comment-face fontified t)) . -3459) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -2) (undo-tree-id7969 . -2) (undo-tree-id7970 . -2) (undo-tree-id7971 . -2) (undo-tree-id7972 . -2) (undo-tree-id7973 . -3) (undo-tree-id7974 . -3) (undo-tree-id7975 . -3) (undo-tree-id7976 . -3) (undo-tree-id7977 . -3) (undo-tree-id7978 . -4) (undo-tree-id7979 . -4) (undo-tree-id7980 . -4) (undo-tree-id7981 . -4) (undo-tree-id7982 . -4) (undo-tree-id7983 . -5) (undo-tree-id7984 . -5) (undo-tree-id7985 . -5) (undo-tree-id7986 . -5) (undo-tree-id7987 . -5) (undo-tree-id7988 . -5) (undo-tree-id7989 . -5) (undo-tree-id7990 . -5) (undo-tree-id7991 . -5) (undo-tree-id7992 . -5) (undo-tree-id7993 . -5) 3464) nil (26714 17498 101364 83000) 0 nil])
([nil nil ((3459 . 3480)) nil (26714 17498 101320 442000) 0 nil])
([nil nil ((3480 . 3481)) nil (26714 17498 101316 352000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3785) (undo-tree-id8040 . -1) 3786 (t 26714 17498 112165 285000)) nil (26714 17520 225834 28000) 0 nil])
([nil nil ((3785 . 3786)) nil (26714 17520 225830 562000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -3785) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) 3786) nil (26714 17520 225828 708000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 3785) (#("*" 0 1 (face font-lock-operator-face fontified t)) . 3785) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . 3785) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 3785) (#("0" 0 1 (fontified t)) . 3785)) nil (26714 17520 225817 13000) 0 nil])
([nil nil ((3785 . 3806)) nil (26714 17520 225807 657000) 0 nil])
([nil nil ((3806 . 3807)) nil (26714 17520 225806 505000) 0 nil])
([nil nil ((3807 . 3812)) nil (26714 17520 225805 505000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3812) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (#(")" 0 1 (fontified t)) . -3813) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) 3814) nil (26714 17520 225801 750000) 0 nil])
([nil nil ((3812 . 3814)) nil (26714 17520 225763 654000) 0 nil])
([nil nil ((3814 . 3823) (t 26714 17520 237108 363000)) nil (26714 17550 659286 529000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3819) (undo-tree-id8151 . -4) (undo-tree-id8152 . -4) (undo-tree-id8153 . -4) (undo-tree-id8154 . -4) (undo-tree-id8155 . -4) (undo-tree-id8156 . -4) (undo-tree-id8157 . -4) (undo-tree-id8158 . -4) (undo-tree-id8159 . -4) (undo-tree-id8160 . -4) (undo-tree-id8161 . -4) (undo-tree-id8162 . -4) (undo-tree-id8163 . -4) (undo-tree-id8164 . -4) (undo-tree-id8165 . -4) (undo-tree-id8166 . -4) (undo-tree-id8167 . -4) (undo-tree-id8168 . -4) (undo-tree-id8169 . -4) (undo-tree-id8170 . -4) 3823) nil (26714 17550 659285 679000) 0 nil])
([nil nil ((3819 . 3825)) nil (26714 17551 63329 498000) 0 nil])
([nil nil ((3426 . 3427)) nil (26714 17630 719343 271000) 0 nil] [nil nil ((#("Z = \"\"" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t) 4 6 (face font-lock-string-face fontified t)) . -3819) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -2) (undo-tree-id8122 . -2) (undo-tree-id8123 . -2) (undo-tree-id8124 . -2) (undo-tree-id8125 . -2) (undo-tree-id8126 . -2) (undo-tree-id8127 . -3) (undo-tree-id8128 . -3) (undo-tree-id8129 . -3) (undo-tree-id8130 . -3) (undo-tree-id8131 . -3) (undo-tree-id8132 . -4) (undo-tree-id8133 . -4) (undo-tree-id8134 . -4) (undo-tree-id8135 . -4) (undo-tree-id8136 . -4) (undo-tree-id8137 . -4) (undo-tree-id8138 . -4) (undo-tree-id8139 . -5) (undo-tree-id8140 . -5) (undo-tree-id8141 . -5) (undo-tree-id8142 . -5) (undo-tree-id8143 . -5) (undo-tree-id8144 . -4) (undo-tree-id8145 . -6) (undo-tree-id8146 . -6) (undo-tree-id8147 . -6) (undo-tree-id8148 . -6) (undo-tree-id8149 . -6) (undo-tree-id8150 . -6) 3825) ((3819 . 3825)) (26714 17550 659371 385000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 3427) (#("1" 0 1 (fontified t)) . 3427) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 3427)) nil (26714 17630 719342 492000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3815) (undo-tree-id8041 . -4) (undo-tree-id8042 . -4) (undo-tree-id8043 . -4) (undo-tree-id8044 . -4) (undo-tree-id8045 . -4) (undo-tree-id8046 . -4) (undo-tree-id8047 . -4) (undo-tree-id8048 . -4) (undo-tree-id8049 . -4) (undo-tree-id8050 . -4) (undo-tree-id8051 . -4) (undo-tree-id8052 . -4) (undo-tree-id8053 . -4) (undo-tree-id8054 . -4) (undo-tree-id8055 . -4) (undo-tree-id8056 . -4) (undo-tree-id8057 . -4) (undo-tree-id8058 . -4) (undo-tree-id8059 . -4) (undo-tree-id8060 . -4) (undo-tree-id8061 . -4) (undo-tree-id8062 . -4) (undo-tree-id8063 . -4) (undo-tree-id8064 . -4) (undo-tree-id8065 . -4) (undo-tree-id8066 . -4) (undo-tree-id8067 . -4) (undo-tree-id8068 . -4) (undo-tree-id8069 . -4) (undo-tree-id8070 . -4) (undo-tree-id8071 . -4) (undo-tree-id8072 . -4) (undo-tree-id8073 . -4) (undo-tree-id8074 . -4) (undo-tree-id8075 . -4) (undo-tree-id8076 . -4) (undo-tree-id8077 . -4) (undo-tree-id8078 . -4) (undo-tree-id8079 . -4) (undo-tree-id8080 . -4) (undo-tree-id8081 . -4) (undo-tree-id8082 . -4) (undo-tree-id8083 . -4) (undo-tree-id8084 . -4) (undo-tree-id8085 . -4) (undo-tree-id8086 . -4) (undo-tree-id8087 . -4) (undo-tree-id8088 . -4) (undo-tree-id8089 . -4) (undo-tree-id8090 . -4) (undo-tree-id8091 . -4) (undo-tree-id8092 . -4) (undo-tree-id8093 . -4) (undo-tree-id8094 . -4) (undo-tree-id8095 . -4) (undo-tree-id8096 . -4) (undo-tree-id8097 . -4) (undo-tree-id8098 . -4) (undo-tree-id8099 . -4) (undo-tree-id8100 . -4) (undo-tree-id8101 . -4) (undo-tree-id8102 . -4) (undo-tree-id8103 . -4) (undo-tree-id8104 . -4) (undo-tree-id8105 . -4) (undo-tree-id8106 . -4) (undo-tree-id8107 . -4) (undo-tree-id8108 . -4) (undo-tree-id8109 . -4) (undo-tree-id8110 . -4) (undo-tree-id8111 . -4) (undo-tree-id8112 . -4) (undo-tree-id8113 . -4) (undo-tree-id8114 . -4) (undo-tree-id8115 . -4) 3819) ((3815 . 3819)) (26714 17550 659240 357000) 0 nil])
([nil nil ((3427 . 3429)) nil (26714 17630 719341 798000) 0 nil])
nil
([nil nil ((#("]" 0 1 (fontified t)) . -3428) (undo-tree-id8176 . -1) 3429) nil (26714 17630 719341 61000) 0 nil])
([nil nil ((3428 . 3430)) nil (26714 17630 719339 660000) 0 nil])
([nil nil ((3427 . 3439)) nil (26714 17630 719338 688000) 0 nil])
([nil nil ((#("1\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . -3459) (undo-tree-id8174 . -2) (undo-tree-id8175 . -2) 3461) nil (26714 17630 719337 716000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3458) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) 3459) nil (26714 17630 719335 358000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3445) (undo-tree-id8171 . -1) 3446) nil (26714 17630 719332 990000) 0 nil])
([nil nil ((3445 . 3446)) nil (26714 17630 719325 416000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 3446) (#("0" 0 1 (fontified t)) . 3446)) nil (26714 17630 719323 978000) 0 nil])
([nil nil ((3446 . 3448)) nil (26714 17630 719323 42000) 0 nil])
([nil nil ((3458 . 3462)) nil (26714 17630 719318 867000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -3462) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) 3463 (t 26714 17630 730752 881000)) nil (26714 17632 647994 235000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3836) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -3837) (undo-tree-id8201 . -1) 3838 (t 26714 17632 662889 659000)) nil (26714 17642 12787 117000) 0 nil])
([nil nil ((3836 . 3838)) nil (26714 17642 12774 691000) 0 nil])
([nil nil ((3838 . 3843)) nil (26714 17642 12770 885000) 0 nil])
([nil nil ((125 . 126) (t 26714 17642 22545 800000)) nil (26714 17715 266050 386000) 0 nil])
([nil nil ((126 . 141)) nil (26714 17715 266049 171000) 0 nil])
([nil nil ((#("Everyth" 0 7 (face font-lock-comment-face fontified t)) . -134) (undo-tree-id8821 . -7) 141) nil (26714 17715 266047 943000) 0 nil])
([nil nil ((134 . 138)) nil (26714 17715 266044 973000) 0 nil])
([nil nil ((138 . 159)) nil (26714 17715 266044 44000) 0 nil])
([nil nil ((159 . 163)) nil (26714 17715 266043 89000) 0 nil])
([nil nil ((#("implement" 0 9 (face font-lock-comment-face fontified t)) . -154) (undo-tree-id8820 . -9) 163) nil (26714 17715 266041 956000) 0 nil])
([nil nil ((154 . 175)) nil (26714 17715 266039 249000) 0 nil])
([nil nil ((175 . 178)) nil (26714 17715 266038 327000) 0 nil])
([nil nil ((#("3 " 0 2 (face font-lock-comment-face fontified t)) . -176) (undo-tree-id8819 . -2) 178) nil (26714 17715 266037 102000) 0 nil])
([nil nil ((#("SHA-" 0 4 (face font-lock-comment-face fontified t)) . -172) (undo-tree-id8818 . -4) 176) nil (26714 17715 266034 201000) 0 nil])
([nil nil ((172 . 182)) nil (26714 17715 266031 331000) 0 nil])
([nil nil ((182 . 188)) nil (26714 17715 266030 345000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -187) (undo-tree-id8817 . -1) 188) nil (26714 17715 266029 100000) 0 nil])
([nil nil ((187 . 192)) nil (26714 17715 266026 330000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -191) (undo-tree-id8816 . -1) 192) nil (26714 17715 266024 961000) 0 nil])
([nil nil ((191 . 199)) nil (26714 17715 266020 409000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -198) (undo-tree-id8815 . -1) 199) nil (26714 17715 266019 201000) 0 nil])
([nil nil ((207 . 209) (193 . 195) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 193) (192 . 193) (198 . 205)) nil (26714 17715 266015 880000) 0 nil])
([nil nil ((209 . 213)) nil (26714 17715 266013 978000) 0 nil])
([nil nil ((#("using " 0 6 (face font-lock-comment-face fontified t)) . -207) (undo-tree-id8814 . -6) 213) nil (26714 17715 266012 758000) 0 nil])
([nil nil ((#("implemented " 0 12 (face font-lock-comment-face fontified t)) . -195) (undo-tree-id8813 . -12) 207) nil (26714 17715 266009 574000) 0 nil])
([nil nil ((#("algorithm,
# " 0 11 (face font-lock-comment-face fontified t) 11 13 (face font-lock-comment-delimiter-face fontified t)) . -182) (undo-tree-id8812 . -13) 195) nil (26714 17715 266006 267000) 0 nil])
([nil nil ((182 . 197)) nil (26714 17715 266003 448000) 0 nil])
([nil nil ((197 . 206)) nil (26714 17715 266002 450000) 0 nil])
([nil nil ((#("functions" 0 9 (face font-lock-comment-face fontified t)) . -197) (undo-tree-id8811 . -9) 206) nil (26714 17715 266001 253000) 0 nil])
([nil nil ((#("The " 0 4 (face font-lock-comment-face fontified t)) . -193) (undo-tree-id8810 . -4) 197) nil (26714 17715 265998 84000) 0 nil])
([nil nil ((203 . 216) (197 . 199) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 197) (196 . 197) (193 . 201)) nil (26714 17715 265994 953000) 0 nil])
([nil nil ((216 . 233)) nil (26714 17715 265993 64000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -232) (undo-tree-id8809 . -1) 233) nil (26714 17715 265991 750000) 0 nil])
([nil nil ((232 . 236)) nil (26714 17715 265988 461000) 0 nil])
([nil nil ((236 . 243)) nil (26714 17715 265987 391000) 0 nil])
([nil nil ((#("funcito" 0 7 (face font-lock-comment-face fontified t)) . -236) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -2) (undo-tree-id8779 . -2) (undo-tree-id8780 . -2) (undo-tree-id8781 . -2) (undo-tree-id8782 . -2) (undo-tree-id8783 . -3) (undo-tree-id8784 . -3) (undo-tree-id8785 . -3) (undo-tree-id8786 . -3) (undo-tree-id8787 . -3) (undo-tree-id8788 . -4) (undo-tree-id8789 . -4) (undo-tree-id8790 . -4) (undo-tree-id8791 . -4) (undo-tree-id8792 . -4) (undo-tree-id8793 . -5) (undo-tree-id8794 . -5) (undo-tree-id8795 . -5) (undo-tree-id8796 . -5) (undo-tree-id8797 . -5) (undo-tree-id8798 . -6) (undo-tree-id8799 . -6) (undo-tree-id8800 . -6) (undo-tree-id8801 . -6) (undo-tree-id8802 . -6) (undo-tree-id8803 . -7) (undo-tree-id8804 . -7) (undo-tree-id8805 . -7) (undo-tree-id8806 . -7) (undo-tree-id8807 . -7) (undo-tree-id8808 . -7) 243) nil (26714 17715 265983 614000) 0 nil])
([nil nil ((236 . 239)) nil (26714 17715 265930 156000) 0 nil])
([nil nil ((#("fun" 0 3 (face font-lock-comment-face fontified t)) . -236) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -2) (undo-tree-id8763 . -2) (undo-tree-id8764 . -2) (undo-tree-id8765 . -2) (undo-tree-id8766 . -2) (undo-tree-id8767 . -3) (undo-tree-id8768 . -3) (undo-tree-id8769 . -3) (undo-tree-id8770 . -3) (undo-tree-id8771 . -3) (undo-tree-id8772 . -3) 239) nil (26714 17715 265927 702000) 0 nil])
([nil nil ((236 . 243)) nil (26714 17715 265903 408000) 0 nil])
([nil nil ((#("functio" 0 7 (face font-lock-comment-face fontified t)) . -236) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -2) (undo-tree-id8727 . -2) (undo-tree-id8728 . -2) (undo-tree-id8729 . -2) (undo-tree-id8730 . -2) (undo-tree-id8731 . -3) (undo-tree-id8732 . -3) (undo-tree-id8733 . -3) (undo-tree-id8734 . -3) (undo-tree-id8735 . -3) (undo-tree-id8736 . -4) (undo-tree-id8737 . -4) (undo-tree-id8738 . -4) (undo-tree-id8739 . -4) (undo-tree-id8740 . -4) (undo-tree-id8741 . -5) (undo-tree-id8742 . -5) (undo-tree-id8743 . -5) (undo-tree-id8744 . -5) (undo-tree-id8745 . -5) (undo-tree-id8746 . -6) (undo-tree-id8747 . -6) (undo-tree-id8748 . -6) (undo-tree-id8749 . -6) (undo-tree-id8750 . -6) (undo-tree-id8751 . -7) (undo-tree-id8752 . -7) (undo-tree-id8753 . -7) (undo-tree-id8754 . -7) (undo-tree-id8755 . -7) (undo-tree-id8756 . -7) 243) nil (26714 17715 265899 402000) 0 nil])
([nil nil ((#("keccak " 0 7 (face font-lock-comment-face fontified t)) . -229) (undo-tree-id8594 . -6) (undo-tree-id8595 . -6) (undo-tree-id8596 . -6) (undo-tree-id8597 . -6) (undo-tree-id8598 . -6) (undo-tree-id8599 . -7) (undo-tree-id8600 . -7) (undo-tree-id8601 . -7) (undo-tree-id8602 . -7) (undo-tree-id8603 . -7) (undo-tree-id8604 . -7) (undo-tree-id8605 . -7) (undo-tree-id8606 . -7) (undo-tree-id8607 . -7) (undo-tree-id8608 . -7) (undo-tree-id8609 . -7) (undo-tree-id8610 . -7) (undo-tree-id8611 . -7) (undo-tree-id8612 . -7) (undo-tree-id8613 . -7) (undo-tree-id8614 . -7) (undo-tree-id8615 . -7) (undo-tree-id8616 . -7) (undo-tree-id8617 . -7) (undo-tree-id8618 . -7) (undo-tree-id8619 . -7) (undo-tree-id8620 . -7) (undo-tree-id8621 . -7) (undo-tree-id8622 . -7) (undo-tree-id8623 . -7) (undo-tree-id8624 . -7) (undo-tree-id8625 . -7) (undo-tree-id8626 . -7) (undo-tree-id8627 . -7) (undo-tree-id8628 . -7) (undo-tree-id8629 . -7) (undo-tree-id8630 . -7) (undo-tree-id8631 . -7) (undo-tree-id8632 . -7) (undo-tree-id8633 . -7) (undo-tree-id8634 . -7) (undo-tree-id8635 . -7) (undo-tree-id8636 . -7) (undo-tree-id8637 . -7) (undo-tree-id8638 . -7) (undo-tree-id8639 . -7) (undo-tree-id8640 . -7) (undo-tree-id8641 . -7) (undo-tree-id8642 . -7) (undo-tree-id8643 . -7) (undo-tree-id8644 . -7) (undo-tree-id8645 . -7) (undo-tree-id8646 . -7) (undo-tree-id8647 . -7) (undo-tree-id8648 . -7) (undo-tree-id8649 . -7) (undo-tree-id8650 . -7) (undo-tree-id8651 . -7) (undo-tree-id8652 . -7) (undo-tree-id8653 . -7) (undo-tree-id8654 . -7) (undo-tree-id8655 . -7) (undo-tree-id8656 . -7) (undo-tree-id8657 . -7) (undo-tree-id8658 . -7) (undo-tree-id8659 . -7) (undo-tree-id8660 . -7) (undo-tree-id8661 . -7) (undo-tree-id8662 . -7) (undo-tree-id8663 . -7) (undo-tree-id8664 . -7) (undo-tree-id8665 . -7) (undo-tree-id8666 . -7) (undo-tree-id8667 . -7) (undo-tree-id8668 . -7) (undo-tree-id8669 . -7) (undo-tree-id8670 . -7) (undo-tree-id8671 . -7) (undo-tree-id8672 . -7) (undo-tree-id8673 . -7) (undo-tree-id8674 . -7) (undo-tree-id8675 . -7) (undo-tree-id8676 . -7) (undo-tree-id8677 . -7) (undo-tree-id8678 . -7) (undo-tree-id8679 . -7) (undo-tree-id8680 . -7) (undo-tree-id8681 . -7) (undo-tree-id8682 . -7) (undo-tree-id8683 . -7) (undo-tree-id8684 . -7) (undo-tree-id8685 . -7) (undo-tree-id8686 . -7) (undo-tree-id8687 . -7) (undo-tree-id8688 . -7) (undo-tree-id8689 . -7) (undo-tree-id8690 . -7) (undo-tree-id8691 . -7) (undo-tree-id8692 . -7) (undo-tree-id8693 . -7) (undo-tree-id8694 . -7) (undo-tree-id8695 . -7) (undo-tree-id8696 . -7) (undo-tree-id8697 . -7) (undo-tree-id8698 . -7) (undo-tree-id8699 . -7) (undo-tree-id8700 . -7) (undo-tree-id8701 . -7) (undo-tree-id8702 . -7) (undo-tree-id8703 . -7) (undo-tree-id8704 . -7) (undo-tree-id8705 . -7) (undo-tree-id8706 . -7) (undo-tree-id8707 . -7) (undo-tree-id8708 . -7) (undo-tree-id8709 . -7) (undo-tree-id8710 . -7) (undo-tree-id8711 . -7) (undo-tree-id8712 . -7) (undo-tree-id8713 . -7) (undo-tree-id8714 . -7) (undo-tree-id8715 . -7) (undo-tree-id8716 . -7) (undo-tree-id8717 . -7) (undo-tree-id8718 . -7) (undo-tree-id8719 . -7) (undo-tree-id8720 . -7) 236) nil (26714 17715 265834 766000) 0 nil])
([nil nil ((#("the " 0 4 (face font-lock-comment-face fontified t)) . -225) (undo-tree-id8462 . -4) (undo-tree-id8463 . -4) (undo-tree-id8464 . -4) (undo-tree-id8465 . -4) (undo-tree-id8466 . -4) (undo-tree-id8467 . -4) (undo-tree-id8468 . -4) (undo-tree-id8469 . -4) (undo-tree-id8470 . -4) (undo-tree-id8471 . -4) (undo-tree-id8472 . -4) (undo-tree-id8473 . -4) (undo-tree-id8474 . -4) (undo-tree-id8475 . -4) (undo-tree-id8476 . -4) (undo-tree-id8477 . -4) (undo-tree-id8478 . -4) (undo-tree-id8479 . -4) (undo-tree-id8480 . -4) (undo-tree-id8481 . -4) (undo-tree-id8482 . -4) (undo-tree-id8483 . -4) (undo-tree-id8484 . -4) (undo-tree-id8485 . -4) (undo-tree-id8486 . -4) (undo-tree-id8487 . -4) (undo-tree-id8488 . -4) (undo-tree-id8489 . -4) (undo-tree-id8490 . -4) (undo-tree-id8491 . -4) (undo-tree-id8492 . -4) (undo-tree-id8493 . -4) (undo-tree-id8494 . -4) (undo-tree-id8495 . -4) (undo-tree-id8496 . -4) (undo-tree-id8497 . -4) (undo-tree-id8498 . -4) (undo-tree-id8499 . -4) (undo-tree-id8500 . -4) (undo-tree-id8501 . -4) (undo-tree-id8502 . -4) (undo-tree-id8503 . -4) (undo-tree-id8504 . -4) (undo-tree-id8505 . -4) (undo-tree-id8506 . -4) (undo-tree-id8507 . -4) (undo-tree-id8508 . -4) (undo-tree-id8509 . -4) (undo-tree-id8510 . -4) (undo-tree-id8511 . -4) (undo-tree-id8512 . -4) (undo-tree-id8513 . -4) (undo-tree-id8514 . -4) (undo-tree-id8515 . -4) (undo-tree-id8516 . -4) (undo-tree-id8517 . -4) (undo-tree-id8518 . -4) (undo-tree-id8519 . -4) (undo-tree-id8520 . -4) (undo-tree-id8521 . -4) (undo-tree-id8522 . -4) (undo-tree-id8523 . -4) (undo-tree-id8524 . -4) (undo-tree-id8525 . -4) (undo-tree-id8526 . -4) (undo-tree-id8527 . -4) (undo-tree-id8528 . -4) (undo-tree-id8529 . -4) (undo-tree-id8530 . -4) (undo-tree-id8531 . -4) (undo-tree-id8532 . -4) (undo-tree-id8533 . -4) (undo-tree-id8534 . -4) (undo-tree-id8535 . -4) (undo-tree-id8536 . -4) (undo-tree-id8537 . -4) (undo-tree-id8538 . -4) (undo-tree-id8539 . -4) (undo-tree-id8540 . -4) (undo-tree-id8541 . -4) (undo-tree-id8542 . -4) (undo-tree-id8543 . -4) (undo-tree-id8544 . -4) (undo-tree-id8545 . -4) (undo-tree-id8546 . -4) (undo-tree-id8547 . -4) (undo-tree-id8548 . -4) (undo-tree-id8549 . -4) (undo-tree-id8550 . -4) (undo-tree-id8551 . -4) (undo-tree-id8552 . -4) (undo-tree-id8553 . -4) (undo-tree-id8554 . -4) (undo-tree-id8555 . -4) (undo-tree-id8556 . -4) (undo-tree-id8557 . -4) (undo-tree-id8558 . -4) (undo-tree-id8559 . -4) (undo-tree-id8560 . -4) (undo-tree-id8561 . -4) (undo-tree-id8562 . -4) (undo-tree-id8563 . -4) (undo-tree-id8564 . -4) (undo-tree-id8565 . -4) (undo-tree-id8566 . -4) (undo-tree-id8567 . -4) (undo-tree-id8568 . -4) (undo-tree-id8569 . -4) (undo-tree-id8570 . -4) (undo-tree-id8571 . -4) (undo-tree-id8572 . -4) (undo-tree-id8573 . -4) (undo-tree-id8574 . -4) (undo-tree-id8575 . -4) (undo-tree-id8576 . -4) (undo-tree-id8577 . -4) (undo-tree-id8578 . -4) (undo-tree-id8579 . -4) (undo-tree-id8580 . -4) (undo-tree-id8581 . -4) (undo-tree-id8582 . -4) (undo-tree-id8583 . -4) (undo-tree-id8584 . -4) (undo-tree-id8585 . -4) (undo-tree-id8586 . -4) (undo-tree-id8587 . -4) (undo-tree-id8588 . -4) (undo-tree-id8589 . -4) (undo-tree-id8590 . -4) (undo-tree-id8591 . -4) (undo-tree-id8592 . -4) (undo-tree-id8593 . -4) 229) nil (26714 17715 265627 597000) 0 nil])
([nil nil ((#("of " 0 3 (face font-lock-comment-face fontified t)) . -222) (undo-tree-id8325 . -3) (undo-tree-id8326 . -3) (undo-tree-id8327 . -3) (undo-tree-id8328 . -3) (undo-tree-id8329 . -3) (undo-tree-id8330 . -3) (undo-tree-id8331 . -3) (undo-tree-id8332 . -3) (undo-tree-id8333 . -3) (undo-tree-id8334 . -3) (undo-tree-id8335 . -3) (undo-tree-id8336 . -3) (undo-tree-id8337 . -3) (undo-tree-id8338 . -3) (undo-tree-id8339 . -3) (undo-tree-id8340 . -3) (undo-tree-id8341 . -3) (undo-tree-id8342 . -3) (undo-tree-id8343 . -3) (undo-tree-id8344 . -3) (undo-tree-id8345 . -3) (undo-tree-id8346 . -3) (undo-tree-id8347 . -3) (undo-tree-id8348 . -3) (undo-tree-id8349 . -3) (undo-tree-id8350 . -3) (undo-tree-id8351 . -3) (undo-tree-id8352 . -3) (undo-tree-id8353 . -3) (undo-tree-id8354 . -3) (undo-tree-id8355 . -3) (undo-tree-id8356 . -3) (undo-tree-id8357 . -3) (undo-tree-id8358 . -3) (undo-tree-id8359 . -3) (undo-tree-id8360 . -3) (undo-tree-id8361 . -3) (undo-tree-id8362 . -3) (undo-tree-id8363 . -3) (undo-tree-id8364 . -3) (undo-tree-id8365 . -3) (undo-tree-id8366 . -3) (undo-tree-id8367 . -3) (undo-tree-id8368 . -3) (undo-tree-id8369 . -3) (undo-tree-id8370 . -3) (undo-tree-id8371 . -3) (undo-tree-id8372 . -3) (undo-tree-id8373 . -3) (undo-tree-id8374 . -3) (undo-tree-id8375 . -3) (undo-tree-id8376 . -3) (undo-tree-id8377 . -3) (undo-tree-id8378 . -3) (undo-tree-id8379 . -3) (undo-tree-id8380 . -3) (undo-tree-id8381 . -3) (undo-tree-id8382 . -3) (undo-tree-id8383 . -3) (undo-tree-id8384 . -3) (undo-tree-id8385 . -3) (undo-tree-id8386 . -3) (undo-tree-id8387 . -3) (undo-tree-id8388 . -3) (undo-tree-id8389 . -3) (undo-tree-id8390 . -3) (undo-tree-id8391 . -3) (undo-tree-id8392 . -3) (undo-tree-id8393 . -3) (undo-tree-id8394 . -3) (undo-tree-id8395 . -3) (undo-tree-id8396 . -3) (undo-tree-id8397 . -3) (undo-tree-id8398 . -3) (undo-tree-id8399 . -3) (undo-tree-id8400 . -3) (undo-tree-id8401 . -3) (undo-tree-id8402 . -3) (undo-tree-id8403 . -3) (undo-tree-id8404 . -3) (undo-tree-id8405 . -3) (undo-tree-id8406 . -3) (undo-tree-id8407 . -3) (undo-tree-id8408 . -3) (undo-tree-id8409 . -3) (undo-tree-id8410 . -3) (undo-tree-id8411 . -3) (undo-tree-id8412 . -3) (undo-tree-id8413 . -3) (undo-tree-id8414 . -3) (undo-tree-id8415 . -3) (undo-tree-id8416 . -3) (undo-tree-id8417 . -3) (undo-tree-id8418 . -3) (undo-tree-id8419 . -3) (undo-tree-id8420 . -3) (undo-tree-id8421 . -3) (undo-tree-id8422 . -3) (undo-tree-id8423 . -3) (undo-tree-id8424 . -3) (undo-tree-id8425 . -3) (undo-tree-id8426 . -3) (undo-tree-id8427 . -3) (undo-tree-id8428 . -3) (undo-tree-id8429 . -3) (undo-tree-id8430 . -3) (undo-tree-id8431 . -3) (undo-tree-id8432 . -3) (undo-tree-id8433 . -3) (undo-tree-id8434 . -3) (undo-tree-id8435 . -3) (undo-tree-id8436 . -3) (undo-tree-id8437 . -3) (undo-tree-id8438 . -3) (undo-tree-id8439 . -3) (undo-tree-id8440 . -3) (undo-tree-id8441 . -3) (undo-tree-id8442 . -3) (undo-tree-id8443 . -3) (undo-tree-id8444 . -3) (undo-tree-id8445 . -3) (undo-tree-id8446 . -3) (undo-tree-id8447 . -3) (undo-tree-id8448 . -3) (undo-tree-id8449 . -3) (undo-tree-id8450 . -3) (undo-tree-id8451 . -3) (undo-tree-id8452 . -3) (undo-tree-id8453 . -3) (undo-tree-id8454 . -3) (undo-tree-id8455 . -3) (undo-tree-id8456 . -3) (undo-tree-id8457 . -3) (undo-tree-id8458 . -3) (undo-tree-id8459 . -3) (undo-tree-id8460 . -3) (undo-tree-id8461 . -3) 225) nil (26714 17715 265421 595000) 0 nil])
([nil nil ((222 . 232)) nil (26714 17715 265205 962000) 0 nil])
([nil nil ((#("arrays" 0 6 (face font-lock-comment-face fontified t)) . -226) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -2) (undo-tree-id8300 . -2) (undo-tree-id8301 . -2) (undo-tree-id8302 . -2) (undo-tree-id8303 . -2) (undo-tree-id8304 . -3) (undo-tree-id8305 . -3) (undo-tree-id8306 . -3) (undo-tree-id8307 . -3) (undo-tree-id8308 . -3) (undo-tree-id8309 . -4) (undo-tree-id8310 . -4) (undo-tree-id8311 . -4) (undo-tree-id8312 . -4) (undo-tree-id8313 . -4) (undo-tree-id8314 . -5) (undo-tree-id8315 . -5) (undo-tree-id8316 . -5) (undo-tree-id8317 . -5) (undo-tree-id8318 . -5) (undo-tree-id8319 . -6) (undo-tree-id8320 . -6) (undo-tree-id8321 . -6) (undo-tree-id8322 . -6) (undo-tree-id8323 . -6) (undo-tree-id8324 . -6) 232) nil (26714 17715 265202 300000) 0 nil])
([nil nil ((226 . 232)) nil (26714 17715 265157 242000) 0 nil])
([nil nil ((232 . 248)) nil (26714 17715 265156 153000) 0 nil])
([nil nil ((#("int" 0 3 (face font-lock-comment-face fontified t)) . -245) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -2) (undo-tree-id8284 . -2) (undo-tree-id8285 . -2) (undo-tree-id8286 . -2) (undo-tree-id8287 . -2) (undo-tree-id8288 . -3) (undo-tree-id8289 . -3) (undo-tree-id8290 . -3) (undo-tree-id8291 . -3) (undo-tree-id8292 . -3) (undo-tree-id8293 . -3) 248) nil (26714 17715 265153 808000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -243) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -244) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) 245) nil (26714 17715 265136 324000) 0 nil])
([nil nil ((243 . 254)) nil (26714 17715 265088 948000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -253) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) 254) nil (26714 17715 265085 275000) 0 nil])
([nil nil ((#("w)" 0 2 (face font-lock-comment-face fontified t)) . -299) (undo-tree-id8888 . -2) (undo-tree-id8889 . -2) (undo-tree-id8890 . -2) (undo-tree-id8891 . -2) (undo-tree-id8892 . -2) (undo-tree-id8893 . -2) (undo-tree-id8894 . -2) (undo-tree-id8895 . -2) (undo-tree-id8896 . -2) (undo-tree-id8897 . -2) (undo-tree-id8898 . -2) 301 (t 26714 17715 276330 948000)) nil (26714 17736 38966 838000) 0 nil])
([nil nil ((#("2(" 0 2 (face font-lock-comment-face fontified t)) . -297) (undo-tree-id8871 . -2) (undo-tree-id8872 . -2) (undo-tree-id8873 . -2) (undo-tree-id8874 . -2) (undo-tree-id8875 . -2) (undo-tree-id8876 . -2) (undo-tree-id8877 . -2) (undo-tree-id8878 . -2) (undo-tree-id8879 . -2) (undo-tree-id8880 . -2) (undo-tree-id8881 . -2) (undo-tree-id8882 . -2) (undo-tree-id8883 . -2) (undo-tree-id8884 . -2) (undo-tree-id8885 . -2) (undo-tree-id8886 . -2) (undo-tree-id8887 . -2) 299) nil (26714 17736 38958 397000) 0 nil])
([nil nil ((#("log_" 0 4 (face font-lock-comment-face fontified t)) . -293) (undo-tree-id8849 . -4) (undo-tree-id8850 . -4) (undo-tree-id8851 . -4) (undo-tree-id8852 . -4) (undo-tree-id8853 . -4) (undo-tree-id8854 . -4) (undo-tree-id8855 . -4) (undo-tree-id8856 . -4) (undo-tree-id8857 . -4) (undo-tree-id8858 . -4) (undo-tree-id8859 . -4) (undo-tree-id8860 . -4) (undo-tree-id8861 . -4) (undo-tree-id8862 . -4) (undo-tree-id8863 . -4) (undo-tree-id8864 . -4) (undo-tree-id8865 . -4) (undo-tree-id8866 . -4) (undo-tree-id8867 . -4) (undo-tree-id8868 . -4) (undo-tree-id8869 . -4) (undo-tree-id8870 . -4) 297) nil (26714 17736 38938 283000) 0 nil])
([nil nil ((#("l = " 0 4 (face font-lock-comment-face fontified t)) . -289) (undo-tree-id8822 . -4) (undo-tree-id8823 . -4) (undo-tree-id8824 . -4) (undo-tree-id8825 . -4) (undo-tree-id8826 . -4) (undo-tree-id8827 . -4) (undo-tree-id8828 . -4) (undo-tree-id8829 . -4) (undo-tree-id8830 . -4) (undo-tree-id8831 . -4) (undo-tree-id8832 . -4) (undo-tree-id8833 . -4) (undo-tree-id8834 . -4) (undo-tree-id8835 . -4) (undo-tree-id8836 . -4) (undo-tree-id8837 . -4) (undo-tree-id8838 . -4) (undo-tree-id8839 . -4) (undo-tree-id8840 . -4) (undo-tree-id8841 . -4) (undo-tree-id8842 . -4) (undo-tree-id8843 . -4) (undo-tree-id8844 . -4) (undo-tree-id8845 . -4) (undo-tree-id8846 . -4) (undo-tree-id8847 . -4) (undo-tree-id8848 . -4) 293) nil (26714 17736 38918 443000) 0 nil])
([nil nil ((289 . 290)) nil (26714 17736 38885 15000) 0 nil])
([nil nil ((3955 . 3960) (t 26714 17736 51582 413000)) nil (26714 17984 201247 777000) 0 nil])
([nil nil ((3960 . 3964)) nil (26714 17984 201246 549000) 0 nil])
([nil nil ((3964 . 3968) (#(" " 0 1 (fontified nil)) . 3963) (undo-tree-id8924 . -1) (3964 . 3965)) nil (26714 17984 201245 838000) 0 nil])
([nil nil ((3968 . 3973)) nil (26714 17984 201244 616000) 0 nil])
([nil nil ((#("goto " 0 5 (fontified t)) . -3968) (undo-tree-id8923 . -5) 3973) nil (26714 17984 201244 35000) 0 nil])
([nil nil ((3963 . 3964)) nil (26714 17984 201242 987000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3964)) nil (26714 17984 201242 463000) 0 nil])
([nil nil ((#("Z = " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -3960) (undo-tree-id8922 . -4) 3964) nil (26714 17984 201241 116000) 0 nil])
([nil nil ((3960 . 3969)) nil (26714 17984 201239 872000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3966) (undo-tree-id8919 . -1) (#(" " 0 1 (fontified t)) . -3967) (undo-tree-id8920 . -1) (#(">" 0 1 (face font-lock-operator-face fontified t)) . -3968) (undo-tree-id8921 . -1) 3969) nil (26714 17984 201238 966000) 0 nil])
([nil nil ((3966 . 3969)) nil (26714 17984 201233 863000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3966) (undo-tree-id8916 . -1) (#(" " 0 1 (fontified t)) . -3967) (undo-tree-id8917 . -1) (#(">" 0 1 (face font-lock-operator-face fontified t)) . -3968) (undo-tree-id8918 . -1) 3969) nil (26714 17984 201232 895000) 0 nil])
([nil nil ((3966 . 3973)) nil (26714 17984 201229 415000) 0 nil])
([nil nil ((3973 . 3974)) nil (26714 17984 201228 959000) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-operator-face fontified t)) . -3973) (undo-tree-id8915 . -1) 3974) nil (26714 17984 201227 782000) 0 nil])
([nil nil ((3973 . 3974)) nil (26714 17984 201226 124000) 0 nil])
([nil nil ((3974 . 3977)) nil (26714 17984 201225 601000) 0 nil])
([nil nil ((3978 . 3986) (#("    " 0 4 (fontified nil)) . 3978) (3977 . 3978)) nil (26714 17984 201225 118000) 0 nil])
([nil nil ((3986 . 3991)) nil (26714 17984 201224 192000) 0 nil])
([nil nil ((3991 . 3997)) nil (26714 17984 201223 784000) 0 nil])
([nil nil ((3993 . 3995)) nil (26714 17984 201223 323000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3994) (undo-tree-id8914 . -1) 3995) nil (26714 17984 201222 771000) 0 nil])
([nil nil ((3998 . 4001)) nil (26714 17984 201221 422000) 0 nil])
([nil nil ((4001 . 4010)) nil (26714 17984 201221 30000) 0 nil])
([nil nil ((4010 . 4023)) nil (26714 17984 201220 755000) 0 nil])
([nil nil ((4023 . 4025)) nil (26714 17984 201220 382000) 0 nil])
([nil nil ((4025 . 4034)) nil (26714 17984 201219 719000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4030) (undo-tree-id8899 . -4) (undo-tree-id8900 . -4) (undo-tree-id8901 . -4) (undo-tree-id8902 . -4) (undo-tree-id8903 . -4) (undo-tree-id8904 . -4) (undo-tree-id8905 . -4) (undo-tree-id8906 . -4) (undo-tree-id8907 . -4) (undo-tree-id8908 . -4) (undo-tree-id8909 . -4) (undo-tree-id8910 . -4) (undo-tree-id8911 . -4) (undo-tree-id8912 . -4) (undo-tree-id8913 . -4) 4034) nil (26714 17984 201218 342000) 0 nil])
([nil nil ((4030 . 4041)) nil (26714 17984 201197 734000) 0 nil])
([nil nil ((4041 . 4042)) nil (26714 17984 201193 12000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4048) (undo-tree-id8925 . -4) (undo-tree-id8926 . -4) (undo-tree-id8927 . -4) (undo-tree-id8928 . -4) (undo-tree-id8929 . -4) (undo-tree-id8930 . -4) (undo-tree-id8931 . -4) (undo-tree-id8932 . -4) 4052 (t 26714 17984 212625 159000)) nil (26714 18032 235967 705000) 0 nil])
([nil nil ((324 . 325) (t 26714 18032 246451 635000)) nil (26714 18769 344831 711000) 0 nil])
([nil nil ((325 . 326)) nil (26714 18769 344831 374000) 0 nil])
([nil nil ((325 . 332)) nil (26714 18769 344831 56000) 0 nil])
([nil nil ((#("str" 0 3 (face font-lock-function-name-face fontified t)) . -329) (undo-tree-id9008 . -3) 332) nil (26714 18769 344830 697000) 0 nil])
([nil nil ((329 . 335)) nil (26714 18769 344829 882000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-function-name-face fontified t)) . -333) (undo-tree-id9006 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -334) (undo-tree-id9007 . -1) 335) nil (26714 18769 344829 335000) 0 nil])
([nil nil ((333 . 336)) nil (26714 18769 344828 70000) 0 nil])
([nil nil ((#("to_" 0 3 (face font-lock-function-name-face fontified t)) . -333) (undo-tree-id9005 . -3) 336) nil (26714 18769 344827 315000) 0 nil])
([nil nil ((#("str_" 0 4 (face font-lock-function-name-face fontified t)) . -329) (undo-tree-id9004 . -4) 333) nil (26714 18769 344825 182000) 0 nil])
([nil nil ((329 . 331)) nil (26714 18769 344824 344000) 0 nil])
([nil nil ((331 . 336)) nil (26714 18769 344824 65000) 0 nil])
([nil nil ((336 . 345)) nil (26714 18769 344823 763000) 0 nil])
([nil nil ((345 . 350)) nil (26714 18769 344823 447000) 0 nil])
([nil nil ((324 . 325)) nil (26714 18769 344823 58000) 0 nil])
([nil nil ((325 . 326)) nil (26714 18769 344822 669000) 0 nil])
([nil nil ((325 . 340)) nil (26714 18769 344822 432000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -339) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) 340) nil (26714 18769 344821 871000) 0 nil])
([nil nil ((339 . 348)) nil (26714 18769 344816 406000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -346) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -347) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) 348) nil (26714 18769 344815 598000) 0 nil])
([nil nil ((346 . 349)) nil (26714 18769 344804 5000) 0 nil])
([nil nil ((349 . 354)) nil (26714 18769 344803 759000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -346) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) 347) nil (26714 18769 344803 161000) 0 nil])
([nil nil ((346 . 347)) nil (26714 18769 344796 593000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -346) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) 347) nil (26714 18769 344795 797000) 0 nil])
([nil nil ((346 . 347)) nil (26714 18769 344786 209000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -346) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) 347) nil (26714 18769 344785 277000) 0 nil])
([nil nil ((346 . 347)) nil (26714 18769 344765 190000) 0 nil])
([nil nil ((381 . 387) (t 26714 18769 356486 352000)) nil (26714 18982 742536 335000) 0 nil])
([nil nil ((354 . 360)) nil (26714 18982 742535 922000) 0 nil])
([nil nil ((#("return" 0 6 (face font-lock-keyword-face fontified t)) . -354) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -2) (undo-tree-id9180 . -2) (undo-tree-id9181 . -2) (undo-tree-id9182 . -2) (undo-tree-id9183 . -2) (undo-tree-id9184 . -3) (undo-tree-id9185 . -3) (undo-tree-id9186 . -3) (undo-tree-id9187 . -3) (undo-tree-id9188 . -3) (undo-tree-id9189 . -4) (undo-tree-id9190 . -4) (undo-tree-id9191 . -4) (undo-tree-id9192 . -4) (undo-tree-id9193 . -4) (undo-tree-id9194 . -5) (undo-tree-id9195 . -5) (undo-tree-id9196 . -5) (undo-tree-id9197 . -5) (undo-tree-id9198 . -5) (undo-tree-id9199 . -6) (undo-tree-id9200 . -6) (undo-tree-id9201 . -6) (undo-tree-id9202 . -6) (undo-tree-id9203 . -6) (undo-tree-id9204 . -6) 360) nil (26714 18982 742535 120000) 0 nil])
([nil nil ((354 . 361)) nil (26714 18982 742521 239000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -360) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) 361) nil (26714 18982 742520 795000) 0 nil])
([nil nil ((360 . 361)) nil (26714 18982 742515 892000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -360) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) 361) nil (26714 18982 742515 479000) 0 nil])
([nil nil ((360 . 362)) nil (26714 18982 742512 179000) 0 nil])
([nil nil ((362 . 367)) nil (26714 18982 742511 871000) 0 nil])
([nil nil ((367 . 373)) nil (26714 18982 742511 563000) 0 nil])
([nil nil ((#("while " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -367) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -2) (undo-tree-id9135 . -2) (undo-tree-id9136 . -2) (undo-tree-id9137 . -2) (undo-tree-id9138 . -2) (undo-tree-id9139 . -3) (undo-tree-id9140 . -3) (undo-tree-id9141 . -3) (undo-tree-id9142 . -3) (undo-tree-id9143 . -3) (undo-tree-id9144 . -4) (undo-tree-id9145 . -4) (undo-tree-id9146 . -4) (undo-tree-id9147 . -4) (undo-tree-id9148 . -4) (undo-tree-id9149 . -5) (undo-tree-id9150 . -5) (undo-tree-id9151 . -5) (undo-tree-id9152 . -5) (undo-tree-id9153 . -5) (undo-tree-id9154 . -6) (undo-tree-id9155 . -6) (undo-tree-id9156 . -6) (undo-tree-id9157 . -6) (undo-tree-id9158 . -6) (undo-tree-id9159 . -6) (undo-tree-id9160 . -6) 373) nil (26714 18982 742510 802000) 0 nil])
([nil nil ((367 . 374)) nil (26714 18982 742494 47000) 0 nil])
([nil nil ((374 . 379)) nil (26714 18982 742493 760000) 0 nil])
([nil nil ((379 . 389)) nil (26714 18982 742493 542000) 0 nil])
([nil nil ((389 . 398)) nil (26714 18982 742493 321000) 0 nil])
([nil nil ((398 . 401)) nil (26714 18982 742493 89000) 0 nil])
([nil nil ((389 . 398)) nil (26714 18982 742492 860000) 0 nil])
([nil nil ((398 . 408)) nil (26714 18982 742492 631000) 0 nil])
([nil nil ((408 . 410)) nil (26714 18982 742492 354000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -407) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (#(" " 0 1 (fontified t)) . -408) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -409) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) 410) nil (26714 18982 742490 651000) 0 nil])
([nil nil ((407 . 415)) nil (26714 18982 742463 578000) 0 nil])
([nil nil ((427 . 431)) nil (26714 18982 742463 298000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -429) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (#(" " 0 1 (fontified t)) . -430) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) 431) nil (26714 18982 742462 134000) 0 nil])
([nil nil ((429 . 431)) nil (26714 18982 742443 578000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -430) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) 431) nil (26714 18982 742442 927000) 0 nil])
([nil nil ((430 . 433)) nil (26714 18982 742439 213000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -432) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) 433) nil (26714 18982 742438 668000) 0 nil])
([nil nil ((432 . 433)) nil (26714 18982 742433 131000) 0 nil])
([nil nil ((433 . 442)) nil (26714 18982 742432 808000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -438) (undo-tree-id9015 . -4) (undo-tree-id9016 . -4) (undo-tree-id9017 . -4) (undo-tree-id9018 . -4) (undo-tree-id9019 . -4) (undo-tree-id9020 . -4) (undo-tree-id9021 . -4) (undo-tree-id9022 . -4) (undo-tree-id9023 . -4) (undo-tree-id9024 . -4) 442) nil (26714 18982 742432 140000) 0 nil])
([nil nil ((438 . 448)) nil (26714 18982 742425 691000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -447) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) 448) nil (26714 18982 742424 719000) 0 nil])
([nil nil ((447 . 448)) nil (26714 18982 742409 188000) 0 nil])
([nil nil ((#("to_" 0 3 (face font-lock-function-name-face fontified t)) . -333) (undo-tree-id9212 . -3) 336 (t 26714 18982 753355 406000)) nil (26714 18998 552737 642000) 0 nil])
([nil nil ((#("int_" 0 4 (face font-lock-function-name-face fontified t)) . -329) (undo-tree-id9205 . -4) (undo-tree-id9206 . -4) (undo-tree-id9207 . -4) (undo-tree-id9208 . -4) (undo-tree-id9209 . -4) (undo-tree-id9210 . -4) (undo-tree-id9211 . -4) 333) nil (26714 18998 552733 392000) 0 nil])
([nil nil ((397 . 398) (t 26714 18998 565549 834000)) nil (26714 19582 369146 112000) 0 nil])
([nil nil ((409 . 411)) nil (26714 19582 369145 701000) 0 nil])
([nil nil ((402 . 403)) nil (26714 19582 369145 347000) 0 nil])
([nil nil ((#("&" 0 1 (face font-lock-operator-face fontified t)) . -402) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) 403) nil (26714 19582 369144 19000) 0 nil])
([nil nil ((402 . 406)) nil (26714 19582 369126 564000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -4111) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (#("]" 0 1 (fontified t)) . -4112) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) 4113 (t 26714 19582 379664 848000)) nil (26714 19703 444959 192000) 0 nil])
([nil nil ((4111 . 4114)) nil (26714 19703 444864 884000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -4111) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (#(" " 0 1 (fontified t)) . -4112) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -4113) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) 4114) nil (26714 19703 444863 307000) 0 nil])
([nil nil ((4111 . 4123)) nil (26714 19703 444834 71000) 0 nil])
([nil nil ((#("        S = keccak_f(S)" 0 8 (fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 23 (fontified t)) . 4170) (undo-tree-id9435 . -20) (undo-tree-id9436 . -20) (undo-tree-id9437 . -20) (undo-tree-id9438 . -20) (undo-tree-id9439 . -20) (undo-tree-id9440 . -20) (undo-tree-id9441 . -20) (undo-tree-id9442 . -20) (undo-tree-id9443 . -20) (undo-tree-id9444 . -20) (undo-tree-id9445 . -20) (undo-tree-id9446 . -20) (undo-tree-id9447 . -23) (undo-tree-id9448 . -23) (undo-tree-id9449 . -23) (undo-tree-id9450 . -23) (undo-tree-id9451 . -23) (undo-tree-id9452 . -23) (t 26714 19703 455803 449000)) nil (26714 19710 272979 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4168 . 4169) (nil fontified nil 4157 . 4169) (nil fontified nil 4156 . 4157) (nil fontified nil 4155 . 4156) (nil fontified nil 4154 . 4155) (nil fontified nil 4146 . 4154) (4146 . 4169)) nil (26714 19710 272962 153000) 0 nil])
([nil nil ((4169 . 4170)) nil (26714 19710 272960 866000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4194) (undo-tree-id9434 . -1)) nil (26714 19710 272957 704000) 0 nil])
([nil nil ((3175 . 3176) (t 26714 19710 285221 583000)) nil (26714 20076 808052 283000) 0 nil])
([nil nil ((3176 . 3197)) nil (26714 20076 808051 962000) 0 nil])
([nil nil ((3197 . 3218)) nil (26714 20076 808051 730000) 0 nil])
([nil nil ((3218 . 3221)) nil (26714 20076 808051 401000) 0 nil])
([nil nil ((#("iterated " 0 9 (face font-lock-comment-face fontified t)) . -3212) (undo-tree-id9508 . -9) 3221) nil (26714 20076 808050 972000) 0 nil])
([nil nil ((3927 . 3940)) nil (26714 20076 808050 274000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -3939) (undo-tree-id9507 . -1) 3940) nil (26714 20076 808049 675000) 0 nil])
([nil nil ((3939 . 3940)) nil (26714 20076 808048 906000) 0 nil])
([nil nil ((3940 . 3968)) nil (26714 20076 808048 663000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -3965) (undo-tree-id9506 . -3) 3968) nil (26714 20076 808047 830000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3961) (undo-tree-id9505 . -4) 3965) nil (26714 20076 808046 935000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3957) (undo-tree-id9504 . -4) 3961) nil (26714 20076 808045 965000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3953) (undo-tree-id9503 . -4) 3957) nil (26714 20076 808044 937000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3949) (undo-tree-id9502 . -4) 3953) nil (26714 20076 808044 1000) 0 nil])
([nil nil ((4003 . 4004)) nil (26714 20076 808043 201000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4003) (undo-tree-id9501 . -1) 4004) nil (26714 20076 808042 740000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -3939) (undo-tree-id9500 . -1) 3940) nil (26714 20076 808041 932000) 0 nil])
([nil nil ((3939 . 3940)) nil (26714 20076 808041 129000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3939) (undo-tree-id9499 . -1) 3940) nil (26714 20076 808040 762000) 0 nil])
([nil nil ((3939 . 3940)) nil (26714 20076 808039 634000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -3939) (undo-tree-id9498 . -1) 3940) nil (26714 20076 808039 277000) 0 nil])
([nil nil ((3939 . 3941)) nil (26714 20076 808038 395000) 0 nil])
([nil nil ((4004 . 4006)) nil (26714 20076 808038 134000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4004) (undo-tree-id9496 . -1) (#(")" 0 1 (fontified t)) . -4005) (undo-tree-id9497 . -1) 4006) nil (26714 20076 808037 452000) 0 nil])
([nil nil ((4004 . 4013)) nil (26714 20076 808036 164000) 0 nil])
([nil nil ((4013 . 4014)) nil (26714 20076 808035 831000) 0 nil])
([nil nil ((4005 . 4032) (#("        " 0 8 (fontified t)) . 4005) 4014) nil (26714 20076 808035 397000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -4029) 4033) nil (26714 20076 808034 885000) 0 nil])
([nil nil ((#("                        )" 0 24 (fontified t) 24 25 (fontified t)) . 4005) (undo-tree-id9486 . -25) (undo-tree-id9487 . -25) (undo-tree-id9488 . -25) (undo-tree-id9489 . -25) (undo-tree-id9490 . -25) (undo-tree-id9491 . -25) (undo-tree-id9492 . -25) (undo-tree-id9493 . -25) (undo-tree-id9494 . -25) (undo-tree-id9495 . -25)) nil (26714 20076 808034 194000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4004) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) 4005) nil (26714 20076 808027 249000) 0 nil])
([nil nil ((4004 . 4005)) nil (26714 20076 807994 702000) 0 nil])
([nil nil ((#("Pad" 0 3 (face font-lock-comment-face fontified t)) . -3531) (undo-tree-id9513 . -3) (undo-tree-id9514 . -3) 3534 (t 26714 20076 818958 463000)) nil (26714 20134 108066 624000) 0 nil])
([nil nil ((3531 . 3546)) nil (26714 20134 108064 970000) 0 nil])
([nil nil ((#("padding " 0 8 (face font-lock-comment-face fontified t)) . -3538) (undo-tree-id9512 . -8) 3546) nil (26714 20134 108064 493000) 0 nil])
([nil nil ((#("Return " 0 7 (face font-lock-comment-face fontified t)) . -3531) (undo-tree-id9511 . -7) 3538) nil (26714 20134 108063 365000) 0 nil])
([nil nil ((3531 . 3536)) nil (26714 20134 108062 241000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -3535) (undo-tree-id9510 . -1) 3536) nil (26714 20134 108061 786000) 0 nil])
([nil nil ((3535 . 3549)) nil (26714 20134 108060 724000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -3609) (undo-tree-id9509 . -1) 3610) nil (26714 20134 108059 840000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . 3609)) nil (26714 20135 775377 64000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 3675)) nil (26714 20144 395506 862000) 0 nil] [nil nil ((#("# padding itself.)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 18 (face font-lock-comment-face fontified t)) . 3675) (undo-tree-id9515 . -18) (undo-tree-id9516 . -18) (undo-tree-id9517 . -18) (undo-tree-id9518 . -18) (undo-tree-id9519 . -18) (undo-tree-id9520 . -18) (undo-tree-id9521 . -18) (undo-tree-id9522 . -18) (undo-tree-id9523 . -18) (undo-tree-id9524 . -18) (undo-tree-id9525 . -18) (undo-tree-id9526 . -18) (undo-tree-id9527 . -18) (undo-tree-id9528 . -18) (undo-tree-id9529 . -18) (undo-tree-id9530 . -18) (undo-tree-id9531 . -18) (undo-tree-id9532 . -18) (undo-tree-id9533 . -18) (undo-tree-id9534 . -18) (undo-tree-id9535 . -18)) ((3675 . 3693)) (26714 20135 775323 954000) 0 nil] [nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 3693)) ((3693 . 3694)) (26714 20134 108048 574000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -3674) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) 3675) nil (26714 20144 395506 264000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3654) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) 3655) nil (26714 20145 829090 125000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 3599) (3597 . 3599) (3597 . 3598) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 3597) (3596 . 3597) (3654 . 3655)) ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . 3654) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . 3596) (undo-tree-id9747 . -1) (3597 . 3598) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 3597) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified nil)) . 3597) (3599 . 3600)) (26714 20146 560779 571000) 0 nil])
([nil nil ((#("(Output is only the padding itself.)" 0 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 36 (face font-lock-comment-face fontified t)) . 3657) (undo-tree-id9797 . -19) (undo-tree-id9798 . -19) (undo-tree-id9799 . -19) (undo-tree-id9800 . -19) (undo-tree-id9801 . -19) (undo-tree-id9802 . -19) (undo-tree-id9803 . -19) (undo-tree-id9804 . -19) (undo-tree-id9805 . -19) (undo-tree-id9806 . -19) (undo-tree-id9807 . -19) (undo-tree-id9808 . -19) (undo-tree-id9809 . -19) (undo-tree-id9810 . -19) (undo-tree-id9811 . -19) (undo-tree-id9812 . -36) (undo-tree-id9813 . -36) (undo-tree-id9814 . -36) (undo-tree-id9815 . -36) (undo-tree-id9816 . -36) (undo-tree-id9817 . -36)) nil (26714 20152 546445 320000) 0 nil] [nil nil ((#("x. " 0 3 (face font-lock-comment-face fontified t)) . -3654) (undo-tree-id9645 . -2) (undo-tree-id9646 . -2) (undo-tree-id9647 . -2) (undo-tree-id9648 . -2) (undo-tree-id9649 . -2) (undo-tree-id9650 . -2) (undo-tree-id9651 . -2) (undo-tree-id9652 . -2) (undo-tree-id9653 . -2) (undo-tree-id9654 . -2) (undo-tree-id9655 . -2) (undo-tree-id9656 . -2) (undo-tree-id9657 . -2) (undo-tree-id9658 . -2) (undo-tree-id9659 . -2) (undo-tree-id9660 . -2) (undo-tree-id9661 . -2) (undo-tree-id9662 . -2) (undo-tree-id9663 . -2) (undo-tree-id9664 . -2) (undo-tree-id9665 . -2) (undo-tree-id9666 . -2) (undo-tree-id9667 . -2) (undo-tree-id9668 . -2) (undo-tree-id9669 . -2) (undo-tree-id9670 . -2) (undo-tree-id9671 . -2) (undo-tree-id9672 . -2) (undo-tree-id9673 . -2) (undo-tree-id9674 . -2) (undo-tree-id9675 . -2) (undo-tree-id9676 . -2) (undo-tree-id9677 . -2) (undo-tree-id9678 . -2) (undo-tree-id9679 . -2) (undo-tree-id9680 . -3) (undo-tree-id9681 . -3) (undo-tree-id9682 . -3) (undo-tree-id9683 . -3) (undo-tree-id9684 . -3) (undo-tree-id9685 . -3) (undo-tree-id9686 . -3) (undo-tree-id9687 . -3) (undo-tree-id9688 . -3) (undo-tree-id9689 . -3) (undo-tree-id9690 . -3) (undo-tree-id9691 . -3) 3657) ((3654 . 3657)) (26714 20145 137878 880000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3656) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) 3657) nil (26714 20152 546432 491000) 0 nil])
([nil nil ((#("of " 0 3 (face font-lock-comment-face fontified t)) . -3651) (undo-tree-id9593 . -3) (undo-tree-id9594 . -3) (undo-tree-id9595 . -3) (undo-tree-id9596 . -3) (undo-tree-id9597 . -3) (undo-tree-id9598 . -3) (undo-tree-id9599 . -3) (undo-tree-id9600 . -3) (undo-tree-id9601 . -3) (undo-tree-id9602 . -3) (undo-tree-id9603 . -3) (undo-tree-id9604 . -3) (undo-tree-id9605 . -3) (undo-tree-id9606 . -3) (undo-tree-id9607 . -3) (undo-tree-id9608 . -3) (undo-tree-id9609 . -3) (undo-tree-id9610 . -3) (undo-tree-id9611 . -3) (undo-tree-id9612 . -3) (undo-tree-id9613 . -3) (undo-tree-id9614 . -3) (undo-tree-id9615 . -3) (undo-tree-id9616 . -3) (undo-tree-id9617 . -3) (undo-tree-id9618 . -3) (undo-tree-id9619 . -3) (undo-tree-id9620 . -3) (undo-tree-id9621 . -3) (undo-tree-id9622 . -3) (undo-tree-id9623 . -3) (undo-tree-id9624 . -3) (undo-tree-id9625 . -3) (undo-tree-id9626 . -3) (undo-tree-id9627 . -3) (undo-tree-id9628 . -3) (undo-tree-id9629 . -3) (undo-tree-id9630 . -3) (undo-tree-id9631 . -3) (undo-tree-id9632 . -3) (undo-tree-id9633 . -3) (undo-tree-id9634 . -3) (undo-tree-id9635 . -3) (undo-tree-id9636 . -3) (undo-tree-id9637 . -3) (undo-tree-id9638 . -3) (undo-tree-id9639 . -3) (undo-tree-id9640 . -3) (undo-tree-id9641 . -3) (undo-tree-id9642 . -3) (undo-tree-id9643 . -3) (undo-tree-id9644 . -3) 3654) ((3651 . 3654)) (26714 20144 395575 699000) 0 nil])
([nil nil ((3759 . 3760) (t 26714 20152 556760 463000)) nil (26714 20169 414042 252000) 0 nil])
([nil nil ((#("multiple " 0 9 (face font-lock-comment-face fontified t)) . -3642) (undo-tree-id9536 . -9) (undo-tree-id9537 . -9) (undo-tree-id9538 . -9) (undo-tree-id9539 . -9) (undo-tree-id9540 . -9) (undo-tree-id9541 . -9) (undo-tree-id9542 . -9) (undo-tree-id9543 . -9) (undo-tree-id9544 . -9) (undo-tree-id9545 . -9) (undo-tree-id9546 . -9) (undo-tree-id9547 . -9) (undo-tree-id9548 . -9) (undo-tree-id9549 . -9) (undo-tree-id9550 . -9) (undo-tree-id9551 . -9) (undo-tree-id9552 . -9) (undo-tree-id9553 . -9) (undo-tree-id9554 . -9) (undo-tree-id9555 . -9) (undo-tree-id9556 . -9) (undo-tree-id9557 . -9) (undo-tree-id9558 . -9) (undo-tree-id9559 . -9) (undo-tree-id9560 . -9) (undo-tree-id9561 . -9) (undo-tree-id9562 . -9) (undo-tree-id9563 . -9) (undo-tree-id9564 . -9) (undo-tree-id9565 . -9) (undo-tree-id9566 . -9) (undo-tree-id9567 . -9) (undo-tree-id9568 . -9) (undo-tree-id9569 . -9) (undo-tree-id9570 . -9) (undo-tree-id9571 . -9) (undo-tree-id9572 . -9) (undo-tree-id9573 . -9) (undo-tree-id9574 . -9) (undo-tree-id9575 . -9) (undo-tree-id9576 . -9) (undo-tree-id9577 . -9) (undo-tree-id9578 . -9) (undo-tree-id9579 . -9) (undo-tree-id9580 . -9) (undo-tree-id9581 . -9) (undo-tree-id9582 . -9) (undo-tree-id9583 . -9) (undo-tree-id9584 . -9) (undo-tree-id9585 . -9) (undo-tree-id9586 . -9) (undo-tree-id9587 . -9) (undo-tree-id9588 . -9) (undo-tree-id9589 . -9) (undo-tree-id9590 . -9) (undo-tree-id9591 . -9) (undo-tree-id9592 . -9) 3651) ((3642 . 3651)) (26714 20144 395357 830000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -3783) (undo-tree-id9818 . -1) 3784) nil (26714 20169 414041 127000) 0 nil])
nil
([nil nil ((3783 . 3784)) nil (26714 20169 414030 509000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-comment-face fontified t)) . -3759) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) 3760 (t 26714 20169 425355 217000)) nil (26714 20174 398912 901000) 0 nil])
([nil nil ((3759 . 3760) (t 26714 20174 409529 31000)) nil (26714 20185 829654 414000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-comment-face fontified t)) . -3759) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) 3760) nil (26714 20185 829653 551000) 0 nil])
([nil nil ((3759 . 3761)) nil (26714 20185 829646 341000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -3801) (undo-tree-id9825 . -1) 3802) nil (26714 20185 829645 443000) 0 nil])
([nil nil ((3801 . 3803)) nil (26714 20185 829634 196000) 0 nil])
([nil nil ((3803 . 3810) (t 26714 20185 840924 452000)) nil (26714 20191 993352 400000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-comment-face fontified t)) . -3809) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) 3810) nil (26714 20191 993351 57000) 0 nil])
([nil nil ((3809 . 3814)) nil (26714 20191 993333 330000) 0 nil])
([nil nil ((#("return" 0 6 (face font-lock-keyword-face fontified t)) . -475) (undo-tree-id10082 . -6) 481 (t 26714 20192 6135 872000)) nil (26714 20273 232078 1000) 0 nil])
([nil nil ((475 . 483)) nil (26714 20273 232077 90000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -482) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) 483) nil (26714 20273 232076 538000) 0 nil])
([nil nil ((482 . 494)) nil (26714 20273 232072 435000) 0 nil])
([nil nil ((494 . 499)) nil (26714 20273 232072 138000) 0 nil])
([nil nil ((499 . 510)) nil (26714 20273 232071 848000) 0 nil])
([nil nil ((#("ra" 0 2 (fontified t)) . -508) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -2) (undo-tree-id10071 . -2) (undo-tree-id10072 . -2) (undo-tree-id10073 . -2) (undo-tree-id10074 . -2) (undo-tree-id10075 . -2) 510) nil (26714 20273 232071 401000) 0 nil])
([nil nil ((508 . 510)) nil (26714 20273 232066 436000) 0 nil])
([nil nil ((#("S:" 0 2 (fontified t)) . -508) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -2) (undo-tree-id10060 . -2) (undo-tree-id10061 . -2) (undo-tree-id10062 . -2) (undo-tree-id10063 . -2) (undo-tree-id10064 . -2) 510) nil (26714 20273 232065 985000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -505) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -2) (undo-tree-id10013 . -2) (undo-tree-id10014 . -2) (undo-tree-id10015 . -2) (undo-tree-id10016 . -2) (undo-tree-id10017 . -3) (undo-tree-id10018 . -3) (undo-tree-id10019 . -3) (undo-tree-id10020 . -3) (undo-tree-id10021 . -3) (undo-tree-id10022 . -3) (undo-tree-id10023 . -3) (undo-tree-id10024 . -3) (undo-tree-id10025 . -3) (undo-tree-id10026 . -3) (undo-tree-id10027 . -3) (undo-tree-id10028 . -3) (undo-tree-id10029 . -3) (undo-tree-id10030 . -3) (undo-tree-id10031 . -3) (undo-tree-id10032 . -3) (undo-tree-id10033 . -3) (undo-tree-id10034 . -3) (undo-tree-id10035 . -3) (undo-tree-id10036 . -3) (undo-tree-id10037 . -3) (undo-tree-id10038 . -3) (undo-tree-id10039 . -3) (undo-tree-id10040 . -3) (undo-tree-id10041 . -3) (undo-tree-id10042 . -3) (undo-tree-id10043 . -3) (undo-tree-id10044 . -3) (undo-tree-id10045 . -3) (undo-tree-id10046 . -3) (undo-tree-id10047 . -3) (undo-tree-id10048 . -3) (undo-tree-id10049 . -3) (undo-tree-id10050 . -3) (undo-tree-id10051 . -3) (undo-tree-id10052 . -3) (undo-tree-id10053 . -3) 508) nil (26714 20273 232059 389000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -504) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) 505) nil (26714 20273 232036 142000) 0 nil])
([nil nil ((504 . 505)) nil (26714 20273 232008 60000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -503) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (#("c" 0 1 (fontified t)) . -504) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) 505) nil (26714 20273 232006 366000) 0 nil])
([nil nil ((503 . 510)) nil (26714 20273 231961 364000) 0 nil])
([nil nil ((510 . 519)) nil (26714 20273 231961 53000) 0 nil])
([nil nil ((510 . 519)) nil (26714 20273 231960 737000) 0 nil])
([nil nil ((519 . 540)) nil (26714 20273 231960 438000) 0 nil])
([nil nil ((540 . 545)) nil (26714 20273 231960 105000) 0 nil])
([nil nil ((545 . 554)) nil (26714 20273 231959 755000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -550) (undo-tree-id9850 . -4) (undo-tree-id9851 . -4) (undo-tree-id9852 . -4) (undo-tree-id9853 . -4) (undo-tree-id9854 . -4) (undo-tree-id9855 . -4) (undo-tree-id9856 . -4) (undo-tree-id9857 . -4) (undo-tree-id9858 . -4) (undo-tree-id9859 . -4) (undo-tree-id9860 . -4) (undo-tree-id9861 . -4) (undo-tree-id9862 . -4) (undo-tree-id9863 . -4) (undo-tree-id9864 . -4) 554) nil (26714 20273 231959 152000) 0 nil])
([nil nil ((550 . 554)) nil (26714 20273 231951 334000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -553) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) 554) nil (26714 20273 231950 422000) 0 nil])
([nil nil ((553 . 558)) nil (26714 20273 231936 82000) 0 nil])
([nil nil ((#("encode()" 0 8 (fontified t)) . -536) (undo-tree-id10095 . -8) (undo-tree-id10096 . -8) (undo-tree-id10097 . -8) (undo-tree-id10098 . -8) (undo-tree-id10099 . -8) (undo-tree-id10100 . -8) 544 (t 26714 20273 242808 583000)) nil (26714 20327 69941 420000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -535) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) 536) nil (26714 20327 69934 853000) 0 nil])
([nil nil ((534 . 538)) nil (26714 20335 127204 816000) 0 nil])
([nil nil ((540 . 541)) ((#(")" 0 1 (fontified t)) . 540) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (t 26714 20327 81474 209000)) (26714 20335 542511 548000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . -521) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -522) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (#(" " 0 1 (fontified t)) . -523) (undo-tree-id10151 . -1) 524 (t 26714 20327 81474 209000)) nil (26714 20732 208354 945000) 0 nil])
([nil nil ((521 . 529)) nil (26714 20732 208335 225000) 0 nil])
([nil nil ((546 . 547)) nil (26714 20732 208330 688000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -523) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (#("." 0 1 (fontified t)) . -524) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) 525 (t 26714 20732 225073 410000)) nil (26714 20751 825272 41000) 0 nil])
([nil nil ((523 . 529)) nil (26714 20751 825234 613000) 0 nil])
([nil nil ((533 . 536)) nil (26714 20751 825230 243000) 0 nil])
([nil nil ((#("array([])" 0 9 (fontified t)) . -485) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -9) (undo-tree-id10234 . -9) (undo-tree-id10235 . -9) (undo-tree-id10236 . -9) (undo-tree-id10237 . -9) (undo-tree-id10238 . -9) (undo-tree-id10239 . -9) (undo-tree-id10240 . -9) (undo-tree-id10241 . -9) (undo-tree-id10242 . -9) (undo-tree-id10243 . -9) 494 (t 26714 20751 837523 70000)) nil (26714 21369 98524 119000) 0 nil])
([nil nil ((#("numpy." 0 6 (fontified t)) . -479) (undo-tree-id10207 . -6) (undo-tree-id10208 . -6) (undo-tree-id10209 . -6) (undo-tree-id10210 . -6) (undo-tree-id10211 . -6) (undo-tree-id10212 . -6) (undo-tree-id10213 . -6) (undo-tree-id10214 . -6) (undo-tree-id10215 . -6) (undo-tree-id10216 . -6) (undo-tree-id10217 . -6) (undo-tree-id10218 . -6) (undo-tree-id10219 . -6) (undo-tree-id10220 . -6) (undo-tree-id10221 . -6) (undo-tree-id10222 . -6) (undo-tree-id10223 . -6) (undo-tree-id10224 . -6) (undo-tree-id10225 . -6) (undo-tree-id10226 . -6) 485) nil (26714 21369 98515 762000) 0 nil])
([nil nil ((479 . 480)) nil (26714 21369 98505 76000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -479) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) 480) nil (26714 21369 98504 463000) 0 nil])
([nil nil ((479 . 481)) nil (26714 21369 98497 848000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -508) (undo-tree-id10199 . -1) 509) nil (26714 21369 98497 423000) 0 nil])
([nil nil ((508 . 511)) nil (26714 21369 98496 382000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -510) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) 511) nil (26714 21369 98495 698000) 0 nil])
([nil nil ((#(" numpy" 0 6 (fontified t)) . 510) (undo-tree-id10191 . -6)) nil (26714 21369 98490 482000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 510) (#("A" 0 1 (fontified t)) . 510) (#("(" 0 1 (fontified t)) . 510) (#("d" 0 1 (fontified t)) . 510) (#("d" 0 1 (fontified t)) . 510) (#("a" 0 1 (fontified t)) . 510) (#("." 0 1 (fontified t)) . 510)) nil (26714 21369 98487 778000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -528) (undo-tree-id10190 . -1) 529) nil (26714 21369 98484 796000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -395) (undo-tree-id10278 . -1) 396 (t 26714 21369 111126 321000)) nil (26714 21670 249847 392000) 0 nil])
([nil nil ((395 . 415)) nil (26714 21670 249846 509000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -414) (undo-tree-id10277 . -1) 415) nil (26714 21670 249846 101000) 0 nil])
([nil nil ((353 . 365)) nil (26714 21670 249845 338000) 0 nil])
([nil nil ((367 . 378)) nil (26714 21670 249845 30000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -377) (undo-tree-id10276 . -1) 378) nil (26714 21670 249844 633000) 0 nil])
([nil nil ((377 . 378)) nil (26714 21670 249843 772000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -374) (undo-tree-id10272 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -375) (undo-tree-id10273 . -1) (#(" " 0 1 (fontified t)) . -376) (undo-tree-id10274 . -1) (#("i" 0 1 (fontified t)) . -377) (undo-tree-id10275 . -1) 378) nil (26714 21670 249843 1000) 0 nil])
([nil nil ((374 . 379)) nil (26714 21670 249840 529000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -455) (undo-tree-id10270 . -1) (#(" " 0 1 (fontified t)) . -456) (undo-tree-id10271 . -1) 457) nil (26714 21670 249839 967000) 0 nil])
([nil nil ((455 . 457)) nil (26714 21670 249838 558000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -521) (undo-tree-id10268 . -1) (#("]" 0 1 (fontified t)) . -522) (undo-tree-id10269 . -1) 523) nil (26714 21670 249838 16000) 0 nil])
([nil nil ((521 . 535)) nil (26714 21670 249836 711000) 0 nil])
([nil nil ((535 . 538)) nil (26714 21670 249836 450000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -537) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) 538) nil (26714 21670 249835 970000) 0 nil])
([nil nil ((537 . 546)) nil (26714 21670 249830 100000) 0 nil])
([nil nil ((546 . 547)) nil (26714 21670 249829 738000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . -574) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -575) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (#(" " 0 1 (fontified t)) . -576) (undo-tree-id10261 . -1) 577) nil (26714 21670 249828 158000) 0 nil])
([nil nil ((574 . 592)) nil (26714 21670 249810 727000) 0 nil])
([nil nil ((609 . 610)) nil (26714 21670 249806 535000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 439) (t 26714 21670 260332 360000)) nil (26714 21738 319355 683000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -448) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -449) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (#(" " 0 1 (fontified t)) . -450) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (#("a" 0 1 (fontified t)) . -451) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (#("r" 0 1 (fontified t)) . -452) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (#("r" 0 1 (fontified t)) . -453) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (#(")" 0 1 (fontified t)) . -454) (undo-tree-id10450 . -1) 455) nil (26714 21738 319352 303000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -434) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (#("r" 0 1 (fontified t)) . -435) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (#("r" 0 1 (fontified t)) . -436) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (#("," 0 1 (fontified t)) . -437) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (#(" " 0 1 (fontified t)) . -438) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) 439) nil (26714 21738 319279 485000) 0 nil])
([nil nil ((443 . 445)) nil (26714 21738 319238 10000) 0 nil])
([nil nil ((445 . 448)) nil (26714 21738 319234 427000) 0 nil])
([nil nil ((625 . 626) (t 26714 21738 341035 184000)) nil (26714 22071 398007 174000) 0 nil])
([nil nil ((625 . 640)) nil (26714 22071 398005 400000) 0 nil])
([nil nil ((324 . 325)) nil (26714 22071 398003 934000) 0 nil])
([nil nil ((325 . 334)) nil (26714 22071 398002 566000) 0 nil])
([nil nil ((#("to " 0 3 (face font-lock-comment-face fontified t)) . -331) (undo-tree-id10713 . -3) 334) nil (26714 22071 398000 798000) 0 nil])
([nil nil ((#("int " 0 4 (face font-lock-comment-face fontified t)) . -327) (undo-tree-id10712 . -4) 331) nil (26714 22071 397996 454000) 0 nil])
([nil nil ((327 . 328)) nil (26714 22071 397992 632000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -327) (undo-tree-id10711 . -1) 328) nil (26714 22071 397990 823000) 0 nil])
([nil nil ((327 . 332)) nil (26714 22071 397986 829000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -331) (undo-tree-id10710 . -1) 332) nil (26714 22071 397985 31000) 0 nil])
([nil nil ((#("conc" 0 4 (face font-lock-comment-face fontified t)) . -327) (undo-tree-id10709 . -4) 331) nil (26714 22071 397980 786000) 0 nil])
([nil nil ((327 . 348)) nil (26714 22071 397976 730000) 0 nil])
([nil nil ((348 . 355)) nil (26714 22071 397975 396000) 0 nil])
([nil nil ((#("binary " 0 7 (face font-lock-comment-face fontified t)) . -348) (undo-tree-id10708 . -7) 355) nil (26714 22071 397973 638000) 0 nil])
([nil nil ((#("a " 0 2 (face font-lock-comment-face fontified t)) . -346) (undo-tree-id10707 . -2) 348) nil (26714 22071 397969 393000) 0 nil])
([nil nil ((346 . 364)) nil (26714 22071 397965 464000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -362) (undo-tree-id10705 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -363) (undo-tree-id10706 . -1) 364) nil (26714 22071 397963 431000) 0 nil])
([nil nil ((362 . 375)) nil (26714 22071 397956 225000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -374) (undo-tree-id10704 . -1) 375) nil (26714 22071 397954 484000) 0 nil])
([nil nil ((374 . 384)) nil (26714 22071 397950 482000) 0 nil])
([nil nil ((543 . 544)) nil (26714 22071 397949 22000) 0 nil])
([nil nil ((544 . 555)) nil (26714 22071 397947 690000) 0 nil])
([nil nil ((555 . 564)) nil (26714 22071 397946 330000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -562) (undo-tree-id10702 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -563) (undo-tree-id10703 . -1) 564) nil (26714 22071 397944 137000) 0 nil])
([nil nil ((562 . 583)) nil (26714 22071 397937 882000) 0 nil])
([nil nil ((583 . 585)) nil (26714 22071 397936 421000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -584) (undo-tree-id10701 . -1) 585) nil (26714 22071 397934 676000) 0 nil])
([nil nil ((584 . 604)) nil (26714 22071 397930 761000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -738) (undo-tree-id10698 . -8) (undo-tree-id10699 . -8) (undo-tree-id10700 . -8) (737 . 738)) nil (26714 22071 397928 792000) 0 nil])
([nil nil ((739 . 743)) nil (26714 22071 397920 448000) 0 nil])
([nil nil ((758 . 761)) nil (26714 22071 397919 102000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -759) (undo-tree-id10696 . -1) (#("A" 0 1 (fontified t)) . -760) (undo-tree-id10697 . -1) 761) nil (26714 22071 397916 894000) 0 nil])
([nil nil ((759 . 762)) nil (26714 22071 397910 773000) 0 nil])
([nil nil ((762 . 767)) nil (26714 22071 397909 304000) 0 nil])
([nil nil ((767 . 773)) nil (26714 22071 397907 787000) 0 nil])
([nil nil ((773 . 778)) nil (26714 22071 397906 282000) 0 nil])
([nil nil ((778 . 786)) nil (26714 22071 397904 901000) 0 nil])
([nil nil ((#("in" 0 2 (face font-lock-keyword-face fontified t)) . -784) (undo-tree-id10695 . -2) 786) nil (26714 22071 397903 117000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -782) (undo-tree-id10694 . -2) 784) nil (26714 22071 397898 695000) 0 nil])
([nil nil ((782 . 792)) nil (26714 22071 397894 844000) 0 nil])
([nil nil ((#("range" 0 5 (face font-lock-builtin-face fontified t)) . -787) (undo-tree-id10693 . -5) 792) nil (26714 22071 397893 51000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -784) (undo-tree-id10692 . -3) 787) nil (26714 22071 397888 815000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -782) (undo-tree-id10691 . -2) 784) nil (26714 22071 397884 228000) 0 nil])
([nil nil ((782 . 785)) nil (26714 22071 397880 377000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -784) (undo-tree-id10690 . -1) 785) nil (26714 22071 397878 610000) 0 nil])
([nil nil ((#("lo" 0 2 (fontified t)) . -782) (undo-tree-id10689 . -2) 784) nil (26714 22071 397874 175000) 0 nil])
([nil nil ((782 . 803)) nil (26714 22071 397870 174000) 0 nil])
([nil nil ((803 . 810)) nil (26714 22071 397868 783000) 0 nil])
([nil nil ((810 . 819)) nil (26714 22071 397867 372000) 0 nil])
([nil nil ((254 . 255)) nil (26714 22071 397865 991000) 0 nil])
([nil nil ((254 . 255)) nil (26714 22071 397864 597000) 0 nil])
([nil nil ((255 . 276)) nil (26714 22071 397863 227000) 0 nil])
([nil nil ((276 . 297)) nil (26714 22071 397861 470000) 0 nil])
([nil nil ((297 . 299)) nil (26714 22071 397860 27000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -297) (undo-tree-id10687 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -298) (undo-tree-id10688 . -1) 299) nil (26714 22071 397857 786000) 0 nil])
([nil nil ((297 . 318)) nil (26714 22071 397851 534000) 0 nil])
([nil nil ((311 . 313) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 311) (310 . 311) (318 . 327)) nil (26714 22071 397849 582000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -328) (undo-tree-id10686 . -1) 329) nil (26714 22071 397846 791000) 0 nil])
([nil nil ((328 . 336)) nil (26714 22071 397842 781000) 0 nil])
([nil nil ((#("are" 0 3 (face font-lock-comment-face fontified t)) . -333) (undo-tree-id10685 . -3) 336) nil (26714 22071 397841 73000) 0 nil])
([nil nil ((#("we " 0 3 (face font-lock-comment-face fontified t)) . -330) (undo-tree-id10684 . -3) 333) nil (26714 22071 397835 620000) 0 nil])
([nil nil ((330 . 344)) nil (26714 22071 397831 790000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -343) (undo-tree-id10683 . -1) 344) nil (26714 22071 397829 922000) 0 nil])
([nil nil ((343 . 351)) nil (26714 22071 397825 908000) 0 nil])
([nil nil ((#("string" 0 6 (face font-lock-comment-face fontified t)) . -345) (undo-tree-id10660 . -2) (undo-tree-id10661 . -2) (undo-tree-id10662 . -3) (undo-tree-id10663 . -3) (undo-tree-id10664 . -3) (undo-tree-id10665 . -3) (undo-tree-id10666 . -3) (undo-tree-id10667 . -4) (undo-tree-id10668 . -4) (undo-tree-id10669 . -4) (undo-tree-id10670 . -4) (undo-tree-id10671 . -4) (undo-tree-id10672 . -5) (undo-tree-id10673 . -5) (undo-tree-id10674 . -5) (undo-tree-id10675 . -5) (undo-tree-id10676 . -5) (undo-tree-id10677 . -6) (undo-tree-id10678 . -6) (undo-tree-id10679 . -6) (undo-tree-id10680 . -6) (undo-tree-id10681 . -6) (undo-tree-id10682 . -6) 351) nil (26714 22071 397821 724000) 0 nil])
([nil nil ((345 . 346)) nil (26714 22071 397772 289000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -345) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) 346) nil (26714 22071 397769 836000) 0 nil])
([nil nil ((345 . 348)) nil (26714 22071 397755 699000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -347) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) 348) nil (26714 22071 397753 378000) 0 nil])
([nil nil ((#("st" 0 2 (face font-lock-comment-face fontified t)) . -345) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -2) (undo-tree-id10633 . -2) (undo-tree-id10634 . -2) (undo-tree-id10635 . -2) (undo-tree-id10636 . -2) (undo-tree-id10637 . -2) (undo-tree-id10638 . -2) (undo-tree-id10639 . -2) (undo-tree-id10640 . -2) (undo-tree-id10641 . -2) (undo-tree-id10642 . -2) (undo-tree-id10643 . -2) (undo-tree-id10644 . -2) (undo-tree-id10645 . -2) (undo-tree-id10646 . -2) (undo-tree-id10647 . -2) 347) nil (26714 22071 397736 310000) 0 nil])
([nil nil ((345 . 359)) nil (26714 22071 397691 174000) 0 nil])
([nil nil ((#("output" 0 6 (face font-lock-comment-face fontified t)) . -353) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -2) (undo-tree-id10602 . -2) (undo-tree-id10603 . -2) (undo-tree-id10604 . -2) (undo-tree-id10605 . -2) (undo-tree-id10606 . -3) (undo-tree-id10607 . -3) (undo-tree-id10608 . -3) (undo-tree-id10609 . -3) (undo-tree-id10610 . -3) (undo-tree-id10611 . -4) (undo-tree-id10612 . -4) (undo-tree-id10613 . -4) (undo-tree-id10614 . -4) (undo-tree-id10615 . -4) (undo-tree-id10616 . -5) (undo-tree-id10617 . -5) (undo-tree-id10618 . -5) (undo-tree-id10619 . -5) (undo-tree-id10620 . -5) (undo-tree-id10621 . -6) (undo-tree-id10622 . -6) (undo-tree-id10623 . -6) (undo-tree-id10624 . -6) (undo-tree-id10625 . -6) (undo-tree-id10626 . -6) 359) nil (26714 22071 397686 3000) 0 nil])
([nil nil ((#("input & " 0 8 (face font-lock-comment-face fontified t)) . -345) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -2) (undo-tree-id10519 . -2) (undo-tree-id10520 . -2) (undo-tree-id10521 . -2) (undo-tree-id10522 . -2) (undo-tree-id10523 . -3) (undo-tree-id10524 . -3) (undo-tree-id10525 . -3) (undo-tree-id10526 . -3) (undo-tree-id10527 . -3) (undo-tree-id10528 . -4) (undo-tree-id10529 . -4) (undo-tree-id10530 . -4) (undo-tree-id10531 . -4) (undo-tree-id10532 . -4) (undo-tree-id10533 . -5) (undo-tree-id10534 . -5) (undo-tree-id10535 . -5) (undo-tree-id10536 . -5) (undo-tree-id10537 . -5) (undo-tree-id10538 . -5) (undo-tree-id10539 . -5) (undo-tree-id10540 . -5) (undo-tree-id10541 . -5) (undo-tree-id10542 . -5) (undo-tree-id10543 . -6) (undo-tree-id10544 . -6) (undo-tree-id10545 . -6) (undo-tree-id10546 . -6) (undo-tree-id10547 . -6) (undo-tree-id10548 . -6) (undo-tree-id10549 . -7) (undo-tree-id10550 . -7) (undo-tree-id10551 . -7) (undo-tree-id10552 . -7) (undo-tree-id10553 . -7) (undo-tree-id10554 . -8) (undo-tree-id10555 . -8) (undo-tree-id10556 . -8) (undo-tree-id10557 . -8) (undo-tree-id10558 . -8) (undo-tree-id10559 . -8) (undo-tree-id10560 . -8) (undo-tree-id10561 . -8) (undo-tree-id10562 . -8) (undo-tree-id10563 . -8) (undo-tree-id10564 . -8) (undo-tree-id10565 . -8) (undo-tree-id10566 . -8) (undo-tree-id10567 . -8) (undo-tree-id10568 . -8) (undo-tree-id10569 . -8) (undo-tree-id10570 . -8) (undo-tree-id10571 . -8) (undo-tree-id10572 . -8) (undo-tree-id10573 . -8) (undo-tree-id10574 . -8) (undo-tree-id10575 . -8) (undo-tree-id10576 . -8) (undo-tree-id10577 . -8) (undo-tree-id10578 . -8) (undo-tree-id10579 . -8) (undo-tree-id10580 . -8) (undo-tree-id10581 . -8) (undo-tree-id10582 . -8) (undo-tree-id10583 . -8) (undo-tree-id10584 . -8) (undo-tree-id10585 . -8) (undo-tree-id10586 . -8) (undo-tree-id10587 . -8) (undo-tree-id10588 . -8) (undo-tree-id10589 . -8) (undo-tree-id10590 . -8) (undo-tree-id10591 . -8) (undo-tree-id10592 . -8) (undo-tree-id10593 . -8) (undo-tree-id10594 . -8) (undo-tree-id10595 . -8) 353) nil (26714 22071 397604 223000) 0 nil])
([nil nil ((345 . 350)) nil (26714 22071 397455 863000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-comment-face fontified t)) . -349) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) 350) nil (26714 22071 397455 42000) 0 nil])
([nil nil ((#("intp" 0 4 (face font-lock-comment-face fontified t)) . -345) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -2) (undo-tree-id10482 . -2) (undo-tree-id10483 . -2) (undo-tree-id10484 . -2) (undo-tree-id10485 . -2) (undo-tree-id10486 . -3) (undo-tree-id10487 . -3) (undo-tree-id10488 . -3) (undo-tree-id10489 . -3) (undo-tree-id10490 . -3) (undo-tree-id10491 . -4) (undo-tree-id10492 . -4) (undo-tree-id10493 . -4) (undo-tree-id10494 . -4) (undo-tree-id10495 . -4) (undo-tree-id10496 . -4) (undo-tree-id10497 . -4) (undo-tree-id10498 . -4) (undo-tree-id10499 . -4) (undo-tree-id10500 . -4) (undo-tree-id10501 . -4) (undo-tree-id10502 . -4) (undo-tree-id10503 . -4) (undo-tree-id10504 . -4) (undo-tree-id10505 . -4) (undo-tree-id10506 . -4) 349) nil (26714 22071 397447 429000) 0 nil])
([nil nil ((345 . 363)) nil (26714 22071 397416 41000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -362) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) 363) nil (26714 22071 397414 779000) 0 nil])
([nil nil ((362 . 370)) nil (26714 22071 397405 150000) 0 nil])
([nil nil ((370 . 377)) nil (26714 22071 397404 500000) 0 nil])
([nil nil ((365 . 366)) nil (26714 22071 397403 886000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-comment-face fontified t)) . -365) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) 366) nil (26714 22071 397402 773000) 0 nil])
([nil nil ((365 . 371)) nil (26714 22071 397395 276000) 0 nil])
([nil nil ((377 . 379) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 377) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (376 . 377) (383 . 385)) nil (26714 22071 397393 810000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -386) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) 387) nil (26714 22071 397385 347000) 0 nil])
([nil nil ((386 . 387)) nil (26714 22071 397360 792000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -870) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) 871 (t 26714 22071 415227 648000)) nil (26714 23028 592801 444000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -948) (undo-tree-id10732 . -4) (undo-tree-id10733 . -4) (undo-tree-id10734 . -4) (undo-tree-id10735 . -4) (undo-tree-id10736 . -4) (undo-tree-id10737 . -4) (undo-tree-id10738 . -4) (undo-tree-id10739 . -4) (undo-tree-id10740 . -4) (undo-tree-id10741 . -4) (undo-tree-id10742 . -4) (undo-tree-id10743 . -4) 952) nil (26714 23028 592789 203000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -944) (undo-tree-id10714 . -4) (undo-tree-id10715 . -4) (undo-tree-id10716 . -4) (undo-tree-id10717 . -4) (undo-tree-id10718 . -4) (undo-tree-id10719 . -4) (undo-tree-id10720 . -4) (undo-tree-id10721 . -4) (undo-tree-id10722 . -4) (undo-tree-id10723 . -4) (undo-tree-id10724 . -4) (undo-tree-id10725 . -4) (undo-tree-id10726 . -4) (undo-tree-id10727 . -4) (undo-tree-id10728 . -4) (undo-tree-id10729 . -4) (undo-tree-id10730 . -4) (undo-tree-id10731 . -4) 948) nil (26714 23028 592778 108000) 0 nil])
([nil nil ((254 . 255) (t 26714 23028 607985 804000)) nil (26714 23113 154963 142000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -254) (undo-tree-id10767 . 1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) 255) nil (26714 23113 154962 129000) 0 nil])
([nil nil ((388 . 389)) nil (26714 23113 154948 18000) 0 nil])
([nil nil ((388 . 389)) nil (26714 23113 154947 639000) 0 nil])
([nil nil ((#("bit" 0 3 (face font-lock-comment-face fontified t)) . -367) (undo-tree-id10766 . -3) 370) nil (26714 23113 154946 989000) 0 nil])
([nil nil ((#("7-" 0 2 (face font-lock-comment-face fontified t)) . -365) (undo-tree-id10760 . -2) (undo-tree-id10761 . -2) (undo-tree-id10762 . -2) (undo-tree-id10763 . -2) (undo-tree-id10764 . -2) (undo-tree-id10765 . -2) 367) nil (26714 23113 154945 478000) 0 nil])
([nil nil ((365 . 370)) nil (26714 23113 154939 818000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -376) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) 377) nil (26714 23113 154938 808000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . 376)) nil (26714 23113 154922 459000) 0 nil])
([nil nil ((377 . 379) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 377) (376 . 377) (385 . 386)) nil (26714 23113 154917 821000) 0 nil])
([nil nil ((#("
# For the sake of simplicity (again this is a barebones
# implementation), let's restrict input and output to 8-bit ASCII
# strings. " 0 1 (fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 57 (face font-lock-comment-face fontified t) 57 59 (face font-lock-comment-delimiter-face fontified t) 59 123 (face font-lock-comment-face fontified t) 123 125 (face font-lock-comment-delimiter-face fontified t) 125 134 (face font-lock-comment-face fontified t)) . 254) (undo-tree-id10830 . -134) (t 26714 23113 171910 957000)) nil (26714 23175 82378 156000) 0 nil])
([nil nil ((254 . 255)) nil (26714 23175 82376 951000) 0 nil])
([nil nil ((255 . 276)) nil (26714 23175 82376 531000) 0 nil])
([nil nil ((276 . 279)) nil (26714 23175 82376 117000) 0 nil])
([nil nil ((#("string" 0 6 (face font-lock-comment-face fontified t)) . -273) (undo-tree-id10829 . -6) 279) nil (26714 23175 82375 612000) 0 nil])
([nil nil ((#("Byte " 0 5 (face font-lock-comment-face fontified t)) . -268) (undo-tree-id10828 . -5) 273) nil (26714 23175 82374 154000) 0 nil])
([nil nil ((268 . 283)) nil (26714 23175 82373 107000) 0 nil])
([nil nil ((283 . 304)) nil (26714 23175 82372 705000) 0 nil])
([nil nil ((304 . 317)) nil (26714 23175 82372 312000) 0 nil])
([nil nil ((317 . 325)) nil (26714 23175 82371 875000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -324) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) 325) nil (26714 23175 82371 197000) 0 nil])
([nil nil ((324 . 330)) nil (26714 23175 82366 656000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-comment-face fontified t)) . -329) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) 330) nil (26714 23175 82365 916000) 0 nil])
([nil nil ((334 . 344) (325 . 327) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 325) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (324 . 325) (329 . 332)) nil (26714 23175 82360 167000) 0 nil])
([nil nil ((#("for " 0 4 (face font-lock-comment-face fontified t)) . -340) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -2) (undo-tree-id10789 . -2) (undo-tree-id10790 . -2) (undo-tree-id10791 . -2) (undo-tree-id10792 . -2) (undo-tree-id10793 . -3) (undo-tree-id10794 . -3) (undo-tree-id10795 . -3) (undo-tree-id10796 . -3) (undo-tree-id10797 . -3) (undo-tree-id10798 . -4) (undo-tree-id10799 . -4) (undo-tree-id10800 . -4) (undo-tree-id10801 . -4) (undo-tree-id10802 . -4) (undo-tree-id10803 . -4) (undo-tree-id10804 . -4) (undo-tree-id10805 . -4) (undo-tree-id10806 . -4) (undo-tree-id10807 . -4) (undo-tree-id10808 . -4) (undo-tree-id10809 . -4) 344) nil (26714 23175 82353 495000) 0 nil])
([nil nil ((340 . 352)) nil (26714 23175 82322 587000) 0 nil])
([nil nil ((352 . 363)) nil (26714 23175 82317 874000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 363) (undo-tree-id10832 . -1) (t 26714 23175 99885 429000)) nil (26714 23220 717429 849000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 363) (undo-tree-id10831 . -1)) nil (26714 23220 717422 940000) 0 nil])
([nil nil ((434 . 435) (t 26714 23220 733880 591000)) nil (26714 23409 332782 799000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -434) (undo-tree-id10837 . -1) 435) nil (26714 23409 332781 895000) 0 nil])
([nil nil ((494 . 495)) nil (26714 23409 332780 692000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -493) (undo-tree-id10835 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -494) (undo-tree-id10836 . -1) 495) nil (26714 23409 332779 780000) 0 nil])
([nil nil ((493 . 506)) nil (26714 23409 332777 750000) 0 nil])
([nil nil ((#("[foo & 1]," 0 5 (fontified t) 5 6 (face font-lock-operator-face fontified t) 6 8 (fontified t) 8 10 (fontified t)) . 616) (undo-tree-id10834 . -10)) nil (26714 23409 332776 797000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 616)) nil (26714 23409 332775 313000) 0 nil])
([nil nil ((619 . 620)) nil (26714 23409 332774 609000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -619) (undo-tree-id10833 . -1) 620) nil (26714 23409 332773 420000) 0 nil])
([nil nil ((619 . 630)) nil (26714 23409 332760 180000) 0 nil])
([nil nil ((#("integer" 0 7 (face font-lock-comment-face fontified t)) . -445) (undo-tree-id11234 . -7) 452 (t 26714 23409 350964 674000)) nil (26714 23491 627037 325000) 0 nil])
([nil nil ((445 . 448)) nil (26714 23491 627035 844000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -447) (undo-tree-id11233 . -1) 448) nil (26714 23491 627035 273000) 0 nil])
([nil nil ((447 . 449)) nil (26714 23491 627034 141000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-comment-face fontified t)) . -447) (undo-tree-id11231 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -448) (undo-tree-id11232 . -1) 449) nil (26714 23491 627033 395000) 0 nil])
([nil nil ((447 . 449)) nil (26714 23491 627030 507000) 0 nil])
([nil nil ((#("byte" 0 4 (face font-lock-comment-face fontified t)) . -445) (undo-tree-id11229 . -4) (undo-tree-id11230 . -4) 449) nil (26714 23491 627029 989000) 0 nil])
([nil nil ((445 . 466)) nil (26714 23491 627028 206000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -463) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -464) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -465) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) 466) nil (26714 23491 627025 838000) 0 nil])
([nil nil ((463 . 466)) nil (26714 23491 626974 207000) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -465) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) 466) nil (26714 23491 626973 462000) 0 nil])
([nil nil ((465 . 466)) nil (26714 23491 626968 571000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 495) (493 . 495) (493 . 494) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 493) (492 . 493) (520 . 521)) nil (26714 23491 626967 830000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -522) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) 523) nil (26714 23491 626966 756000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -600) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (#("o" 0 1 (fontified t)) . -601) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (#("o" 0 1 (fontified t)) . -602) (undo-tree-id11137 . -1) 603) nil (26714 23491 626960 864000) 0 nil])
([nil nil ((#("while " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -594) (undo-tree-id11099 . -6) (undo-tree-id11100 . -6) (undo-tree-id11101 . -6) (undo-tree-id11102 . -6) (undo-tree-id11103 . -6) (undo-tree-id11104 . -6) (undo-tree-id11105 . -6) (undo-tree-id11106 . -6) (undo-tree-id11107 . -6) (undo-tree-id11108 . -6) (undo-tree-id11109 . -6) (undo-tree-id11110 . -6) (undo-tree-id11111 . -6) (undo-tree-id11112 . -6) (undo-tree-id11113 . -6) (undo-tree-id11114 . -6) (undo-tree-id11115 . -6) (undo-tree-id11116 . -6) (undo-tree-id11117 . -6) (undo-tree-id11118 . -6) (undo-tree-id11119 . -6) 600) nil (26714 23491 626947 793000) 0 nil])
([nil nil ((594 . 602)) nil (26714 23491 626933 349000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -600) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (#(" " 0 1 (fontified t)) . -601) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) 602) nil (26714 23491 626931 878000) 0 nil])
([nil nil ((600 . 604)) nil (26714 23491 626910 865000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -603) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) 604) nil (26714 23491 626910 118000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -600) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -2) (undo-tree-id11028 . -2) (undo-tree-id11029 . -2) (undo-tree-id11030 . -2) (undo-tree-id11031 . -2) (undo-tree-id11032 . -3) (undo-tree-id11033 . -3) (undo-tree-id11034 . -3) (undo-tree-id11035 . -3) (undo-tree-id11036 . -3) (undo-tree-id11037 . -3) (undo-tree-id11038 . -3) (undo-tree-id11039 . -3) (undo-tree-id11040 . -3) (undo-tree-id11041 . -3) (undo-tree-id11042 . -3) (undo-tree-id11043 . -3) (undo-tree-id11044 . -3) (undo-tree-id11045 . -3) (undo-tree-id11046 . -3) (undo-tree-id11047 . -3) (undo-tree-id11048 . -3) (undo-tree-id11049 . -3) (undo-tree-id11050 . -3) (undo-tree-id11051 . -3) (undo-tree-id11052 . -3) (undo-tree-id11053 . -3) 603) nil (26714 23491 626900 677000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -598) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (#(" " 0 1 (fontified t)) . -599) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) 600) nil (26714 23491 626876 971000) 0 nil])
([nil nil ((598 . 609)) nil (26714 23491 626770 732000) 0 nil])
([nil nil ((609 . 612)) nil (26714 23491 626770 205000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -610) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (#(")" 0 1 (fontified t)) . -611) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) 612) nil (26714 23491 626767 996000) 0 nil])
([nil nil ((610 . 611)) nil (26714 23491 626730 247000) 0 nil])
([nil nil ((883 . 884) (t 26714 23491 644044 139000)) nil (26714 23867 845346 80000) 0 nil])
([nil nil ((884 . 885)) nil (26714 23867 845345 609000) 0 nil])
([nil nil ((885 . 886)) nil (26714 23867 845345 285000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -884) (undo-tree-id11297 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -885) (undo-tree-id11298 . -1) 886) nil (26714 23867 845344 228000) 0 nil])
([nil nil ((689 . 690)) nil (26714 23867 845342 363000) 0 nil])
([nil nil ((#("bin" 0 3 (face font-lock-function-name-face fontified t)) . -527) (undo-tree-id11296 . -3) 530) nil (26714 23867 845341 870000) 0 nil])
([nil nil ((527 . 534)) nil (26714 23867 845340 692000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -533) (undo-tree-id11295 . -1) 534) nil (26714 23867 845340 215000) 0 nil])
([nil nil ((533 . 534)) nil (26714 23867 845339 103000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -533) (undo-tree-id11294 . -1) 534) nil (26714 23867 845338 547000) 0 nil])
([nil nil ((#("bin" 0 3 (fontified t)) . -855) (undo-tree-id11293 . -3) 858) nil (26714 23867 845335 335000) 0 nil])
([nil nil ((855 . 862)) nil (26714 23867 845334 162000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -861) (undo-tree-id11292 . -1) 862) nil (26714 23867 845333 489000) 0 nil])
([nil nil ((693 . 694)) nil (26714 23867 845331 626000) 0 nil])
([nil nil ((694 . 695)) nil (26714 23867 845330 780000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -693) (undo-tree-id11291 . -1) 694) nil (26714 23867 845328 997000) 0 nil])
([nil nil ((693 . 694)) nil (26714 23867 845324 975000) 0 nil])
([nil nil ((694 . 713)) nil (26714 23867 845323 738000) 0 nil])
([nil nil ((713 . 718)) nil (26714 23867 845322 333000) 0 nil])
([nil nil ((718 . 729)) nil (26714 23867 845321 62000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -728) (undo-tree-id11290 . -1) 729) nil (26714 23867 845319 496000) 0 nil])
([nil nil ((728 . 730)) nil (26714 23867 845315 576000) 0 nil])
([nil nil ((#("sum([" 0 3 (face font-lock-builtin-face fontified t) 3 5 (fontified t)) . -725) (undo-tree-id11289 . -5) 730) nil (26714 23867 845313 992000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -718) (undo-tree-id11288 . -7) 725) nil (26714 23867 845310 515000) 0 nil])
([nil nil ((718 . 736)) nil (26714 23867 845301 229000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -734) (undo-tree-id11286 . -1) (#("M" 0 1 (fontified t)) . -735) (undo-tree-id11287 . -1) 736) nil (26714 23867 845300 608000) 0 nil])
([nil nil ((734 . 736)) nil (26714 23867 845298 942000) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-operator-face fontified t)) . -734) (undo-tree-id11284 . -1) (#("<" 0 1 (face font-lock-operator-face fontified t)) . -735) (undo-tree-id11285 . -1) 736) nil (26714 23867 845298 236000) 0 nil])
([nil nil ((734 . 739)) nil (26714 23867 845296 398000) 0 nil])
([nil nil ((739 . 742)) nil (26714 23867 845296 4000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -740) (undo-tree-id11282 . -1) (#(":" 0 1 (fontified t)) . -741) (undo-tree-id11283 . -1) 742) nil (26714 23867 845295 354000) 0 nil])
([nil nil ((740 . 741)) nil (26714 23867 845293 364000) 0 nil])
([nil nil ((741 . 750)) nil (26714 23867 845293 36000) 0 nil])
([nil nil ((750 . 755)) nil (26714 23867 845292 572000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -750) (undo-tree-id11277 . -1) (#(" " 0 1 (fontified t)) . -751) (undo-tree-id11278 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -752) (undo-tree-id11279 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -753) (undo-tree-id11280 . -1) (#(" " 0 1 (fontified t)) . -754) (undo-tree-id11281 . -1) 755) nil (26714 23867 845291 533000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -710) (undo-tree-id11276 . -1) 711) nil (26714 23867 845287 248000) 0 nil])
([nil nil ((710 . 711)) nil (26714 23867 845285 884000) 0 nil])
([nil nil ((750 . 759)) nil (26714 23867 845285 551000) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-operator-face fontified t)) . -735) (undo-tree-id11273 . -1) (#("<" 0 1 (face font-lock-operator-face fontified t)) . -736) (undo-tree-id11274 . -1) (#(" " 0 1 (fontified t)) . -737) (undo-tree-id11275 . -1) 738) nil (26714 23867 845284 597000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -733) (undo-tree-id11271 . -1) (#(" " 0 1 (fontified t)) . -734) (undo-tree-id11272 . -1) 735) nil (26714 23867 845281 18000) 0 nil])
([nil nil ((754 . 757)) nil (26714 23867 845279 338000) 0 nil])
([nil nil ((692 . 693)) nil (26714 23867 845279 20000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -692) (undo-tree-id11270 . -1) 693) nil (26714 23867 845278 447000) 0 nil])
([nil nil ((692 . 693)) nil (26714 23867 845277 381000) 0 nil])
([nil nil ((693 . 699)) nil (26714 23867 845277 60000) 0 nil])
([nil nil ((#("LSB " 0 4 (face font-lock-comment-face fontified t)) . -695) (undo-tree-id11269 . -4) 699) nil (26714 23867 845276 452000) 0 nil])
([nil nil ((695 . 709)) nil (26714 23867 845275 324000) 0 nil])
([nil nil ((#("into " 0 5 (face font-lock-comment-face fontified t)) . -704) (undo-tree-id11268 . -5) 709) nil (26714 23867 845274 775000) 0 nil])
([nil nil ((#("to " 0 3 (face font-lock-comment-face fontified t)) . -701) (undo-tree-id11267 . -3) 704) nil (26714 23867 845273 27000) 0 nil])
([nil nil ((#("Array " 0 6 (face font-lock-comment-face fontified t)) . -695) (undo-tree-id11266 . -6) 701) nil (26714 23867 845271 822000) 0 nil])
([nil nil ((695 . 699)) nil (26714 23867 845270 640000) 0 nil])
([nil nil ((699 . 700)) nil (26714 23867 845270 326000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-comment-face fontified t)) . -699) (undo-tree-id11265 . -1) 700) nil (26714 23867 845269 775000) 0 nil])
([nil nil ((699 . 702)) nil (26714 23867 845268 669000) 0 nil])
([nil nil ((#("Binrary" 0 7 (face font-lock-comment-face fontified t)) . -695) (undo-tree-id11264 . -7) 702) nil (26714 23867 845268 60000) 0 nil])
([nil nil ((695 . 716)) nil (26714 23867 845266 906000) 0 nil])
([nil nil ((716 . 727)) nil (26714 23867 845266 468000) 0 nil])
([nil nil ((792 . 796)) nil (26714 23867 845266 143000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -794) (undo-tree-id11262 . -1) (#("<" 0 1 (face font-lock-operator-face fontified t)) . -795) (undo-tree-id11263 . -1) 796) nil (26714 23867 845265 190000) 0 nil])
([nil nil ((794 . 798)) nil (26714 23867 845263 140000) 0 nil])
([nil nil ((798 . 807)) nil (26714 23867 845262 683000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -803) (undo-tree-id11261 . -4) 807) nil (26714 23867 845262 166000) 0 nil])
([nil nil ((748 . 753)) nil (26714 23867 845260 891000) 0 nil])
([nil nil ((753 . 756)) nil (26714 23867 845260 565000) 0 nil])
([nil nil ((#("ret" 0 3 (fontified t)) . -753) (undo-tree-id11260 . -3) 756) nil (26714 23867 845259 781000) 0 nil])
([nil nil ((753 . 758)) nil (26714 23867 845258 637000) 0 nil])
([nil nil ((813 . 821)) nil (26714 23867 845257 744000) 0 nil])
([nil nil ((748 . 753)) nil (26714 23867 845257 395000) 0 nil])
([nil nil ((753 . 761)) nil (26714 23867 845256 992000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -760) (undo-tree-id11259 . -1) 761) nil (26714 23867 845256 393000) 0 nil])
([nil nil ((760 . 765)) nil (26714 23867 845254 902000) 0 nil])
([nil nil ((765 . 786)) nil (26714 23867 845254 392000) 0 nil])
([nil nil ((786 . 795)) nil (26714 23867 845253 969000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -794) (undo-tree-id11258 . -1) 795) nil (26714 23867 845253 234000) 0 nil])
([nil nil ((794 . 796)) nil (26714 23867 845251 305000) 0 nil])
([nil nil ((#("    n = 0
    for i in range(8):
        n += A[i] * (1<<i)
    return n
" 0 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 9 (fontified t) 9 10 (fontified t) 10 14 (fontified t) 14 17 (face font-lock-keyword-face fontified t) 17 20 (fontified t) 20 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t) 23 28 (face font-lock-builtin-face fontified t) 28 29 (fontified t) 29 33 (fontified t) 33 41 (fontified t) 41 42 (face font-lock-variable-name-face fontified t) 42 43 (fontified t) 43 44 (face font-lock-operator-face fontified t) 44 45 (face font-lock-operator-face fontified t) 45 51 (fontified t) 51 52 (face font-lock-operator-face fontified t) 52 55 (fontified t) 55 57 (face font-lock-operator-face fontified t) 57 60 (fontified t) 60 64 (fontified t) 64 70 (face font-lock-keyword-face fontified t) 70 72 (fontified t) 72 73 (fontified t)) . -797) (undo-tree-id11235 . -10) (undo-tree-id11236 . -10) (undo-tree-id11237 . -10) (undo-tree-id11238 . -10) (undo-tree-id11239 . -10) (undo-tree-id11240 . -10) (undo-tree-id11241 . -33) (undo-tree-id11242 . -33) (undo-tree-id11243 . -33) (undo-tree-id11244 . -33) (undo-tree-id11245 . -33) (undo-tree-id11246 . -60) (undo-tree-id11247 . -60) (undo-tree-id11248 . -60) (undo-tree-id11249 . -60) (undo-tree-id11250 . -60) (undo-tree-id11251 . -73) (undo-tree-id11252 . -73) (undo-tree-id11253 . -73) (undo-tree-id11254 . -73) (undo-tree-id11255 . -73) (undo-tree-id11256 . -73) (undo-tree-id11257 . -73) 870) nil (26714 23867 845247 174000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -993) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) 994 (t 26714 23867 862164 342000)) nil (26714 24081 653574 195000) 0 nil])
([nil nil ((1067 . 1075)) nil (26714 24081 653570 494000) 0 nil])
([nil nil ((1075 . 1080)) nil (26714 24081 653570 115000) 0 nil])
([nil nil ((1080 . 1091)) nil (26714 24081 653569 781000) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -1088) (undo-tree-id11441 . -3) 1091) nil (26714 24081 653569 147000) 0 nil])
([nil nil ((#("str_" 0 4 (fontified t)) . -1084) (undo-tree-id11440 . -4) 1088) nil (26714 24081 653567 79000) 0 nil])
([nil nil ((1084 . 1099)) nil (26714 24081 653566 15000) 0 nil])
([nil nil ((1099 . 1102)) nil (26714 24081 653565 670000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1099) (undo-tree-id11437 . -1) (#("1" 0 1 (fontified t)) . -1100) (undo-tree-id11438 . -1) (#("0" 0 1 (fontified t)) . -1101) (undo-tree-id11439 . -1) 1102) nil (26714 24081 653564 828000) 0 nil])
([nil nil ((1099 . 1100)) nil (26714 24081 653562 466000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1099) (undo-tree-id11436 . -1) 1100) nil (26714 24081 653562 17000) 0 nil])
([nil nil ((1099 . 1101)) nil (26714 24081 653560 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1100) (undo-tree-id11435 . -1) 1101) nil (26714 24081 653560 451000) 0 nil])
([nil nil ((1100 . 1102)) nil (26714 24081 653559 343000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -1100) (undo-tree-id11433 . -1) (#("(" 0 1 (fontified t)) . -1101) (undo-tree-id11434 . -1) 1102) nil (26714 24081 653558 819000) 0 nil])
([nil nil ((1100 . 1104)) nil (26714 24081 653557 83000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1103) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) 1104) nil (26714 24081 653556 396000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1101) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (#("i" 0 1 (fontified t)) . -1102) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) 1103) nil (26714 24081 653550 588000) 0 nil])
([nil nil ((1101 . 1115)) nil (26714 24081 653529 478000) 0 nil])
([nil nil ((1115 . 1124)) nil (26714 24081 653529 61000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1120) (undo-tree-id11382 . -4) (undo-tree-id11383 . -4) (undo-tree-id11384 . -4) (undo-tree-id11385 . -4) (undo-tree-id11386 . -4) (undo-tree-id11387 . -4) (undo-tree-id11388 . -4) (undo-tree-id11389 . -4) (undo-tree-id11390 . -4) (undo-tree-id11391 . -4) (undo-tree-id11392 . -4) (undo-tree-id11393 . -4) (undo-tree-id11394 . -4) (undo-tree-id11395 . -4) (undo-tree-id11396 . -4) 1124) nil (26714 24081 653528 58000) 0 nil])
([nil nil ((1120 . 1128)) nil (26714 24081 653515 119000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1101) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) 1102) nil (26714 24081 653512 902000) 0 nil])
([nil nil ((1101 . 1106)) nil (26714 24081 653452 578000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1112) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) 1113) nil (26714 24081 653451 249000) 0 nil])
([nil nil ((1112 . 1117)) nil (26714 24081 653433 965000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 4917) (undo-tree-id11484 . -4) (undo-tree-id11485 . -4) (undo-tree-id11486 . -4) (undo-tree-id11487 . -4) (undo-tree-id11488 . -4) (undo-tree-id11489 . -4) (t 26714 24081 670816 143000)) nil (26714 24200 367438 493000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4917) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1)) nil (26714 24200 367433 39000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4917) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1)) nil (26714 24200 367428 176000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 4917) (undo-tree-id11466 . -4) (undo-tree-id11467 . -4) (undo-tree-id11468 . -4) (undo-tree-id11469 . -4) (undo-tree-id11470 . -4) (undo-tree-id11471 . -4)) nil (26714 24200 367423 605000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4917) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1)) nil (26714 24200 367418 645000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 4917) (undo-tree-id11454 . -4) (undo-tree-id11455 . -4) (undo-tree-id11456 . -4) (undo-tree-id11457 . -4) (undo-tree-id11458 . -4) (undo-tree-id11459 . -4)) nil (26714 24200 367411 783000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4917) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1)) nil (26714 24200 367406 835000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4917) (undo-tree-id11447 . -1)) nil (26714 24200 367400 285000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4917) (undo-tree-id11446 . -1)) nil (26714 24200 367395 166000) 0 nil])
([nil nil ((#("this." 0 5 (face font-lock-comment-face fontified t)) . -4733) (undo-tree-id11509 . -5) (undo-tree-id11510 . -5) (undo-tree-id11511 . -5) (undo-tree-id11512 . -5) (undo-tree-id11513 . -5) (undo-tree-id11514 . -5) (undo-tree-id11515 . -5) 4738 (t 26714 24200 384114 695000)) nil (26714 24220 604215 97000) 0 nil])
([nil nil ((#("fix " 0 4 (face font-lock-comment-face fontified t)) . -4729) (undo-tree-id11496 . -4) (undo-tree-id11497 . -4) (undo-tree-id11498 . -4) (undo-tree-id11499 . -4) (undo-tree-id11500 . -4) (undo-tree-id11501 . -4) (undo-tree-id11502 . -4) (undo-tree-id11503 . -4) (undo-tree-id11504 . -4) (undo-tree-id11505 . -4) (undo-tree-id11506 . -4) (undo-tree-id11507 . -4) (undo-tree-id11508 . -4) 4733) nil (26714 24220 604207 240000) 0 nil])
([nil nil ((4729 . 4750)) nil (26714 24220 604192 224000) 0 nil])
([nil nil ((4750 . 4751)) nil (26714 24220 604191 230000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-comment-face fontified t)) . -4750) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) 4751) nil (26714 24220 604187 65000) 0 nil])
([nil nil ((994 . 995) (t 26714 24220 624249 638000)) nil (26714 24341 25927 846000) 0 nil])
([nil nil ((995 . 996)) nil (26714 24341 25927 381000) 0 nil])
([nil nil ((858 . 859)) nil (26714 24341 25926 971000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -858) (undo-tree-id11531 . -1) 859) nil (26714 24341 25926 462000) 0 nil])
([nil nil ((996 . 998)) nil (26714 24341 25925 129000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-comment-face fontified t)) . -997) (undo-tree-id11530 . -1) 998) nil (26714 24341 25924 715000) 0 nil])
([nil nil ((997 . 1013)) nil (26714 24341 25923 419000) 0 nil])
([nil nil ((#("string" 0 6 (face font-lock-comment-face fontified t)) . -1007) (undo-tree-id11529 . -6) 1013) nil (26714 24341 25922 780000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -1005) (undo-tree-id11527 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1006) (undo-tree-id11528 . -1) 1007) nil (26714 24341 25921 308000) 0 nil])
([nil nil ((1005 . 1007)) nil (26714 24341 25918 911000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1006) (undo-tree-id11526 . -1) 1007) nil (26714 24341 25918 287000) 0 nil])
([nil nil ((1006 . 1019)) nil (26714 24341 25917 54000) 0 nil])
([nil nil ((#("array" 0 5 (face font-lock-comment-face fontified t)) . -1014) (undo-tree-id11525 . -5) 1019) nil (26714 24341 25916 440000) 0 nil])
([nil nil ((#("binary " 0 7 (face font-lock-comment-face fontified t)) . -1007) (undo-tree-id11524 . -7) 1014) nil (26714 24341 25911 720000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1006) (undo-tree-id11523 . -1) 1007) nil (26714 24341 25910 262000) 0 nil])
([nil nil ((1006 . 1010)) nil (26714 24341 25909 27000) 0 nil])
([nil nil ((1010 . 1019)) nil (26714 24341 25908 595000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -1018) (undo-tree-id11522 . -1) 1019) nil (26714 24341 25907 970000) 0 nil])
([nil nil ((1018 . 1024)) nil (26714 24341 25906 565000) 0 nil])
([nil nil ((#("binary " 0 7 (face font-lock-comment-face fontified t)) . -1017) (undo-tree-id11521 . -7) 1024) nil (26714 24341 25905 887000) 0 nil])
([nil nil ((1017 . 1020)) nil (26714 24341 25904 501000) 0 nil])
([nil nil ((#("bin" 0 3 (face font-lock-comment-face fontified t)) . -1017) (undo-tree-id11520 . -3) 1020) nil (26714 24341 25903 935000) 0 nil])
([nil nil ((#("of " 0 3 (face font-lock-comment-face fontified t)) . -1014) (undo-tree-id11519 . -3) 1017) nil (26714 24341 25902 343000) 0 nil])
([nil nil ((#("array " 0 6 (face font-lock-comment-face fontified t)) . -1008) (undo-tree-id11518 . -6) 1014) nil (26714 24341 25900 959000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -1006) (undo-tree-id11516 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1007) (undo-tree-id11517 . -1) 1008) nil (26714 24341 25898 636000) 0 nil])
([nil nil ((1006 . 1025)) nil (26714 24341 25889 98000) 0 nil])
([nil nil ((1025 . 1034)) nil (26714 24341 25884 774000) 0 nil])
([nil nil ((1177 . 1178) (t 26714 24341 43445 463000)) nil (26714 24405 428374 580000) 0 nil])
([nil nil ((1178 . 1181)) nil (26714 24405 428374 114000) 0 nil])
([nil nil ((#("X" 0 1 (face font-lock-comment-face fontified t)) . -1180) (undo-tree-id11666 . -1) 1181) nil (26714 24405 428373 438000) 0 nil])
([nil nil ((1180 . 1201)) nil (26714 24405 428372 232000) 0 nil])
([nil nil ((1201 . 1210)) nil (26714 24405 428371 742000) 0 nil])
([nil nil ((#("elements" 0 8 (face font-lock-comment-face fontified t)) . -1193) (undo-tree-id11665 . -8) 1201) nil (26714 24405 428371 260000) 0 nil])
([nil nil ((1193 . 1197)) nil (26714 24405 428370 127000) 0 nil])
([nil nil ((1288 . 1289)) nil (26714 24405 428369 770000) 0 nil])
([nil nil ((1289 . 1292)) nil (26714 24405 428369 323000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . -1291) (undo-tree-id11664 . -1) 1292) nil (26714 24405 428368 816000) 0 nil])
([nil nil ((1291 . 1295)) nil (26714 24405 428367 672000) 0 nil])
([nil nil ((1295 . 1298)) nil (26714 24405 428367 320000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -1296) (undo-tree-id11662 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1297) (undo-tree-id11663 . -1) 1298) nil (26714 24405 428366 618000) 0 nil])
([nil nil ((1296 . 1317)) nil (26714 24405 428364 826000) 0 nil])
([nil nil ((1317 . 1319)) nil (26714 24405 428364 380000) 0 nil])
([nil nil ((#("togehter" 0 8 (face font-lock-comment-face fontified t)) . -1311) (undo-tree-id11661 . -8) 1319) nil (26714 24405 428363 708000) 0 nil])
([nil nil ((1311 . 1319)) nil (26714 24405 428362 505000) 0 nil])
([nil nil ((1319 . 1320)) nil (26714 24405 428362 103000) 0 nil])
([nil nil ((1320 . 1340)) nil (26714 24405 428361 705000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -1339) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) 1340) nil (26714 24405 428361 69000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -1338) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) 1339) nil (26714 24405 428356 89000) 0 nil])
([nil nil ((1338 . 1359)) nil (26714 24405 428343 96000) 0 nil])
([nil nil ((1359 . 1365)) nil (26714 24405 428342 755000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1364) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) 1365) nil (26714 24405 428341 971000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -1363) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) 1364) nil (26714 24405 428333 67000) 0 nil])
([nil nil ((1363 . 1365)) nil (26714 24405 428295 322000) 0 nil])
([nil nil ((#("ha" 0 2 (face font-lock-comment-face fontified t)) . -1363) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -2) (undo-tree-id11600 . -2) (undo-tree-id11601 . -2) (undo-tree-id11602 . -2) (undo-tree-id11603 . -2) (undo-tree-id11604 . -2) 1365) nil (26714 24405 428294 448000) 0 nil])
([nil nil ((#("don'" 0 4 (face font-lock-comment-face fontified t)) . -1359) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -2) (undo-tree-id11538 . -2) (undo-tree-id11539 . -2) (undo-tree-id11540 . -2) (undo-tree-id11541 . -2) (undo-tree-id11542 . -3) (undo-tree-id11543 . -3) (undo-tree-id11544 . -3) (undo-tree-id11545 . -3) (undo-tree-id11546 . -3) (undo-tree-id11547 . -4) (undo-tree-id11548 . -4) (undo-tree-id11549 . -4) (undo-tree-id11550 . -4) (undo-tree-id11551 . -4) (undo-tree-id11552 . -4) (undo-tree-id11553 . -4) (undo-tree-id11554 . -4) (undo-tree-id11555 . -4) (undo-tree-id11556 . -4) (undo-tree-id11557 . -4) (undo-tree-id11558 . -4) (undo-tree-id11559 . -4) (undo-tree-id11560 . -4) (undo-tree-id11561 . -4) (undo-tree-id11562 . -4) (undo-tree-id11563 . -4) (undo-tree-id11564 . -4) (undo-tree-id11565 . -4) (undo-tree-id11566 . -4) (undo-tree-id11567 . -4) (undo-tree-id11568 . -4) (undo-tree-id11569 . -4) (undo-tree-id11570 . -4) (undo-tree-id11571 . -4) (undo-tree-id11572 . -4) (undo-tree-id11573 . -4) (undo-tree-id11574 . -4) (undo-tree-id11575 . -4) (undo-tree-id11576 . -4) (undo-tree-id11577 . -4) (undo-tree-id11578 . -4) (undo-tree-id11579 . -4) (undo-tree-id11580 . -4) (undo-tree-id11581 . -4) (undo-tree-id11582 . -4) (undo-tree-id11583 . -4) (undo-tree-id11584 . -4) (undo-tree-id11585 . -4) (undo-tree-id11586 . -4) (undo-tree-id11587 . -4) (undo-tree-id11588 . -4) (undo-tree-id11589 . -4) (undo-tree-id11590 . -4) (undo-tree-id11591 . -4) (undo-tree-id11592 . -4) (undo-tree-id11593 . -4) 1363) nil (26714 24405 428285 552000) 0 nil])
([nil nil ((1359 . 1380)) nil (26714 24405 428225 835000) 0 nil])
([nil nil ((1380 . 1384)) nil (26714 24405 428221 268000) 0 nil])
([nil nil ((4634 . 4635) (t 26714 24405 446416 582000)) nil (26714 24755 611597 635000) 0 nil])
([nil nil ((4635 . 4656)) nil (26714 24755 611597 144000) 0 nil])
([nil nil ((4656 . 4657)) nil (26714 24755 611596 501000) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -4656) (undo-tree-id11688 . -1) 4657) nil (26714 24755 611596 22000) 0 nil])
([nil nil ((4656 . 4659)) nil (26714 24755 611595 29000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-comment-face fontified t)) . -4650) (undo-tree-id11687 . -1) 4651) nil (26714 24755 611594 426000) 0 nil])
([nil nil ((4650 . 4651)) nil (26714 24755 611593 358000) 0 nil])
([nil nil ((4659 . 4663)) nil (26714 24755 611592 955000) 0 nil])
([nil nil ((4663 . 4672)) nil (26714 24755 611592 632000) 0 nil])
([nil nil ((5132 . 5133)) nil (26714 24755 611592 149000) 0 nil])
([nil nil ((5133 . 5134)) nil (26714 24755 611591 798000) 0 nil])
([nil nil ((5133 . 5149)) nil (26714 24755 611591 382000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -5146) (undo-tree-id11684 . -1) (#(")" 0 1 (fontified t)) . -5147) (undo-tree-id11685 . -1) (#(":" 0 1 (fontified t)) . -5148) (undo-tree-id11686 . -1) 5149) nil (26714 24755 611590 166000) 0 nil])
([nil nil ((5146 . 5149)) nil (26714 24755 611587 715000) 0 nil])
([nil nil ((5149 . 5154)) nil (26714 24755 611587 344000) 0 nil])
([nil nil ((5154 . 5172)) nil (26714 24755 611586 934000) 0 nil])
([nil nil ((#("M + " 0 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -5168) (undo-tree-id11683 . -4) 5172) nil (26714 24755 611586 200000) 0 nil])
([nil nil ((5168 . 5174)) nil (26714 24755 611584 989000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -5173) (undo-tree-id11682 . -1) 5174) nil (26714 24755 611584 398000) 0 nil])
([nil nil ((4702 . 4715)) nil (26714 24755 611582 941000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4716) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -4717) (undo-tree-id11681 . -1) 4718) nil (26714 24755 611582 78000) 0 nil])
([nil nil ((4716 . 4718)) nil (26714 24755 611576 363000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4717) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) 4718) nil (26714 24755 611575 524000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4741) (undo-tree-id11667 . -1) 4742) nil (26714 24755 611566 489000) 0 nil])
([nil nil ((4741 . 4743)) nil (26714 24755 611554 349000) 0 nil])
([nil nil ((#("M + [" 0 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 5 (fontified t)) . -5181) (undo-tree-id11770 . -5) 5186 (t 26714 24755 630586 437000)) nil (26714 24840 968979 212000) 0 nil])
([nil nil ((5181 . 5182)) nil (26714 24840 968978 27000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -5181) (undo-tree-id11769 . -1) 5182) nil (26714 24840 968977 462000) 0 nil])
([nil nil ((5181 . 5202)) nil (26714 24840 968975 665000) 0 nil])
([nil nil ((5202 . 5203)) nil (26714 24840 968975 223000) 0 nil])
([nil nil ((5203 . 5210)) nil (26714 24840 968974 879000) 0 nil])
([nil nil ((5145 . 5146)) nil (26714 24840 968974 348000) 0 nil])
([nil nil ((5163 . 5164)) nil (26714 24840 968973 865000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -5163) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) 5164) nil (26714 24840 968972 700000) 0 nil])
([nil nil ((5163 . 5168)) nil (26714 24840 968967 805000) 0 nil])
([nil nil ((5168 . 5179)) nil (26714 24840 968967 375000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5164) (undo-tree-id11754 . -4) (undo-tree-id11755 . -4) (undo-tree-id11756 . -4) (undo-tree-id11757 . -4) (undo-tree-id11758 . -4) (undo-tree-id11759 . -4) (undo-tree-id11760 . -4) (undo-tree-id11761 . -4) 5179) nil (26714 24840 968966 661000) 0 nil])
([nil nil ((5164 . 5168) 5175) nil (26714 24840 968959 426000) 0 nil])
([nil nil ((5179 . 5185)) nil (26714 24840 968959 1000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -5184) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) 5185) nil (26714 24840 968958 311000) 0 nil])
([nil nil ((5184 . 5187)) nil (26714 24840 968954 153000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -5219) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) 5220) nil (26714 24840 968953 399000) 0 nil])
([nil nil ((5219 . 5220)) nil (26714 24840 968948 672000) 0 nil])
([nil nil ((5235 . 5236)) nil (26714 24840 968948 131000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -5192) (undo-tree-id11741 . -7) 5199) nil (26714 24840 968947 467000) 0 nil])
([nil nil ((5192 . 5193)) nil (26714 24840 968946 222000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5192) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) 5193) nil (26714 24840 968945 581000) 0 nil])
([nil nil ((5192 . 5197)) nil (26714 24840 968939 46000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -5196) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) 5197) nil (26714 24840 968938 326000) 0 nil])
([nil nil ((5232 . 5237)) nil (26714 24840 968934 69000) 0 nil])
([nil nil ((5237 . 5246)) nil (26714 24840 968933 669000) 0 nil])
([nil nil ((#("in" 0 2 (face font-lock-keyword-face fontified t)) . -5244) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -2) (undo-tree-id11716 . -2) (undo-tree-id11717 . -2) (undo-tree-id11718 . -2) (undo-tree-id11719 . -2) (undo-tree-id11720 . -2) (undo-tree-id11721 . -2) (undo-tree-id11722 . -2) (undo-tree-id11723 . -2) (undo-tree-id11724 . -2) (undo-tree-id11725 . -2) 5246) nil (26714 24840 968932 823000) 0 nil])
([nil nil ((5244 . 5247)) nil (26714 24840 968921 67000) 0 nil])
([nil nil ((#("str" 0 3 (face font-lock-builtin-face fontified t)) . -5244) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -2) (undo-tree-id11695 . -2) (undo-tree-id11696 . -2) (undo-tree-id11697 . -2) (undo-tree-id11698 . -2) (undo-tree-id11699 . -3) (undo-tree-id11700 . -3) (undo-tree-id11701 . -3) (undo-tree-id11702 . -3) (undo-tree-id11703 . -3) (undo-tree-id11704 . -3) (undo-tree-id11705 . -3) (undo-tree-id11706 . -3) (undo-tree-id11707 . -3) (undo-tree-id11708 . -3) (undo-tree-id11709 . -3) 5247) nil (26714 24840 968919 755000) 0 nil])
([nil nil ((5244 . 5256)) nil (26714 24840 968893 386000) 0 nil])
([nil nil ((5256 . 5259)) nil (26714 24840 968888 719000) 0 nil])
([nil nil ((#("keccak(numpy.append(A, [0, 1]), 224)" 0 36 (fontified t)) . 5196) (t 26714 24840 989243 580000)) nil (26714 25222 882738 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5231 . 5232) (nil fontified nil 5196 . 5232) (5196 . 5232)) nil (26714 25222 882737 433000) 0 nil])
([nil nil ((5231 . 5236)) nil (26714 25222 882736 846000) 0 nil])
([nil nil ((#("keccak(numpy.append(A, [0, 1]), 224, 448)" 0 40 (fontified t) 40 41 (rear-nonsticky t fontified t)) . 5196)) nil (26714 25222 882735 891000) 0 nil])
([nil nil ((nil fontified nil 5236 . 5237) (nil fontified nil 5196 . 5236) (5196 . 5237)) nil (26714 25222 882874 527000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5080) (#("        " 0 4 (fontified nil) 4 8 (fontified nil)) . -5064) (5060 . 5064) (#("        " 0 4 (fontified nil) 4 8 (fontified nil)) . -5044) (5040 . 5044) (#("    " 0 4 (fontified t)) . -5022) (#("    " 0 4 (fontified t)) . -5005) (#("        " 0 4 (fontified nil) 4 8 (fontified nil)) . -4943) (4939 . 4943) (#("        " 0 4 (fontified nil) 4 8 (fontified nil)) . -4909) (4905 . 4909) (#("    " 0 4 (fontified t)) . -4886) (#("    " 0 4 (fontified t)) . -4851) (#("        " 0 4 (fontified nil) 4 8 (fontified nil)) . -4795) (4791 . 4795) (#("    " 0 4 (fontified t)) . -4765) (#("    " 0 4 (fontified t)) . -4740) (#("    " 0 4 (fontified t)) . -4694)) nil (26714 25390 123036 449000) 0 nil] [nil nil ((apply -26 4694 5172 undo--wrap-and-run-primitive-undo 4694 5172 ((5156 . 5158) (5130 . 5132) (5104 . 5106) (5080 . 5082) (5057 . 5059) (4985 . 4987) (4945 . 4947) (4920 . 4922) (4879 . 4881) (4813 . 4815) (4781 . 4783) (4750 . 4752) (4698 . 4700) 5145))) ((apply 26 4694 5146 undo--wrap-and-run-primitive-undo 4694 5146 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4698) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4750) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4781) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4813) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4879) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4920) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4945) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 4985) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 5057) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 5080) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 5104) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 5130) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 5156) 5171))) (26714 25222 882730 802000) 0 nil])
([nil nil ((4960 . 4973)) nil (26714 25390 123029 104000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -4985) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (undo-tree-id11981 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -4986) (undo-tree-id11982 . -1) 4987) nil (26714 25390 123026 387000) 0 nil])
([nil nil ((4985 . 4986)) nil (26714 25390 123010 508000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5014) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (#(")" 0 1 (fontified t)) . -5015) (undo-tree-id11975 . -1) 5016) nil (26714 25390 123007 728000) 0 nil])
([nil nil ((5014 . 5017)) nil (26714 25390 122991 505000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -4973) (undo-tree-id11968 . -1) 4974) nil (26714 25390 122989 295000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5012) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (#(")" 0 1 (fontified t)) . -5013) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (#(")" 0 1 (fontified t)) . -5014) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (#(")" 0 1 (fontified t)) . -5015) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) 5016) nil (26714 25411 441940 768000) 0 nil])
([nil nil ((5012 . 5015)) ((#(")))" 0 3 (fontified t)) . 5012) (t 26714 25390 141558 921000)) (26714 25412 98467 177000) 0 nil])
([nil nil ((5139 . 5143) (#("    " 0 4 (fontified nil)) . -5123) (5115 . 5123) (#("    " 0 4 (fontified nil)) . -5099) (5091 . 5099) (5069 . 5073) (5048 . 5052) (#("    " 0 4 (fontified nil)) . -4975) (4967 . 4975) (#("    " 0 4 (fontified nil)) . -4937) (4929 . 4937) (4906 . 4910) (4867 . 4871) (#("    " 0 4 (fontified nil)) . -4811) (4803 . 4811) (4773 . 4777) (4744 . 4748) (4694 . 4698) 5104 (t 26714 25390 141558 921000)) nil (26714 25417 176016 155000) 0 nil])
([nil nil ((5272 . 5275) (t 26714 25417 200183 529000)) nil (26714 25513 250137 489000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5274) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) 5275 (t 26714 25513 268362 909000)) nil (26714 25514 858512 252000) 0 nil])
([nil nil ((5274 . 5275)) nil (26714 25514 858483 385000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5091) (#("        " 0 8 (fontified nil)) . -5075) (5071 . 5075) (#("        " 0 8 (fontified nil)) . -5055) (5051 . 5055) (#("    " 0 4 (fontified t)) . -5033) (#("    " 0 4 (fontified t)) . -5016) (#("        " 0 8 (fontified nil)) . -4943) (4939 . 4943) (#("        " 0 8 (fontified nil)) . -4909) (4905 . 4909) (#("    " 0 4 (fontified t)) . -4886) (#("    " 0 4 (fontified t)) . -4851) (#("        " 0 8 (fontified nil)) . -4795) (4791 . 4795) (#("    " 0 4 (fontified t)) . -4765) (#("    " 0 4 (fontified t)) . -4740) (#("    " 0 4 (fontified t)) . -4694) (t 26714 25514 879398 990000)) nil (26714 25640 922376 315000) 0 nil])
([nil nil ((5139 . 5143) (#("    " 0 4 (fontified nil)) . -5123) (5115 . 5123) (#("    " 0 4 (fontified nil)) . -5099) (5091 . 5099) (5069 . 5073) (5048 . 5052) (#("    " 0 4 (fontified nil)) . -4975) (4967 . 4975) (#("    " 0 4 (fontified nil)) . -4937) (4929 . 4937) (4906 . 4910) (4867 . 4871) (#("    " 0 4 (fontified nil)) . -4811) (4803 . 4811) (4773 . 4777) (4744 . 4748) (4694 . 4698) 5104) nil (26714 25768 982231 568000) 0 nil] [nil nil ((#("K = keccak(numpy.append(A, [0, 1]), 224, 448)" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t) 4 44 (fontified t) 44 45 (fontified t rear-nonsticky t)) . 5151) (undo-tree-id11996 . -4) (undo-tree-id11997 . -4) (undo-tree-id11998 . -45) (undo-tree-id11999 . -45) (undo-tree-id12000 . -45) (undo-tree-id12001 . -45) (undo-tree-id12002 . -45) (undo-tree-id12003 . -45)) ((5151 . 5196)) (26714 25640 922297 30000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -5272) (undo-tree-id12007 . -1) (#("n" 0 1 (fontified t)) . -5273) (undo-tree-id12008 . -1) (#("g" 0 1 (fontified t)) . -5274) (undo-tree-id12009 . -1) 5275 (t 26714 25769 1935 284000)) nil (26714 25939 883244 687000) 0 nil])
nil
([nil nil ((#("ing" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t)) . 1051) (undo-tree-id12010 . -3) (undo-tree-id12011 . -3) (undo-tree-id12012 . -3) (undo-tree-id12013 . -3) (undo-tree-id12014 . -3) (undo-tree-id12015 . -3) (undo-tree-id12016 . -3) (undo-tree-id12017 . -3) (undo-tree-id12018 . -3) (undo-tree-id12019 . -3) (undo-tree-id12020 . -3) (undo-tree-id12021 . -3) (undo-tree-id12022 . -3) (undo-tree-id12023 . -3) (undo-tree-id12024 . -3) (undo-tree-id12025 . -3) (undo-tree-id12026 . -3) (undo-tree-id12027 . -3)) ((1051 . 1054) (t 26714 25864 752957 608000)) (26714 25940 680446 3000) 0 nil])
([nil nil ((#("# TODO: sponge
# def sponge(f, pd, r
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 5 (face font-lock-comment-face fontified t) 5 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 17 (face font-lock-comment-delimiter-face fontified t) 17 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 27 (face font-lock-comment-face fontified t) 27 36 (face font-lock-comment-face fontified t) 36 37 (face font-lock-comment-face fontified t)) . -5525) (undo-tree-id12121 . -37) (undo-tree-id12122 . -37) (undo-tree-id12123 . -37) (undo-tree-id12124 . -37) (undo-tree-id12125 . -37) (undo-tree-id12126 . -37) (undo-tree-id12127 . -37) (undo-tree-id12128 . -37) (undo-tree-id12129 . -37) (undo-tree-id12130 . -37) (undo-tree-id12131 . -37) (undo-tree-id12132 . -37) (undo-tree-id12133 . -37) (undo-tree-id12134 . -37) (undo-tree-id12135 . -37) (undo-tree-id12136 . -37) (undo-tree-id12137 . -15) (undo-tree-id12138 . -15) (undo-tree-id12139 . -15) (undo-tree-id12140 . -15) (undo-tree-id12141 . -15) (undo-tree-id12142 . -15) (undo-tree-id12143 . -37) (undo-tree-id12144 . -37) (undo-tree-id12145 . -37) (undo-tree-id12146 . -37) (undo-tree-id12147 . -37) (undo-tree-id12148 . -37) (undo-tree-id12149 . -37) (undo-tree-id12150 . -37) (undo-tree-id12151 . -37) (undo-tree-id12152 . -37) (undo-tree-id12153 . -37) (undo-tree-id12154 . -37) (undo-tree-id12155 . -37) (undo-tree-id12156 . -37) (undo-tree-id12157 . -37) (undo-tree-id12158 . -37) (undo-tree-id12159 . -37) (undo-tree-id12160 . -37) (undo-tree-id12161 . -37) (undo-tree-id12162 . -37) (undo-tree-id12163 . -37) (undo-tree-id12164 . -15) (undo-tree-id12165 . -15) (undo-tree-id12166 . -15) (undo-tree-id12167 . -15) (undo-tree-id12168 . -15) (undo-tree-id12169 . -15) (undo-tree-id12170 . -15) (undo-tree-id12171 . -15) (undo-tree-id12172 . -15) (undo-tree-id12173 . -15) (undo-tree-id12174 . -15) (undo-tree-id12175 . -15) (undo-tree-id12176 . -15) (undo-tree-id12177 . -37) (undo-tree-id12178 . -37) (undo-tree-id12179 . -37) (undo-tree-id12180 . -37) (undo-tree-id12181 . -37) (undo-tree-id12182 . -37) (undo-tree-id12183 . -37) 5562 (t 26714 25864 752957 608000)) nil (26714 26006 388810 192000) 0 nil] [nil nil ((#("        " 0 8 (fontified nil)) . -5072) (5068 . 5072) (#("        " 0 8 (fontified nil)) . -5052) (5048 . 5052) (#("    " 0 4 (fontified t)) . -5030) (#("    " 0 4 (fontified t)) . -5013) (#("        " 0 8 (fontified nil)) . -4940) (4936 . 4940) (#("        " 0 8 (fontified nil)) . -4906) (4902 . 4906) (#("    " 0 4 (fontified t)) . -4883) (#("    " 0 4 (fontified t)) . -4848) (#("        " 0 8 (fontified nil)) . -4792) (4788 . 4792) (#("    " 0 4 (fontified t)) . -4762) (#("    " 0 4 (fontified t)) . -4737) (#("    " 0 4 (fontified t)) . -4691) (t 26714 25864 752957 608000)) ((4691 . 4695) (4737 . 4741) (4762 . 4766) (#("    " 0 4 (fontified nil)) . 4788) (4792 . 4800) (4848 . 4852) (4883 . 4887) (#("    " 0 4 (fontified nil)) . 4902) (4906 . 4914) (#("    " 0 4 (fontified nil)) . 4936) (4940 . 4948) (5013 . 5017) (5030 . 5034) (#("    " 0 4 (fontified nil)) . 5048) (5052 . 5060) (#("    " 0 4 (fontified nil)) . 5068) (5072 . 5080)) (26714 25939 713375 406000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5524) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) 5525) nil (26714 26006 388759 973000) 0 nil])
nil
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -5284) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) 5285 (t 26714 26006 407903 362000)) nil (26714 26479 124810 448000) 0 nil])
([nil nil ((5284 . 5293)) nil (26714 26479 124807 897000) 0 nil])
([nil nil ((5492 . 5494)) nil (26714 26479 124807 391000) 0 nil])
([nil nil ((apply -14 5294 5548 undo--wrap-and-run-primitive-undo 5294 5548 ((5522 . 5524) (5483 . 5485) (5468 . 5470) (5431 . 5433) (5383 . 5385) (5357 . 5359) (5294 . 5296)))) nil (26714 26479 124806 856000) 0 nil])
([nil nil ((5548 . 5562)) nil (26714 26479 124806 298000) 0 nil])
([nil nil ((#("KECC" 0 4 (face font-lock-comment-face fontified t)) . -5558) (undo-tree-id12205 . -4) 5562) nil (26714 26479 124805 628000) 0 nil])
([nil nil ((5558 . 5562)) nil (26714 26479 124803 457000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-comment-face fontified t)) . -5561) (undo-tree-id12204 . -1) 5562) nil (26714 26479 124802 361000) 0 nil])
([nil nil ((5561 . 5566)) nil (26714 26479 124800 428000) 0 nil])
([nil nil ((#("    return array_to_str(K)" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 26 (fontified t)) . 5246) (undo-tree-id12184 . -26) (undo-tree-id12185 . -23) (undo-tree-id12186 . -26) (undo-tree-id12187 . -26) (undo-tree-id12188 . -26) (undo-tree-id12189 . -26) (undo-tree-id12190 . -26) (undo-tree-id12191 . -26) (undo-tree-id12192 . -26) (undo-tree-id12193 . -26) (undo-tree-id12194 . -26) (undo-tree-id12195 . -26) (undo-tree-id12196 . -26) (undo-tree-id12197 . -26) (undo-tree-id12198 . -26) (undo-tree-id12199 . -26) (undo-tree-id12200 . -26) (undo-tree-id12201 . -26) (undo-tree-id12202 . -26) (undo-tree-id12203 . -26)) nil (26714 26479 124798 634000) 0 nil])
([nil nil ((5246 . 5250)) nil (26714 26479 124767 708000) 0 nil])
([nil nil ((5544 . 5545) 5250) nil (26714 26479 124762 384000) 0 nil])
([nil nil ((5250 . 5258) (t 26714 26479 144476 325000)) nil (26714 26481 153939 984000) 0 nil])
([nil nil ((5553 . 5554) (t 26714 26481 173516 845000)) nil (26715 9043 214368 97000) 0 nil])
([nil nil ((5554 . 5575)) nil (26715 9043 214367 595000) 0 nil])
([nil nil ((5575 . 5578)) nil (26715 9043 214367 177000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-string-face fontified t)) . -5577) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) 5578) nil (26715 9043 214366 212000) 0 nil])
([nil nil ((5577 . 5582)) nil (26715 9043 214352 509000) 0 nil])
([nil nil ((5582 . 5584)) nil (26715 9043 214348 62000) 0 nil])
([nil nil ((5584 . 5588) (t 26715 9043 232325 390000)) nil (26715 9064 441752 81000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5587) (undo-tree-id12218 . -1) 5588) nil (26715 9064 441751 23000) 0 nil])
([nil nil ((5587 . 5590)) nil (26715 9064 441747 188000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5589) (undo-tree-id12217 . -1) 5590) nil (26715 9064 441746 313000) 0 nil])
([nil nil ((#("print" 0 5 (face font-lock-builtin-face fontified t)) . -5584) (undo-tree-id12216 . -5) 5589) nil (26715 9064 441744 412000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5583) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) 5584) nil (26715 9064 441741 477000) 0 nil])
([nil nil ((5583 . 5604)) nil (26715 9064 441729 260000) 0 nil])
([nil nil ((5604 . 5605)) nil (26715 9064 441727 928000) 0 nil])
([nil nil ((5605 . 5613)) nil (26715 9064 441726 240000) 0 nil])
([nil nil ((5613 . 5614)) nil (26715 9064 441724 803000) 0 nil])
([nil nil ((5614 . 5629)) nil (26715 9064 441723 253000) 0 nil])
([nil nil ((5629 . 5630)) nil (26715 9064 441718 301000) 0 nil])
([nil nil ((5613 . 5614) (t 26715 9064 462192 779000)) nil (26715 9068 322953 797000) 0 nil])
([nil nil ((5614 . 5619)) nil (26715 9068 322951 849000) 0 nil])
([nil nil ((5619 . 5622)) nil (26715 9068 322946 900000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -5583) (undo-tree-id12219 . -1) 5584 (t 26715 9068 344718 39000)) nil (26715 9116 481593 373000) 0 nil])
([nil nil ((5583 . 5584)) nil (26715 9116 481584 796000) 0 nil])
([nil nil ((5613 . 5614)) nil (26715 9116 481584 352000) 0 nil])
([nil nil ((5614 . 5635)) nil (26715 9116 481583 490000) 0 nil])
([nil nil ((5635 . 5636)) nil (26715 9116 481578 701000) 0 nil])
([nil nil ((5636 . 5637) (t 26715 9116 500251 481000)) nil (26715 9157 780111 882000) 0 nil])
([nil nil ((5637 . 5644)) nil (26715 9157 780111 337000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5643) (undo-tree-id12288 . -1) 5644) nil (26715 9157 780110 709000) 0 nil])
([nil nil ((5636 . 5637)) nil (26715 9157 780109 499000) 0 nil])
([nil nil ((5637 . 5645)) nil (26715 9157 780109 98000) 0 nil])
([nil nil ((5645 . 5666)) nil (26715 9157 780108 774000) 0 nil])
([nil nil ((5666 . 5681)) nil (26715 9157 780108 366000) 0 nil])
([nil nil ((5681 . 5682)) nil (26715 9157 780107 944000) 0 nil])
([nil nil ((5683 . 5687) 5689) nil (26715 9157 780107 531000) 0 nil])
([nil nil ((5694 . 5702) 5702) nil (26715 9157 780107 27000) 0 nil])
([nil nil ((5711 . 5719) 5726) nil (26715 9157 780106 577000) 0 nil])
([nil nil ((5693 . 5694)) nil (26715 9157 780106 82000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5699) (undo-tree-id12287 . -4) 5706) nil (26715 9157 780105 599000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5712) (undo-tree-id12278 . -3) (undo-tree-id12279 . -3) (undo-tree-id12280 . -3) (undo-tree-id12281 . -3) (undo-tree-id12282 . -3) (undo-tree-id12283 . -3) (undo-tree-id12284 . -3) (undo-tree-id12285 . -3) (undo-tree-id12286 . -4) 5715) nil (26715 9157 780104 53000) 0 nil])
([nil nil ((5693 . 5696)) nil (26715 9157 780097 301000) 0 nil])
([nil nil ((5710 . 5715)) nil (26715 9157 780096 883000) 0 nil])
([nil nil ((5715 . 5736)) nil (26715 9157 780096 554000) 0 nil])
([nil nil ((5696 . 5698)) nil (26715 9157 780096 106000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -5695) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (#("\\" 0 1 (fontified t)) . -5696) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (#("n" 0 1 (fontified t)) . -5697) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) 5698) nil (26715 9157 780093 236000) 0 nil])
([nil nil ((5695 . 5700)) nil (26715 9157 780038 395000) 0 nil])
([nil nil ((2110 . 2115) (t 26715 9157 799876 323000)) nil (26715 9539 293876 809000) 0 nil])
([nil nil ((2249 . 2250) (t 26715 9539 312047 64000)) nil (26715 15683 70295 425000) 0 nil])
([nil nil ((2255 . 2260)) nil (26715 15683 70294 65000) 0 nil])
([nil nil ((2282 . 2283)) nil (26715 15683 70292 625000) 0 nil])
([nil nil ((2288 . 2294)) nil (26715 15683 70288 375000) 0 nil])
([nil nil ((#("# TESTING SHA3-224" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 18 (face font-lock-comment-face fontified t)) . 5552) (undo-tree-id12343 . -18) (undo-tree-id12344 . -18) (undo-tree-id12345 . -18) (undo-tree-id12346 . -18) (undo-tree-id12347 . -18) (undo-tree-id12348 . -18) (t 26715 15683 90329 713000)) nil (26715 15714 54988 986000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5778 . 5779) (nil fontified nil 5763 . 5779) (nil fontified nil 5761 . 5763) (5761 . 5779)) nil (26715 15714 54981 354000) 0 nil])
([nil nil ((5760 . 5765)) nil (26715 15714 54980 258000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5553) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1)) nil (26715 15714 54979 65000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5552) (undo-tree-id12289 . -1) (undo-tree-id12290 . -1) (undo-tree-id12291 . -1) (undo-tree-id12292 . -1) (undo-tree-id12293 . -1) (undo-tree-id12294 . -1) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) (undo-tree-id12305 . -1) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1)) nil (26715 15714 54963 69000) 0 nil])
([nil nil ((apply -16 5552 5780 undo--wrap-and-run-primitive-undo 5552 5780 ((5753 . 5755) (5725 . 5727) (5710 . 5712) (5689 . 5691) (5641 . 5643) (5616 . 5618) (5583 . 5585) (5552 . 5554) 5759))) nil (26715 15714 54893 835000) 0 nil])
([nil nil ((5798 . 5800)) nil (26715 15714 54888 208000) 0 nil])
([nil nil ((5800 . 5801) (t 26715 15714 75875 148000)) nil (26715 15753 615903 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5889 . 5890) (nil fontified nil 5870 . 5890) (nil fontified nil 5869 . 5870) (nil fontified nil 5868 . 5869) (nil fontified nil 5867 . 5868) (nil fontified nil 5865 . 5867) (nil fontified nil 5838 . 5865) (nil fontified nil 5837 . 5838) (nil fontified nil 5836 . 5837) (nil fontified nil 5835 . 5836) (nil fontified nil 5834 . 5835) (nil fontified nil 5832 . 5834) (nil fontified nil 5829 . 5832) (nil fontified nil 5828 . 5829) (nil fontified nil 5818 . 5828) (nil fontified nil 5817 . 5818) (nil fontified nil 5816 . 5817) (nil fontified nil 5815 . 5816) (nil fontified nil 5803 . 5815) (nil fontified nil 5801 . 5803) (5801 . 5890)) nil (26715 15753 615902 584000) 0 nil])
([nil nil ((apply 6 5801 5884 undo--wrap-and-run-primitive-undo 5801 5884 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5861) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5830) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5801)))) nil (26715 15753 615900 1000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5800) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1)) nil (26715 15753 615897 779000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5799) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (undo-tree-id12372 . -1) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) (undo-tree-id12381 . -1) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1)) nil (26715 15753 615863 832000) 0 nil])
([nil nil ((5799 . 5800) (t 26715 15753 635604 213000)) nil (26715 15773 372486 739000) 0 nil])
([nil nil ((#("A = gen_state_array(S)" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 22 (fontified t)) . 5860) (undo-tree-id12783 . -22) (undo-tree-id12784 . -22) (undo-tree-id12785 . -22) (undo-tree-id12786 . -22) (undo-tree-id12787 . -22) (undo-tree-id12788 . -22)) nil (26715 15773 372486 20000) 0 nil])
([nil nil ((#("S = str_to_array(INPUT_STRING)" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t) 4 30 (fontified t)) . 5829) (undo-tree-id12777 . -30) (undo-tree-id12778 . -30) (undo-tree-id12779 . -30) (undo-tree-id12780 . -30) (undo-tree-id12781 . -30) (undo-tree-id12782 . -30)) nil (26715 15773 372480 408000) 0 nil])
([nil nil ((5829 . 5838)) nil (26715 15773 372476 331000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -5837) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) 5838) nil (26715 15773 372475 695000) 0 nil])
([nil nil ((5837 . 5843)) nil (26715 15773 372471 500000) 0 nil])
([nil nil ((5828 . 5829)) nil (26715 15773 372471 176000) 0 nil])
([nil nil ((5829 . 5845)) nil (26715 15774 361614 965000) 0 nil])
([nil nil ((5845 . 5866)) nil (26715 15785 549211 613000) 0 nil] [nil nil ((#("print" 0 5 (face font-lock-builtin-face fontified t)) . -5840) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -2) (undo-tree-id12746 . -2) (undo-tree-id12747 . -2) (undo-tree-id12748 . -2) (undo-tree-id12749 . -2) (undo-tree-id12750 . -3) (undo-tree-id12751 . -3) (undo-tree-id12752 . -3) (undo-tree-id12753 . -3) (undo-tree-id12754 . -3) (undo-tree-id12755 . -3) (undo-tree-id12756 . -3) (undo-tree-id12757 . -3) (undo-tree-id12758 . -3) (undo-tree-id12759 . -3) (undo-tree-id12760 . -4) (undo-tree-id12761 . -4) (undo-tree-id12762 . -4) (undo-tree-id12763 . -4) (undo-tree-id12764 . -4) (undo-tree-id12765 . -5) (undo-tree-id12766 . -5) (undo-tree-id12767 . -5) (undo-tree-id12768 . -5) (undo-tree-id12769 . -5) (undo-tree-id12770 . -5) 5845) ((5840 . 5845)) (26715 15773 985839 246000) 0 nil])
([nil nil ((5866 . 5874)) nil (26715 15785 549211 127000) 0 nil])
([nil nil ((#("numpy." 0 6 (fontified t)) . -5834) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) (undo-tree-id12679 . -2) (undo-tree-id12680 . -2) (undo-tree-id12681 . -2) (undo-tree-id12682 . -2) (undo-tree-id12683 . -2) (undo-tree-id12684 . -3) (undo-tree-id12685 . -3) (undo-tree-id12686 . -3) (undo-tree-id12687 . -3) (undo-tree-id12688 . -3) (undo-tree-id12689 . -4) (undo-tree-id12690 . -4) (undo-tree-id12691 . -4) (undo-tree-id12692 . -4) (undo-tree-id12693 . -4) (undo-tree-id12694 . -5) (undo-tree-id12695 . -5) (undo-tree-id12696 . -5) (undo-tree-id12697 . -5) (undo-tree-id12698 . -5) (undo-tree-id12699 . -6) (undo-tree-id12700 . -6) (undo-tree-id12701 . -6) (undo-tree-id12702 . -6) (undo-tree-id12703 . -6) (undo-tree-id12704 . -6) (undo-tree-id12705 . -6) (undo-tree-id12706 . -6) (undo-tree-id12707 . -6) (undo-tree-id12708 . -6) (undo-tree-id12709 . -6) (undo-tree-id12710 . -6) (undo-tree-id12711 . -6) (undo-tree-id12712 . -6) (undo-tree-id12713 . -6) (undo-tree-id12714 . -6) (undo-tree-id12715 . -6) (undo-tree-id12716 . -6) (undo-tree-id12717 . -6) (undo-tree-id12718 . -6) (undo-tree-id12719 . -6) (undo-tree-id12720 . -6) (undo-tree-id12721 . -6) (undo-tree-id12722 . -6) (undo-tree-id12723 . -6) (undo-tree-id12724 . -6) (undo-tree-id12725 . -6) (undo-tree-id12726 . -6) (undo-tree-id12727 . -6) (undo-tree-id12728 . -6) (undo-tree-id12729 . -6) (undo-tree-id12730 . -6) (undo-tree-id12731 . -6) (undo-tree-id12732 . -6) (undo-tree-id12733 . -6) (undo-tree-id12734 . -6) (undo-tree-id12735 . -6) (undo-tree-id12736 . -6) (undo-tree-id12737 . -6) (undo-tree-id12738 . -6) (undo-tree-id12739 . -6) 5840) ((5834 . 5840)) (26715 15773 586219 572000) 0 nil])
([nil nil ((5875 . 5879) 5889) nil (26715 15785 549210 379000) 0 nil])
([nil nil ((#("with " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -5829) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -2) (undo-tree-id12583 . -2) (undo-tree-id12584 . -2) (undo-tree-id12585 . -2) (undo-tree-id12586 . -2) (undo-tree-id12587 . -3) (undo-tree-id12588 . -3) (undo-tree-id12589 . -3) (undo-tree-id12590 . -3) (undo-tree-id12591 . -3) (undo-tree-id12592 . -4) (undo-tree-id12593 . -4) (undo-tree-id12594 . -4) (undo-tree-id12595 . -4) (undo-tree-id12596 . -4) (undo-tree-id12597 . -5) (undo-tree-id12598 . -5) (undo-tree-id12599 . -5) (undo-tree-id12600 . -5) (undo-tree-id12601 . -5) (undo-tree-id12602 . -5) (undo-tree-id12603 . -5) (undo-tree-id12604 . -5) (undo-tree-id12605 . -5) (undo-tree-id12606 . -5) (undo-tree-id12607 . -5) (undo-tree-id12608 . -5) (undo-tree-id12609 . -5) (undo-tree-id12610 . -5) (undo-tree-id12611 . -5) (undo-tree-id12612 . -5) (undo-tree-id12613 . -5) (undo-tree-id12614 . -5) (undo-tree-id12615 . -5) (undo-tree-id12616 . -5) (undo-tree-id12617 . -5) (undo-tree-id12618 . -5) (undo-tree-id12619 . -5) (undo-tree-id12620 . -5) (undo-tree-id12621 . -5) (undo-tree-id12622 . -5) (undo-tree-id12623 . -5) (undo-tree-id12624 . -5) (undo-tree-id12625 . -5) (undo-tree-id12626 . -5) (undo-tree-id12627 . -5) (undo-tree-id12628 . -5) (undo-tree-id12629 . -5) (undo-tree-id12630 . -5) (undo-tree-id12631 . -5) (undo-tree-id12632 . -5) (undo-tree-id12633 . -5) (undo-tree-id12634 . -5) (undo-tree-id12635 . -5) (undo-tree-id12636 . -5) (undo-tree-id12637 . -5) (undo-tree-id12638 . -5) (undo-tree-id12639 . -5) (undo-tree-id12640 . -5) (undo-tree-id12641 . -5) (undo-tree-id12642 . -5) (undo-tree-id12643 . -5) (undo-tree-id12644 . -5) (undo-tree-id12645 . -5) (undo-tree-id12646 . -5) (undo-tree-id12647 . -5) (undo-tree-id12648 . -5) (undo-tree-id12649 . -5) (undo-tree-id12650 . -5) (undo-tree-id12651 . -5) (undo-tree-id12652 . -5) (undo-tree-id12653 . -5) (undo-tree-id12654 . -5) (undo-tree-id12655 . -5) (undo-tree-id12656 . -5) (undo-tree-id12657 . -5) (undo-tree-id12658 . -5) (undo-tree-id12659 . -5) (undo-tree-id12660 . -5) (undo-tree-id12661 . -5) (undo-tree-id12662 . -5) (undo-tree-id12663 . -5) (undo-tree-id12664 . -5) (undo-tree-id12665 . -5) (undo-tree-id12666 . -5) (undo-tree-id12667 . -5) (undo-tree-id12668 . -5) (undo-tree-id12669 . -5) (undo-tree-id12670 . -5) (undo-tree-id12671 . -5) (undo-tree-id12672 . -5) (undo-tree-id12673 . -5) 5834) ((5829 . 5834)) (26715 15773 372602 501000) 0 nil])
([nil nil ((5893 . 5896)) nil (26715 15785 549209 493000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5828) (undo-tree-id12465 . 1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) (undo-tree-id12498 . -1) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) 5829) ((5828 . 5829)) (26715 15773 372156 217000) 0 nil])
([nil nil ((5896 . 5903)) nil (26715 15785 549208 963000) 0 nil])
nil
([nil nil ((#("I" 0 1 (fontified t)) . -5902) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) 5903) nil (26715 15785 549207 338000) 0 nil])
([nil nil ((5902 . 5908)) nil (26715 15785 549189 627000) 0 nil])
([nil nil ((5874 . 5879) (t 26715 15785 570563 741000)) nil (26715 15819 907920 100000) 0 nil])
([nil nil ((5879 . 5900)) nil (26715 15819 907919 635000) 0 nil])
([nil nil ((5900 . 5903)) nil (26715 15819 907919 120000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -5902) (undo-tree-id12830 . -1) 5903) nil (26715 15819 907918 644000) 0 nil])
([nil nil ((5902 . 5922)) nil (26715 15819 907917 447000) 0 nil])
([nil nil ((#("string" 0 6 (face font-lock-string-face fontified t)) . -5895) (undo-tree-id12829 . -6) 5901) nil (26715 15819 907916 945000) 0 nil])
([nil nil ((#("Original " 0 9 (face font-lock-string-face fontified t)) . -5886) (undo-tree-id12828 . -9) 5895) nil (26715 15819 907915 505000) 0 nil])
([nil nil ((5886 . 5890)) nil (26715 15819 907914 359000) 0 nil])
([nil nil ((#("orig" 0 4 (face font-lock-string-face fontified t)) . -5886) (undo-tree-id12827 . -4) 5890) nil (26715 15819 907913 652000) 0 nil])
([nil nil ((5886 . 5901)) nil (26715 15819 907910 976000) 0 nil])
([nil nil ((5933 . 5935)) nil (26715 15819 907910 463000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -5934) (undo-tree-id12826 . -1) 5935) nil (26715 15819 907909 901000) 0 nil])
([nil nil ((5934 . 5938)) nil (26715 15819 907908 664000) 0 nil])
([nil nil ((5938 . 5942)) nil (26715 15819 907908 121000) 0 nil])
([nil nil ((#("OUP" 0 3 (face font-lock-string-face fontified t)) . -5939) (undo-tree-id12813 . -2) (undo-tree-id12814 . -2) (undo-tree-id12815 . -3) (undo-tree-id12816 . -3) (undo-tree-id12817 . -3) (undo-tree-id12818 . -3) (undo-tree-id12819 . -3) (undo-tree-id12820 . -3) (undo-tree-id12821 . -3) (undo-tree-id12822 . -3) (undo-tree-id12823 . -3) (undo-tree-id12824 . -3) (undo-tree-id12825 . -3) 5942) nil (26715 15819 907907 94000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -5938) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) 5939) nil (26715 15819 907896 602000) 0 nil])
([nil nil ((5938 . 5956)) nil (26715 15819 907867 76000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5978) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) 5979 (t 26715 15819 926976 886000)) nil (26715 15822 283863 991000) 0 nil])
([nil nil ((5978 . 5979)) nil (26715 15822 283841 695000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -5950) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -5951) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (#("N" 0 1 (face font-lock-string-face fontified t)) . -5952) (undo-tree-id12856 . -1) 5953 (t 26715 15822 304719 926000)) nil (26715 15838 880224 613000) 0 nil])
([nil nil ((5950 . 5953)) nil (26715 15838 880186 950000) 0 nil])
([nil nil ((5886 . 5888) (t 26715 15838 902601 325000)) nil (26715 15885 279610 986000) 0 nil])
([nil nil ((5936 . 5938) (t 26715 15885 312322 260000)) nil (26715 15887 80091 317000) 0 nil])
([nil nil ((797 . 798) (t 26715 15887 99953 511000)) nil (26715 15987 384793 544000) 0 nil])
([nil nil ((798 . 799)) nil (26715 15987 384792 913000) 0 nil])
([nil nil ((798 . 810)) nil (26715 15987 384792 577000) 0 nil])
([nil nil ((#("hexlify(" 0 7 (face font-lock-function-name-face fontified t) 7 8 (fontified t)) . -802) (undo-tree-id12873 . -8) 810) nil (26715 15987 384792 63000) 0 nil])
([nil nil ((802 . 812)) nil (26715 15987 384790 719000) 0 nil])
([nil nil ((808 . 810)) nil (26715 15987 384790 381000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -808) (undo-tree-id12871 . -1) (#("a" 0 1 (fontified t)) . -809) (undo-tree-id12872 . -1) 810) nil (26715 15987 384789 439000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-function-name-face fontified t)) . -807) (undo-tree-id12870 . -1) 808) nil (26715 15987 384787 108000) 0 nil])
([nil nil ((#("hexif" 0 5 (face font-lock-function-name-face fontified t)) . -802) (undo-tree-id12869 . -5) 807) nil (26715 15987 384785 660000) 0 nil])
([nil nil ((802 . 815)) nil (26715 15987 384781 39000) 0 nil])
([nil nil ((819 . 824)) nil (26715 15987 384780 573000) 0 nil])
([nil nil ((797 . 798)) nil (26715 15987 384780 225000) 0 nil])
([nil nil ((798 . 810)) nil (26715 15987 384779 775000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -807) (undo-tree-id12866 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -808) (undo-tree-id12867 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -809) (undo-tree-id12868 . -1) 810) nil (26715 15987 384778 865000) 0 nil])
([nil nil ((807 . 810)) nil (26715 15987 384775 772000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -809) (undo-tree-id12865 . -1) 810) nil (26715 15987 384775 134000) 0 nil])
([nil nil ((809 . 825)) nil (26715 15987 384773 792000) 0 nil])
([nil nil ((825 . 834)) nil (26715 15987 384773 415000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -833) (undo-tree-id12864 . -1) 834) nil (26715 15987 384772 637000) 0 nil])
([nil nil ((817 . 819)) nil (26715 15987 384770 962000) 0 nil])
([nil nil ((835 . 837)) nil (26715 15987 384770 405000) 0 nil])
([nil nil ((837 . 858)) nil (26715 15987 384769 840000) 0 nil])
([nil nil ((858 . 869)) nil (26715 15987 384768 840000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -868) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) 869) nil (26715 15987 384764 978000) 0 nil])
([nil nil ((890 . 891) (t 26715 15987 403845 322000)) nil (26715 15989 452077 11000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -890) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) 891) nil (26715 15989 452073 47000) 0 nil])
([nil nil ((895 . 902) (t 26715 15989 470726 633000)) nil (26715 16392 636213 796000) 0 nil])
([nil nil ((902 . 903)) nil (26715 16392 636212 124000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -902) (undo-tree-id13028 . -1) 903) nil (26715 16392 636210 382000) 0 nil])
([nil nil ((902 . 904)) nil (26715 16392 636206 517000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -903) (undo-tree-id13027 . -1) 904) nil (26715 16392 636204 833000) 0 nil])
([nil nil ((903 . 912)) nil (26715 16392 636201 1000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -910) (undo-tree-id13025 . -1) (#("i" 0 1 (fontified t)) . -911) (undo-tree-id13026 . -1) 912) nil (26715 16392 636198 677000) 0 nil])
([nil nil ((910 . 913)) nil (26715 16392 636192 425000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -912) (undo-tree-id13024 . -1) 913) nil (26715 16392 636190 720000) 0 nil])
([nil nil ((912 . 921)) nil (26715 16392 636186 819000) 0 nil])
([nil nil ((921 . 926)) nil (26715 16392 636185 441000) 0 nil])
([nil nil ((916 . 917)) nil (26715 16392 636184 78000) 0 nil])
([nil nil ((900 . 909)) nil (26715 16392 636182 616000) 0 nil])
([nil nil ((868 . 869)) nil (26715 16392 636181 274000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -868) (undo-tree-id13023 . -1) 869) nil (26715 16392 636179 417000) 0 nil])
([nil nil ((868 . 870)) nil (26715 16392 636175 533000) 0 nil])
([nil nil ((880 . 893) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 868) (866 . 868) (866 . 867) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 866) (865 . 866) (870 . 878)) nil (26715 16392 636173 191000) 0 nil])
([nil nil ((893 . 898)) nil (26715 16392 636169 691000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -897) (undo-tree-id13022 . -1) 898) nil (26715 16392 636167 961000) 0 nil])
([nil nil ((897 . 903)) nil (26715 16392 636163 946000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -896) (undo-tree-id13021 . -1) 897) nil (26715 16392 636162 207000) 0 nil])
([nil nil ((896 . 897)) nil (26715 16392 636158 238000) 0 nil])
([nil nil ((944 . 946)) nil (26715 16392 636156 930000) 0 nil])
([nil nil ((941 . 942)) nil (26715 16392 636155 480000) 0 nil])
([nil nil ((943 . 948)) nil (26715 16392 636154 149000) 0 nil])
([nil nil ((#("8))" 0 2 (fontified t) 2 3 (fontified t)) . -946) (undo-tree-id13020 . -3) 949) nil (26715 16392 636152 344000) 0 nil])
([nil nil ((#("i % " 0 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 4 (fontified t)) . -942) (undo-tree-id13019 . -4) 946) nil (26715 16392 636148 144000) 0 nil])
([nil nil ((#("1 << (" 0 2 (fontified t) 2 4 (face font-lock-operator-face fontified t) 4 6 (fontified t)) . -936) (undo-tree-id13018 . -6) 942) nil (26715 16392 636144 102000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -935) (undo-tree-id13017 . -1) 936) nil (26715 16392 636139 929000) 0 nil])
([nil nil ((#("    sum([ * A[8*i : 8*(i+1)]) for i in " 0 4 (fontified t) 4 7 (face font-lock-builtin-face fontified t) 7 9 (fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 12 (fontified t) 12 15 (fontified t) 15 16 (face font-lock-operator-face fontified t) 16 21 (fontified t) 21 22 (face font-lock-operator-face fontified t) 22 24 (fontified t) 24 25 (face font-lock-operator-face fontified t) 25 30 (fontified t) 30 33 (face font-lock-keyword-face fontified t) 33 36 (fontified t) 36 38 (face font-lock-keyword-face fontified t) 38 39 (fontified t)) . 926)) nil (26715 16392 636136 17000) 0 nil])
([nil nil ((926 . 930)) nil (26715 16392 636134 541000) 0 nil])
([nil nil ((930 . 932)) nil (26715 16392 636133 171000) 0 nil])
([nil nil ((932 . 943)) nil (26715 16392 636131 856000) 0 nil])
([nil nil ((943 . 951)) nil (26715 16392 636130 484000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -950) (undo-tree-id13016 . -1) 951) nil (26715 16392 636128 755000) 0 nil])
([nil nil ((950 . 952)) nil (26715 16392 636123 820000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -951) (undo-tree-id13015 . -1) 952) nil (26715 16392 636122 33000) 0 nil])
([nil nil ((951 . 956)) nil (26715 16392 636117 838000) 0 nil])
([nil nil ((956 . 963)) nil (26715 16392 636116 495000) 0 nil])
([nil nil ((930 . 935)) nil (26715 16392 636115 56000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -932) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (#("<" 0 1 (face font-lock-operator-face fontified t)) . -933) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (#(" " 0 1 (fontified t)) . -934) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) 935) nil (26715 16392 636106 741000) 0 nil])
([nil nil ((932 . 939)) nil (26715 16392 636035 258000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -971) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) 972) nil (26715 16392 636034 28000) 0 nil])
([nil nil ((971 . 972)) nil (26715 16392 636015 731000) 0 nil])
([nil nil ((930 . 934)) nil (26715 16392 636015 180000) 0 nil])
([nil nil ((976 . 977)) nil (26715 16392 636014 741000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -769) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (#("(" 0 1 (fontified t)) . -770) (undo-tree-id12944 . -1) 771) nil (26715 16392 636013 619000) 0 nil])
([nil nil ((769 . 770)) nil (26715 16392 636006 271000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -770) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) 771) nil (26715 16392 636005 67000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -773) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) 774) nil (26715 16392 635985 512000) 0 nil])
([nil nil ((773 . 774)) nil (26715 16392 635979 176000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -772) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (#(" " 0 1 (fontified t)) . -773) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) 774) nil (26715 16392 635976 786000) 0 nil])
([nil nil ((772 . 774)) nil (26715 16392 635939 692000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -773) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) 774) nil (26715 16392 635938 110000) 0 nil])
([nil nil ((773 . 774)) nil (26715 16392 635917 883000) 0 nil])
([nil nil ((774 . 777) (t 26715 16392 658369 510000)) nil (26715 16658 339770 117000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . -774) (undo-tree-id13235 . -1) (#("u" 0 1 (fontified t)) . -775) (undo-tree-id13236 . -1) (#("h" 0 1 (fontified t)) . -776) (undo-tree-id13237 . -1) 777) nil (26715 16658 339768 722000) 0 nil])
([nil nil ((923 . 928)) nil (26715 16658 339765 596000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 928) (undo-tree-id13234 . -1)) nil (26715 16658 339764 922000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 928) (#(" " 0 1 (fontified t)) . 928) (#(" " 0 1 (fontified t)) . 928) (#(" " 0 1 (fontified t)) . 928)) nil (26715 16658 339762 590000) 0 nil])
([nil nil ((928 . 934)) nil (26715 16658 339761 697000) 0 nil])
([nil nil ((981 . 986)) nil (26715 16658 339761 109000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -928) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -929) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) (undo-tree-id13227 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -930) (undo-tree-id13228 . -1) (undo-tree-id13229 . -1) (undo-tree-id13230 . -1) (undo-tree-id13231 . -1) (undo-tree-id13232 . -1) (undo-tree-id13233 . -1) 931) nil (26715 16658 339758 190000) 0 nil])
([nil nil ((928 . 929)) nil (26715 16658 339713 435000) 0 nil])
([nil nil ((984 . 1003)) nil (26715 16658 339712 928000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1001) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (#(")" 0 1 (fontified t)) . -1002) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) 1003) nil (26715 16658 339710 965000) 0 nil])
([nil nil ((1001 . 1004)) nil (26715 16658 339659 484000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -1003) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) 1004) nil (26715 16658 339658 650000) 0 nil])
([nil nil ((1003 . 1005)) nil (26715 16658 339652 265000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -928) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) 929) nil (26715 16658 339651 300000) 0 nil])
([nil nil ((928 . 936)) nil (26715 16658 339644 780000) 0 nil])
([nil nil ((#("hexes = " 0 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (fontified t)) . -928) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -2) (undo-tree-id13100 . -2) (undo-tree-id13101 . -2) (undo-tree-id13102 . -2) (undo-tree-id13103 . -2) (undo-tree-id13104 . -3) (undo-tree-id13105 . -3) (undo-tree-id13106 . -3) (undo-tree-id13107 . -3) (undo-tree-id13108 . -3) (undo-tree-id13109 . -4) (undo-tree-id13110 . -4) (undo-tree-id13111 . -4) (undo-tree-id13112 . -4) (undo-tree-id13113 . -4) (undo-tree-id13114 . -5) (undo-tree-id13115 . -5) (undo-tree-id13116 . -5) (undo-tree-id13117 . -5) (undo-tree-id13118 . -5) (undo-tree-id13119 . -6) (undo-tree-id13120 . -6) (undo-tree-id13121 . -6) (undo-tree-id13122 . -6) (undo-tree-id13123 . -6) (undo-tree-id13124 . -6) (undo-tree-id13125 . -7) (undo-tree-id13126 . -7) (undo-tree-id13127 . -7) (undo-tree-id13128 . -7) (undo-tree-id13129 . -7) (undo-tree-id13130 . -8) (undo-tree-id13131 . -8) (undo-tree-id13132 . -8) (undo-tree-id13133 . -8) (undo-tree-id13134 . -8) (undo-tree-id13135 . -8) (undo-tree-id13136 . -8) 936) nil (26715 16658 339642 747000) 0 nil])
([nil nil ((928 . 929)) nil (26715 16658 339601 740000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -928) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) 929) nil (26715 16658 339600 823000) 0 nil])
([nil nil ((928 . 933)) nil (26715 16658 339587 347000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -932) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) 933) nil (26715 16658 339586 488000) 0 nil])
([nil nil ((#("ints" 0 4 (face font-lock-variable-name-face fontified t)) . -928) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -2) (undo-tree-id13055 . -2) (undo-tree-id13056 . -2) (undo-tree-id13057 . -2) (undo-tree-id13058 . -2) (undo-tree-id13059 . -3) (undo-tree-id13060 . -3) (undo-tree-id13061 . -3) (undo-tree-id13062 . -3) (undo-tree-id13063 . -3) (undo-tree-id13064 . -4) (undo-tree-id13065 . -4) (undo-tree-id13066 . -4) (undo-tree-id13067 . -4) (undo-tree-id13068 . -4) (undo-tree-id13069 . -4) (undo-tree-id13070 . -4) (undo-tree-id13071 . -4) (undo-tree-id13072 . -4) (undo-tree-id13073 . -4) (undo-tree-id13074 . -4) (undo-tree-id13075 . -4) (undo-tree-id13076 . -4) (undo-tree-id13077 . -4) (undo-tree-id13078 . -4) (undo-tree-id13079 . -4) (undo-tree-id13080 . -4) 932) nil (26715 16658 339578 734000) 0 nil])
([nil nil ((928 . 932)) nil (26715 16658 339550 238000) 0 nil])
([nil nil ((935 . 936)) nil (26715 16658 339549 644000) 0 nil])
([nil nil ((983 . 992)) nil (26715 16658 339549 68000) 0 nil])
([nil nil ((992 . 1004)) nil (26715 16658 339548 506000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1003) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) 1004) nil (26715 16658 339547 529000) 0 nil])
([nil nil ((1003 . 1004)) nil (26715 16658 339541 728000) 0 nil])
([nil nil ((984 . 985)) nil (26715 16658 339541 145000) 0 nil])
([nil nil ((985 . 998)) nil (26715 16658 339540 469000) 0 nil])
([nil nil ((1018 . 1022)) nil (26715 16658 339539 931000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1021) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) 1022) nil (26715 16658 339538 877000) 0 nil])
([nil nil ((1021 . 1025)) nil (26715 16658 339527 998000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1024) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) 1025) nil (26715 16658 339526 233000) 0 nil])
([nil nil ((1024 . 1026)) nil (26715 16658 339505 932000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1048) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (#("n" 0 1 (fontified t)) . -1049) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (undo-tree-id13275 . -1) (undo-tree-id13276 . -1) (undo-tree-id13277 . -1) (undo-tree-id13278 . -1) (#("]" 0 1 (fontified t)) . -1050) (undo-tree-id13279 . -1) (undo-tree-id13280 . -1) (undo-tree-id13281 . -1) (undo-tree-id13282 . -1) (undo-tree-id13283 . -1) (undo-tree-id13284 . -1) 1051 (t 26715 16658 378765 534000)) nil (26715 16664 70167 629000) 0 nil])
([nil nil ((1048 . 1052)) nil (26715 16664 70118 916000) 0 nil])
([nil nil ((1053 . 1059)) nil (26715 16664 70114 147000) 0 nil])
([nil nil ((1026 . 1031) (t 26715 16664 90291 774000)) nil (26715 16734 543142 154000) 0 nil])
([nil nil ((1031 . 1040)) nil (26715 16734 543141 684000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1038) (undo-tree-id13323 . -1) (#("m" 0 1 (fontified t)) . -1039) (undo-tree-id13324 . -1) 1040) nil (26715 16734 543140 960000) 0 nil])
([nil nil ((1038 . 1042)) nil (26715 16735 245535 770000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -940) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (#("1" 0 1 (fontified t)) . -941) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (#("<" 0 1 (face font-lock-operator-face fontified t)) . -942) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (#("<" 0 1 (face font-lock-operator-face fontified t)) . -943) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (#("i" 0 1 (fontified t)) . -944) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (#(")" 0 1 (fontified t)) . -945) (undo-tree-id13658 . -1) 946) nil (26715 16744 761064 293000) 0 nil] [nil nil ((944 . 946)) ((#(" (" 0 1 (fontified t) 1 2 (fontified t)) . 944) (undo-tree-id13325 . -1) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (undo-tree-id13330 . -1) (undo-tree-id13331 . -2) (undo-tree-id13332 . -2) (undo-tree-id13333 . -2) (undo-tree-id13334 . -2) (undo-tree-id13335 . -2) (undo-tree-id13336 . -2) (undo-tree-id13337 . -2) (undo-tree-id13338 . -2) (undo-tree-id13339 . -2) (undo-tree-id13340 . -2) (undo-tree-id13341 . -1) (undo-tree-id13342 . -1) (undo-tree-id13343 . -1) (undo-tree-id13344 . -1) (undo-tree-id13345 . -1) (undo-tree-id13346 . -1) (undo-tree-id13347 . -1) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -2) (undo-tree-id13352 . -2) (undo-tree-id13353 . -2) (undo-tree-id13354 . -2) (undo-tree-id13355 . -2) (undo-tree-id13356 . -2) (undo-tree-id13357 . -2) (undo-tree-id13358 . -2) (undo-tree-id13359 . -2) (undo-tree-id13360 . -2) (undo-tree-id13361 . -2)) (26715 16734 543369 384000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 940) (#("*" 0 1 (face font-lock-operator-face fontified t)) . 940) (#(" " 0 1 (fontified t)) . 940)) nil (26715 16744 760567 905000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -944) (undo-tree-id13285 . -1) (undo-tree-id13286 . -1) (undo-tree-id13287 . -1) (undo-tree-id13288 . -1) (undo-tree-id13289 . -1) (undo-tree-id13290 . -1) (undo-tree-id13291 . -1) (undo-tree-id13292 . -1) (undo-tree-id13293 . -1) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) (undo-tree-id13298 . -1) (undo-tree-id13299 . -1) (undo-tree-id13300 . -1) (undo-tree-id13301 . -1) (undo-tree-id13302 . -1) (undo-tree-id13303 . -1) (undo-tree-id13304 . -1) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (#("(" 0 1 (fontified t)) . -945) (undo-tree-id13312 . -1) (undo-tree-id13313 . -1) (undo-tree-id13314 . -1) (undo-tree-id13315 . -1) (undo-tree-id13316 . -1) (undo-tree-id13317 . -1) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (undo-tree-id13322 . -1) 946) ((944 . 946)) (26715 16734 543134 214000) 0 nil])
([nil nil ((944 . 952)) nil (26715 16744 760566 431000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -950) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) (#("%" 0 1 (face font-lock-operator-face fontified t)) . -951) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) 952) nil (26715 16744 760562 20000) 0 nil])
([nil nil ((950 . 952)) nil (26715 16744 760531 483000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -951) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) 952) nil (26715 16744 760528 695000) 0 nil])
([nil nil ((951 . 953)) nil (26715 16744 760508 920000) 0 nil])
([nil nil ((5554 . 5560) (t 26715 16744 784412 795000)) nil (26715 16809 787528 241000) 0 nil])
([nil nil ((#("hexfli" 0 6 (fontified t)) . -5554) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -2) (undo-tree-id13764 . -2) (undo-tree-id13765 . -2) (undo-tree-id13766 . -2) (undo-tree-id13767 . -2) (undo-tree-id13768 . -3) (undo-tree-id13769 . -3) (undo-tree-id13770 . -3) (undo-tree-id13771 . -3) (undo-tree-id13772 . -3) (undo-tree-id13773 . -4) (undo-tree-id13774 . -4) (undo-tree-id13775 . -4) (undo-tree-id13776 . -4) (undo-tree-id13777 . -4) (undo-tree-id13778 . -5) (undo-tree-id13779 . -5) (undo-tree-id13780 . -5) (undo-tree-id13781 . -5) (undo-tree-id13782 . -5) (undo-tree-id13783 . -6) (undo-tree-id13784 . -6) (undo-tree-id13785 . -6) (undo-tree-id13786 . -6) (undo-tree-id13787 . -6) (undo-tree-id13788 . -6) (undo-tree-id13789 . -6) (undo-tree-id13790 . -6) (undo-tree-id13791 . -6) (undo-tree-id13792 . -6) (undo-tree-id13793 . -6) 5560) nil (26715 16809 787522 453000) 0 nil])
([nil nil ((5554 . 5568)) nil (26715 16809 787485 91000) 0 nil])
([nil nil ((5569 . 5570)) nil (26715 16809 787484 533000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -5547) (undo-tree-id13710 . -7) (undo-tree-id13711 . -7) (undo-tree-id13712 . -7) (undo-tree-id13713 . -7) (undo-tree-id13714 . -7) (undo-tree-id13715 . -7) (undo-tree-id13716 . -7) (undo-tree-id13717 . -7) (undo-tree-id13718 . -7) (undo-tree-id13719 . -7) (undo-tree-id13720 . -7) (undo-tree-id13721 . -7) (undo-tree-id13722 . -7) (undo-tree-id13723 . -7) (undo-tree-id13724 . -7) (undo-tree-id13725 . -7) (undo-tree-id13726 . -7) (undo-tree-id13727 . -7) (undo-tree-id13728 . -7) (undo-tree-id13729 . -7) (undo-tree-id13730 . -7) (undo-tree-id13731 . -7) (undo-tree-id13732 . -7) (undo-tree-id13733 . -7) (undo-tree-id13734 . -7) (undo-tree-id13735 . -7) (undo-tree-id13736 . -7) (undo-tree-id13737 . -7) (undo-tree-id13738 . -7) (undo-tree-id13739 . -7) (undo-tree-id13740 . -7) (undo-tree-id13741 . -7) (undo-tree-id13742 . -7) (undo-tree-id13743 . -7) (undo-tree-id13744 . -7) (undo-tree-id13745 . -7) (undo-tree-id13746 . -7) (undo-tree-id13747 . -7) (undo-tree-id13748 . -7) (undo-tree-id13749 . -7) (undo-tree-id13750 . -7) (undo-tree-id13751 . -7) (undo-tree-id13752 . -7) (undo-tree-id13753 . -7) (undo-tree-id13754 . -7) (undo-tree-id13755 . -7) (undo-tree-id13756 . -7) 5554) nil (26715 16809 787481 958000) 0 nil])
([nil nil ((5547 . 5553)) nil (26715 16809 787435 3000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5552) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) 5553) nil (26715 16809 787434 21000) 0 nil])
([nil nil ((#("str =" 0 3 (face font-lock-builtin-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-operator-face fontified t)) . -5547) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -2) (undo-tree-id13671 . -2) (undo-tree-id13672 . -2) (undo-tree-id13673 . -2) (undo-tree-id13674 . -2) (undo-tree-id13675 . -3) (undo-tree-id13676 . -3) (undo-tree-id13677 . -3) (undo-tree-id13678 . -3) (undo-tree-id13679 . -3) (undo-tree-id13680 . -4) (undo-tree-id13681 . -4) (undo-tree-id13682 . -4) (undo-tree-id13683 . -4) (undo-tree-id13684 . -4) (undo-tree-id13685 . -4) (undo-tree-id13686 . -5) (undo-tree-id13687 . -5) (undo-tree-id13688 . -5) (undo-tree-id13689 . -5) (undo-tree-id13690 . -5) (undo-tree-id13691 . -5) (undo-tree-id13692 . -5) (undo-tree-id13693 . -5) (undo-tree-id13694 . -5) (undo-tree-id13695 . -5) (undo-tree-id13696 . -5) (undo-tree-id13697 . -5) (undo-tree-id13698 . -5) (undo-tree-id13699 . -5) (undo-tree-id13700 . -5) (undo-tree-id13701 . -5) (undo-tree-id13702 . -5) 5552) nil (26715 16809 787424 763000) 0 nil])
([nil nil ((5547 . 5551)) nil (26715 16809 787377 222000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -5550) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) 5551) nil (26715 16809 787375 483000) 0 nil])
([nil nil ((5550 . 5561)) nil (26715 16809 787360 2000) 0 nil])
([nil nil ((5577 . 5582)) nil (26715 16976 958412 377000) 0 nil])
([nil nil ((5582 . 5600)) ((#("return sha3_string" 0 6 (face font-lock-keyword-face)) . 5582) (t 26715 16809 810697 91000)) (26715 16977 889141 915000) 0 nil])
([nil nil ((1534 . 1538) (t 26715 16809 810697 91000)) nil (26715 17320 412022 880000) 0 nil] [nil nil ((1499 . 1502) (t 26715 16809 810697 91000)) ((#("But" 0 3 (fontified t)) . 1499) (undo-tree-id13794 . -3)) (26715 16975 538510 871000) 0 nil])
([nil nil ((#("z" 0 1 (face font-lock-comment-face fontified t)) . -2249) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) 2250 (t 26715 17320 434328 622000)) nil (26715 17509 916190 716000) 0 nil])
nil
([nil nil ((2249 . 2257)) nil (26715 17509 916161 301000) 0 nil])
([nil nil ((2257 . 2258)) nil (26715 17509 916160 660000) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -2257) (undo-tree-id13801 . -1) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) 2258) nil (26715 17509 916159 481000) 0 nil])
([nil nil ((2257 . 2258)) nil (26715 17509 916152 416000) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -2257) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) 2258) nil (26715 17509 916150 220000) 0 nil])
([nil nil ((2257 . 2259)) nil (26715 17661 224239 906000) 0 nil])
([nil nil ((2672 . 2689) (t 26715 17509 937797 810000)) nil (26715 17920 446206 578000) 0 nil] [nil nil ((2138 . 2144) (t 26715 17509 937797 810000)) ((#("Can yo" 0 6 (fontified t)) . 2138) (undo-tree-id13828 . -6)) (26715 17661 224053 18000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2685) (undo-tree-id13906 . -4) (undo-tree-id13907 . -4) (undo-tree-id13908 . -4) (undo-tree-id13909 . -4) (undo-tree-id13910 . -4) (undo-tree-id13911 . -4) (undo-tree-id13912 . -4) (undo-tree-id13913 . -4) (undo-tree-id13914 . -4) (undo-tree-id13915 . -4) (undo-tree-id13916 . -4) (undo-tree-id13917 . -4) (undo-tree-id13918 . -4) (undo-tree-id13919 . -4) (undo-tree-id13920 . -4) (undo-tree-id13921 . -4) (undo-tree-id13922 . -4) (undo-tree-id13923 . -4) (undo-tree-id13924 . -4) (undo-tree-id13925 . -4) (undo-tree-id13926 . -4) (undo-tree-id13927 . -4) 2689) nil (26715 17920 446205 542000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -2681) (undo-tree-id13877 . -4) (undo-tree-id13878 . -4) (undo-tree-id13879 . -4) (undo-tree-id13880 . -4) (undo-tree-id13881 . -4) (undo-tree-id13882 . -4) (undo-tree-id13883 . -4) (undo-tree-id13884 . -4) (undo-tree-id13885 . -4) (undo-tree-id13886 . -4) (undo-tree-id13887 . -4) (undo-tree-id13888 . -4) (undo-tree-id13889 . -4) (undo-tree-id13890 . -4) (undo-tree-id13891 . -4) (undo-tree-id13892 . -4) (undo-tree-id13893 . -4) (undo-tree-id13894 . -4) (undo-tree-id13895 . -4) (undo-tree-id13896 . -4) (undo-tree-id13897 . -4) (undo-tree-id13898 . -4) (undo-tree-id13899 . -4) (undo-tree-id13900 . -4) (undo-tree-id13901 . -4) (undo-tree-id13902 . -4) (undo-tree-id13903 . -4) (undo-tree-id13904 . -4) (undo-tree-id13905 . -4) 2685) nil (26715 17920 446189 463000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2677) (undo-tree-id13841 . -4) (undo-tree-id13842 . -4) (undo-tree-id13843 . -4) (undo-tree-id13844 . -4) (undo-tree-id13845 . -4) (undo-tree-id13846 . -4) (undo-tree-id13847 . -4) (undo-tree-id13848 . -4) (undo-tree-id13849 . -4) (undo-tree-id13850 . -4) (undo-tree-id13851 . -4) (undo-tree-id13852 . -4) (undo-tree-id13853 . -4) (undo-tree-id13854 . -4) (undo-tree-id13855 . -4) (undo-tree-id13856 . -4) (undo-tree-id13857 . -4) (undo-tree-id13858 . -4) (undo-tree-id13859 . -4) (undo-tree-id13860 . -4) (undo-tree-id13861 . -4) (undo-tree-id13862 . -4) (undo-tree-id13863 . -4) (undo-tree-id13864 . -4) (undo-tree-id13865 . -4) (undo-tree-id13866 . -4) (undo-tree-id13867 . -4) (undo-tree-id13868 . -4) (undo-tree-id13869 . -4) (undo-tree-id13870 . -4) (undo-tree-id13871 . -4) (undo-tree-id13872 . -4) (undo-tree-id13873 . -4) (undo-tree-id13874 . -4) (undo-tree-id13875 . -4) (undo-tree-id13876 . -4) 2681) nil (26715 17920 446169 777000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2742 . 2743) (nil fontified nil 2677 . 2743) (2677 . 2743)) nil (26715 17920 446141 488000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2742) (undo-tree-id13829 . -1) (undo-tree-id13830 . -1) (undo-tree-id13831 . -1) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) 2743) nil (26715 17920 446137 398000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4519) (undo-tree-id13928 . -1) (undo-tree-id13929 . -1) (undo-tree-id13930 . -1) (undo-tree-id13931 . -1) (undo-tree-id13932 . -1) (undo-tree-id13933 . -1) (undo-tree-id13934 . -1) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (undo-tree-id13941 . -1) (undo-tree-id13942 . -1) (undo-tree-id13943 . -1) (undo-tree-id13944 . -1) (undo-tree-id13945 . -1) (#("i" 0 1 (fontified t)) . -4520) (undo-tree-id13946 . -1) (undo-tree-id13947 . -1) (undo-tree-id13948 . -1) (undo-tree-id13949 . -1) (undo-tree-id13950 . -1) (undo-tree-id13951 . -1) 4521 (t 26715 17920 465677 460000)) nil (26715 18097 142772 442000) 0 nil])
([nil nil ((4519 . 4524)) nil (26715 18097 142732 328000) 0 nil])
([nil nil ((#("    print(\"C[0][0] =\", [A[0][y][0] for y in range(5)], \"->\", C[0][0])" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 21 (face font-lock-string-face fontified t) 21 35 (fontified t) 35 38 (face font-lock-keyword-face fontified t) 38 41 (fontified t) 41 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 49 (face font-lock-builtin-face fontified t) 49 55 (fontified t) 55 59 (face font-lock-string-face fontified t) 59 69 (fontified t)) . 2673) (undo-tree-id13953 . -4) (undo-tree-id13954 . -7) (undo-tree-id13955 . -7) (undo-tree-id13956 . -7) (undo-tree-id13957 . -7) (undo-tree-id13958 . -7) (undo-tree-id13959 . -69) (undo-tree-id13960 . -69) (undo-tree-id13961 . -69) (undo-tree-id13962 . -69) (undo-tree-id13963 . -69) (undo-tree-id13964 . -69) (t 26715 18097 166160 525000)) nil (26715 18170 808923 9000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2673) (undo-tree-id13952 . -1)) nil (26715 18170 808903 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5765 . 5766) (nil fontified nil 5765 . 5766) (nil fontified nil 5753 . 5765) (nil fontified nil 5747 . 5753) (nil fontified nil 5743 . 5747) (nil fontified nil 5726 . 5743) (nil fontified nil 5725 . 5726) (nil fontified nil 5724 . 5725) (nil fontified nil 5723 . 5724) (nil fontified nil 5712 . 5723) (nil fontified nil 5708 . 5712) (nil fontified nil 5707 . 5708) (nil fontified nil 5706 . 5707) (nil fontified nil 5666 . 5706) (nil fontified nil 5665 . 5666) (nil fontified nil 5664 . 5665) (nil fontified nil 5663 . 5664) (nil fontified nil 5662 . 5663) (nil fontified nil 5658 . 5662) (nil fontified nil 5657 . 5658) (nil fontified nil 5642 . 5657) (nil fontified nil 5641 . 5642) (nil fontified nil 5640 . 5641) (nil fontified nil 5639 . 5640) (nil fontified nil 5638 . 5639) (nil fontified nil 5634 . 5638) (nil fontified nil 5629 . 5634) (nil fontified nil 5621 . 5629) (nil fontified nil 5620 . 5621) (nil fontified nil 5617 . 5620) (5617 . 5766) (t 26715 18170 832302 517000)) nil (26715 19881 122504 323000) 0 nil])
([nil nil ((5617 . 5618)) nil (26715 19881 122494 424000) 0 nil])
([nil nil ((5767 . 5768)) nil (26715 19881 122493 862000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5916 . 5917) (nil fontified nil 5916 . 5917) (nil fontified nil 5904 . 5916) (nil fontified nil 5898 . 5904) (nil fontified nil 5894 . 5898) (nil fontified nil 5877 . 5894) (nil fontified nil 5876 . 5877) (nil fontified nil 5875 . 5876) (nil fontified nil 5874 . 5875) (nil fontified nil 5863 . 5874) (nil fontified nil 5859 . 5863) (nil fontified nil 5858 . 5859) (nil fontified nil 5857 . 5858) (nil fontified nil 5817 . 5857) (nil fontified nil 5816 . 5817) (nil fontified nil 5815 . 5816) (nil fontified nil 5814 . 5815) (nil fontified nil 5813 . 5814) (nil fontified nil 5809 . 5813) (nil fontified nil 5808 . 5809) (nil fontified nil 5793 . 5808) (nil fontified nil 5792 . 5793) (nil fontified nil 5791 . 5792) (nil fontified nil 5790 . 5791) (nil fontified nil 5789 . 5790) (nil fontified nil 5785 . 5789) (nil fontified nil 5780 . 5785) (nil fontified nil 5772 . 5780) (nil fontified nil 5771 . 5772) (nil fontified nil 5768 . 5771) (5768 . 5917)) nil (26715 19881 122492 293000) 0 nil])
([nil nil ((5917 . 5918)) nil (26715 19881 122488 519000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6066 . 6067) (nil fontified nil 6066 . 6067) (nil fontified nil 6054 . 6066) (nil fontified nil 6048 . 6054) (nil fontified nil 6044 . 6048) (nil fontified nil 6027 . 6044) (nil fontified nil 6026 . 6027) (nil fontified nil 6025 . 6026) (nil fontified nil 6024 . 6025) (nil fontified nil 6013 . 6024) (nil fontified nil 6009 . 6013) (nil fontified nil 6008 . 6009) (nil fontified nil 6007 . 6008) (nil fontified nil 5967 . 6007) (nil fontified nil 5966 . 5967) (nil fontified nil 5965 . 5966) (nil fontified nil 5964 . 5965) (nil fontified nil 5963 . 5964) (nil fontified nil 5959 . 5963) (nil fontified nil 5958 . 5959) (nil fontified nil 5943 . 5958) (nil fontified nil 5942 . 5943) (nil fontified nil 5941 . 5942) (nil fontified nil 5940 . 5941) (nil fontified nil 5939 . 5940) (nil fontified nil 5935 . 5939) (nil fontified nil 5930 . 5935) (nil fontified nil 5922 . 5930) (nil fontified nil 5921 . 5922) (nil fontified nil 5918 . 5921) (5918 . 6067)) nil (26715 19881 122486 909000) 0 nil])
([nil nil ((#("224" 0 3 (face font-lock-function-name-face fontified t)) . -5627) (undo-tree-id14053 . -3) (undo-tree-id14054 . -3) (undo-tree-id14055 . -3) (undo-tree-id14056 . -3) (undo-tree-id14057 . -3) (undo-tree-id14058 . -3) (undo-tree-id14059 . -3) (undo-tree-id14060 . -3) (undo-tree-id14061 . -3) (undo-tree-id14062 . -3) (undo-tree-id14063 . -3) 5630) nil (26715 19881 122482 361000) 0 nil])
([nil nil ((5627 . 5630)) nil (26715 19881 122470 866000) 0 nil])
([nil nil ((#("224" 0 3 (face font-lock-function-name-face fontified t)) . -5777) (undo-tree-id14042 . -3) (undo-tree-id14043 . -3) (undo-tree-id14044 . -3) (undo-tree-id14045 . -3) (undo-tree-id14046 . -3) (undo-tree-id14047 . -3) (undo-tree-id14048 . -3) (undo-tree-id14049 . -3) (undo-tree-id14050 . -3) (undo-tree-id14051 . -3) (undo-tree-id14052 . -3) 5780) nil (26715 19881 122469 743000) 0 nil])
([nil nil ((5777 . 5780)) nil (26715 19881 122457 999000) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-function-name-face fontified t)) . -5779) (undo-tree-id14036 . -1) (undo-tree-id14037 . -1) (undo-tree-id14038 . -1) (undo-tree-id14039 . -1) (undo-tree-id14040 . -1) (undo-tree-id14041 . -1) 5780) nil (26715 19881 122457 8000) 0 nil])
([nil nil ((5779 . 5780)) nil (26715 19881 122449 980000) 0 nil])
([nil nil ((#("224" 0 3 (face font-lock-function-name-face fontified t)) . -5927) (undo-tree-id14030 . -3) (undo-tree-id14031 . -3) (undo-tree-id14032 . -3) (undo-tree-id14033 . -3) (undo-tree-id14034 . -3) (undo-tree-id14035 . -3) 5930) nil (26715 19881 122448 855000) 0 nil])
([nil nil ((5927 . 5930)) nil (26715 19881 122442 819000) 0 nil])
([nil nil ((#("448" 0 3 (fontified t)) . -5704) (undo-tree-id14024 . -3) (undo-tree-id14025 . -3) (undo-tree-id14026 . -3) (undo-tree-id14027 . -3) (undo-tree-id14028 . -3) (undo-tree-id14029 . -3) 5707) nil (26715 19881 122441 781000) 0 nil])
([nil nil ((#("224, " 0 5 (fontified t)) . -5699) (undo-tree-id14013 . -5) (undo-tree-id14014 . -5) (undo-tree-id14015 . -5) (undo-tree-id14016 . -5) (undo-tree-id14017 . -5) (undo-tree-id14018 . -5) (undo-tree-id14019 . -5) (undo-tree-id14020 . -5) (undo-tree-id14021 . -5) (undo-tree-id14022 . -5) (undo-tree-id14023 . -5) 5704) nil (26715 19881 122435 208000) 0 nil])
([nil nil ((5699 . 5708)) nil (26715 19881 122420 780000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -5705) (undo-tree-id13965 . -1) (undo-tree-id13966 . -1) (undo-tree-id13967 . -1) (undo-tree-id13968 . -1) (undo-tree-id13969 . -1) (undo-tree-id13970 . -1) (undo-tree-id13971 . -1) (undo-tree-id13972 . -1) (undo-tree-id13973 . -1) (undo-tree-id13974 . -1) (undo-tree-id13975 . -1) (undo-tree-id13976 . -1) (undo-tree-id13977 . -1) (undo-tree-id13978 . -1) (undo-tree-id13979 . -1) (undo-tree-id13980 . -1) (undo-tree-id13981 . -1) (undo-tree-id13982 . -1) (undo-tree-id13983 . -1) (undo-tree-id13984 . -1) (undo-tree-id13985 . -1) (undo-tree-id13986 . -1) (undo-tree-id13987 . -1) (undo-tree-id13988 . -1) (undo-tree-id13989 . -1) (undo-tree-id13990 . -1) (#("1" 0 1 (fontified t)) . -5706) (undo-tree-id13991 . -1) (undo-tree-id13992 . -1) (undo-tree-id13993 . -1) (undo-tree-id13994 . -1) (undo-tree-id13995 . -1) (undo-tree-id13996 . -1) (undo-tree-id13997 . -1) (undo-tree-id13998 . -1) (undo-tree-id13999 . -1) (undo-tree-id14000 . -1) (undo-tree-id14001 . -1) (undo-tree-id14002 . -1) (undo-tree-id14003 . -1) (undo-tree-id14004 . -1) (undo-tree-id14005 . -1) (undo-tree-id14006 . -1) (#("2" 0 1 (fontified t)) . -5707) (undo-tree-id14007 . -1) (undo-tree-id14008 . -1) (undo-tree-id14009 . -1) (undo-tree-id14010 . -1) (undo-tree-id14011 . -1) (undo-tree-id14012 . -1) 5708) nil (26715 19881 122417 104000) 0 nil])
([nil nil ((5705 . 5707)) nil (26715 19881 122347 974000) 0 nil])
([nil nil ((#("448" 0 3 (fontified t)) . -5854) (undo-tree-id14113 . -3) (undo-tree-id14114 . -3) (undo-tree-id14115 . -3) (undo-tree-id14116 . -3) (undo-tree-id14117 . -3) (undo-tree-id14118 . -3) 5857 (t 26715 19881 144707 218000)) nil (26715 19915 741492 625000) 0 nil])
([nil nil ((#("224, " 0 5 (fontified t)) . -5849) (undo-tree-id14101 . -5) (undo-tree-id14102 . -5) (undo-tree-id14103 . -5) (undo-tree-id14104 . -5) (undo-tree-id14105 . -5) (undo-tree-id14106 . -5) (undo-tree-id14107 . -5) (undo-tree-id14108 . -5) (undo-tree-id14109 . -5) (undo-tree-id14110 . -5) (undo-tree-id14111 . -5) (undo-tree-id14112 . -5) 5854) nil (26715 19915 741481 800000) 0 nil])
([nil nil ((5849 . 5857)) nil (26715 19915 741469 171000) 0 nil])
([nil nil ((#("448" 0 3 (fontified t)) . -6004) (undo-tree-id14085 . -3) (undo-tree-id14086 . -3) (undo-tree-id14087 . -3) (undo-tree-id14088 . -3) (undo-tree-id14089 . -3) (undo-tree-id14090 . -3) (undo-tree-id14091 . -3) (undo-tree-id14092 . -3) (undo-tree-id14093 . -3) (undo-tree-id14094 . -3) (undo-tree-id14095 . -3) (undo-tree-id14096 . -3) (undo-tree-id14097 . -3) (undo-tree-id14098 . -3) (undo-tree-id14099 . -3) (undo-tree-id14100 . -3) 6007) nil (26715 19915 741467 617000) 0 nil])
([nil nil ((#("224, " 0 5 (fontified t)) . -5999) (undo-tree-id14064 . -5) (undo-tree-id14065 . -5) (undo-tree-id14066 . -5) (undo-tree-id14067 . -5) (undo-tree-id14068 . -5) (undo-tree-id14069 . -5) (undo-tree-id14070 . -5) (undo-tree-id14071 . -5) (undo-tree-id14072 . -5) (undo-tree-id14073 . -5) (undo-tree-id14074 . -5) (undo-tree-id14075 . -5) (undo-tree-id14076 . -5) (undo-tree-id14077 . -5) (undo-tree-id14078 . -5) (undo-tree-id14079 . -5) (undo-tree-id14080 . -5) (undo-tree-id14081 . -5) (undo-tree-id14082 . -5) (undo-tree-id14083 . -5) (undo-tree-id14084 . -5) 6004) nil (26715 19915 741448 137000) 0 nil])
([nil nil ((5999 . 6008)) nil (26715 19915 741411 986000) 0 nil])
([nil nil ((4879 . 4890) (t 26715 19915 763242 209000)) nil (26715 20471 697286 677000) 0 nil])
([nil nil ((5063 . 5074) (t 26715 20471 720584 22000)) nil (26715 20520 317483 184000) 0 nil])
([nil nil ((#("int" 0 3 (face font-lock-builtin-face fontified t)) . -5071) (undo-tree-id14206 . -3) (undo-tree-id14207 . -3) (undo-tree-id14208 . -3) (undo-tree-id14209 . -3) (undo-tree-id14210 . -3) (undo-tree-id14211 . -3) (undo-tree-id14212 . -3) (undo-tree-id14213 . -3) (undo-tree-id14214 . -3) (undo-tree-id14215 . -3) (undo-tree-id14216 . -3) (undo-tree-id14217 . -3) (undo-tree-id14218 . -3) (undo-tree-id14219 . -3) (undo-tree-id14220 . -3) (undo-tree-id14221 . -3) (undo-tree-id14222 . -3) (undo-tree-id14223 . -3) 5074 (t 26715 20520 340711 399000)) nil (26715 20564 515634 140000) 0 nil])
([nil nil ((#("dtype=" 0 5 (fontified t) 5 6 (face font-lock-operator-face fontified t)) . -5065) (undo-tree-id14182 . -6) (undo-tree-id14183 . -6) (undo-tree-id14184 . -6) (undo-tree-id14185 . -6) (undo-tree-id14186 . -6) (undo-tree-id14187 . -6) (undo-tree-id14188 . -6) (undo-tree-id14189 . -6) (undo-tree-id14190 . -6) (undo-tree-id14191 . -6) (undo-tree-id14192 . -6) (undo-tree-id14193 . -6) (undo-tree-id14194 . -6) (undo-tree-id14195 . -6) (undo-tree-id14196 . -6) (undo-tree-id14197 . -6) (undo-tree-id14198 . -6) (undo-tree-id14199 . -6) (undo-tree-id14200 . -6) (undo-tree-id14201 . -6) (undo-tree-id14202 . -6) (undo-tree-id14203 . -6) (undo-tree-id14204 . -6) (undo-tree-id14205 . -6) 5071) nil (26715 20564 515621 32000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -5063) (undo-tree-id14119 . -1) (undo-tree-id14120 . -1) (undo-tree-id14121 . -1) (undo-tree-id14122 . -1) (undo-tree-id14123 . -1) (undo-tree-id14124 . -1) (undo-tree-id14125 . -1) (undo-tree-id14126 . -1) (undo-tree-id14127 . -1) (undo-tree-id14128 . -1) (undo-tree-id14129 . -1) (undo-tree-id14130 . -1) (undo-tree-id14131 . -1) (undo-tree-id14132 . -1) (undo-tree-id14133 . -1) (undo-tree-id14134 . -1) (undo-tree-id14135 . -1) (undo-tree-id14136 . -1) (undo-tree-id14137 . -1) (undo-tree-id14138 . -1) (undo-tree-id14139 . -1) (undo-tree-id14140 . -1) (undo-tree-id14141 . -1) (undo-tree-id14142 . -1) (undo-tree-id14143 . -1) (undo-tree-id14144 . -1) (undo-tree-id14145 . -1) (undo-tree-id14146 . -1) (undo-tree-id14147 . -1) (undo-tree-id14148 . -1) (undo-tree-id14149 . -1) (undo-tree-id14150 . -1) (undo-tree-id14151 . -1) (undo-tree-id14152 . -1) (#(" " 0 1 (fontified t)) . -5064) (undo-tree-id14153 . -1) (undo-tree-id14154 . -1) (undo-tree-id14155 . -1) (undo-tree-id14156 . -1) (undo-tree-id14157 . -1) (undo-tree-id14158 . -1) (undo-tree-id14159 . -1) (undo-tree-id14160 . -1) (undo-tree-id14161 . -1) (undo-tree-id14162 . -1) (undo-tree-id14163 . -1) (undo-tree-id14164 . -1) (undo-tree-id14165 . -1) (undo-tree-id14166 . -1) (undo-tree-id14167 . -1) (undo-tree-id14168 . -1) (undo-tree-id14169 . -1) (undo-tree-id14170 . -1) (undo-tree-id14171 . -1) (undo-tree-id14172 . -1) (undo-tree-id14173 . -1) (undo-tree-id14174 . -1) (undo-tree-id14175 . -1) (undo-tree-id14176 . -1) (undo-tree-id14177 . -1) (undo-tree-id14178 . -1) (undo-tree-id14179 . -1) (undo-tree-id14180 . -1) (undo-tree-id14181 . -1) 5065) nil (26715 20564 515600 18000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . -5446) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (undo-tree-id14238 . -1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1) (undo-tree-id14244 . -1) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (undo-tree-id14248 . -1) (undo-tree-id14249 . -1) (undo-tree-id14250 . -1) (undo-tree-id14251 . -1) (undo-tree-id14252 . -1) (undo-tree-id14253 . -1) (undo-tree-id14254 . -1) (undo-tree-id14255 . -1) (undo-tree-id14256 . -1) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (undo-tree-id14259 . -1) (undo-tree-id14260 . -1) (undo-tree-id14261 . -1) (undo-tree-id14262 . -1) (undo-tree-id14263 . -1) (undo-tree-id14264 . -1) (undo-tree-id14265 . -1) (undo-tree-id14266 . -1) (undo-tree-id14267 . -1) (undo-tree-id14268 . -1) (undo-tree-id14269 . -1) (undo-tree-id14270 . -1) (undo-tree-id14271 . -1) (undo-tree-id14272 . -1) (undo-tree-id14273 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -5447) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (undo-tree-id14276 . -1) (undo-tree-id14277 . -1) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (#(" " 0 1 (fontified t)) . -5448) (undo-tree-id14281 . -1) 5449 (t 26715 20564 537953 492000)) nil (26715 20664 256704 597000) 0 nil])
([nil nil ((5446 . 5447)) nil (26715 20664 256646 763000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -5446) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) 5447) nil (26715 20664 256645 985000) 0 nil])
([nil nil ((5446 . 5450)) nil (26715 20664 256637 737000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -5449) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . -1) 5450) nil (26715 20664 256636 611000) 0 nil])
([nil nil ((5449 . 5464)) nil (26715 20664 256623 239000) 0 nil])
([nil nil ((5474 . 5475)) nil (26715 20664 256618 462000) 0 nil])
([nil nil ((#("    print(sums)" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 15 (fontified t)) . 1027) (undo-tree-id14289 . -15) (undo-tree-id14290 . -15) (undo-tree-id14291 . -15) (undo-tree-id14292 . -15) (undo-tree-id14293 . -15) (undo-tree-id14294 . -15) (t 26715 20664 277890 111000)) nil (26715 21053 413771 52000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1027) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1)) nil (26715 21053 413762 749000) 0 nil])
([nil nil ((5221 . 5230) (5178 . 5207) (#(" " 0 1 (fontified nil)) . 5178) (5177 . 5178) (5191 . 5192) (5108 . 5136) (#("        " 0 8 (fontified nil)) . 5108) (5170 . 5171) (t 26715 21053 435268 263000)) nil (26715 21851 217131 848000) 0 nil])
([nil nil ((5629 . 5634) (t 26715 21851 239154 137000)) nil (26715 21916 690028 599000) 0 nil])
([nil nil ((5634 . 5642)) nil (26715 21916 690023 693000) 0 nil])
([nil nil ((5331 . 5340) (t 26715 21916 714338 412000)) nil (26715 22064 640152 650000) 0 nil])
([nil nil ((5340 . 5341)) nil (26715 22064 640152 73000) 0 nil])
([nil nil ((5341 . 5342)) nil (26715 22064 640151 674000) 0 nil])
([nil nil ((5342 . 5363)) nil (26715 22064 640151 235000) 0 nil])
([nil nil ((5363 . 5367)) nil (26715 22064 640150 213000) 0 nil])
([nil nil ((apply -2 5368 5472 undo--wrap-and-run-primitive-undo 5368 5472 ((5376 . 5378) 5449))) nil (26715 22064 640145 767000) 0 nil])
([nil nil ((5367 . 5376) (t 26715 22064 661334 77000)) nil (26715 22070 750480 68000) 0 nil])
([nil nil ((5376 . 5391)) nil (26715 22070 750474 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7029 . 7030) (nil fontified nil 7029 . 7030) (nil fontified nil 7011 . 7029) (nil fontified nil 7006 . 7011) (nil fontified nil 7004 . 7006) (nil fontified nil 7003 . 7004) (nil fontified nil 7001 . 7003) (nil fontified nil 6999 . 7001) (nil fontified nil 6984 . 6999) (nil fontified nil 6982 . 6984) (nil fontified nil 6981 . 6982) (nil fontified nil 6980 . 6981) (nil fontified nil 6975 . 6980) (nil fontified nil 6971 . 6975) (nil fontified nil 6970 . 6971) (nil fontified nil 6955 . 6970) (nil fontified nil 6954 . 6955) (nil fontified nil 6952 . 6954) (nil fontified nil 6950 . 6952) (nil fontified nil 6934 . 6950) (nil fontified nil 6932 . 6934) (nil fontified nil 6931 . 6932) (nil fontified nil 6930 . 6931) (nil fontified nil 6925 . 6930) (nil fontified nil 6921 . 6925) (6921 . 7030) (t 26715 22070 773542 18000)) nil (26715 22194 198131 476000) 0 nil])
([nil nil ((#("INPUT_STRING = \"testing!\"*25
" 0 12 (face font-lock-variable-name-face fontified t) 12 13 (fontified t) 13 14 (face font-lock-operator-face fontified t) 14 15 (fontified t) 15 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-operator-face fontified t) 26 28 (fontified t) 28 29 (fontified t)) . 6737) (undo-tree-id14295 . -29) 6766) nil (26715 22194 198129 4000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6811 . 6812) (nil fontified nil 6811 . 6812) (nil fontified nil 6809 . 6811) (nil fontified nil 6808 . 6809) (nil fontified nil 6798 . 6808) (nil fontified nil 6797 . 6798) (nil fontified nil 6796 . 6797) (nil fontified nil 6795 . 6796) (nil fontified nil 6783 . 6795) (6783 . 6812)) nil (26715 22194 198119 864000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6812)) nil (26715 22194 198118 226000) 0 nil])
([nil nil ((6783 . 6787)) nil (26715 22194 198117 809000) 0 nil])
([nil nil ((6816 . 6820) 6820) nil (26715 22194 198117 46000) 0 nil])
([nil nil ((6924 . 6929)) nil (26715 22194 198116 118000) 0 nil])
([nil nil ((6929 . 6946)) nil (26715 22194 198111 653000) 0 nil])
([nil nil ((6945 . 6946) (t 26715 22194 219763 698000)) nil (26715 22232 42295 276000) 0 nil])
([nil nil ((5231 . 5236) (t 26715 22232 64065 436000)) nil (26715 22688 76420 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5479 . 5480) (nil fontified nil 5232 . 5480) (5232 . 5480)) nil (26715 22688 76419 884000) 0 nil])
([nil nil ((#("python
Copy
Edit
" 0 17 (fontified t)) . 5233) (undo-tree-id14296 . -17) (undo-tree-id14297 . -17) (undo-tree-id14298 . -17) (undo-tree-id14299 . -17) (undo-tree-id14300 . -17) (undo-tree-id14301 . -17) (undo-tree-id14302 . -17) (undo-tree-id14303 . -17) (undo-tree-id14304 . -17) (undo-tree-id14305 . -17) (undo-tree-id14306 . -17) (undo-tree-id14307 . -17) (undo-tree-id14308 . -17) (undo-tree-id14309 . -17) (undo-tree-id14310 . -17) (undo-tree-id14311 . -17) (undo-tree-id14312 . -17) (undo-tree-id14313 . -17) (undo-tree-id14314 . -17) (undo-tree-id14315 . -17) (undo-tree-id14316 . -17) (undo-tree-id14317 . -17) (undo-tree-id14318 . -17) (undo-tree-id14319 . -17) (undo-tree-id14320 . -17) (undo-tree-id14321 . -12) (undo-tree-id14322 . -12) (undo-tree-id14323 . -12) (undo-tree-id14324 . -12) (undo-tree-id14325 . -12) (undo-tree-id14326 . -12) (undo-tree-id14327 . -12) (undo-tree-id14328 . -7) (undo-tree-id14329 . -7) (undo-tree-id14330 . -7) (undo-tree-id14331 . -7) (undo-tree-id14332 . -7)) nil (26715 22688 76416 786000) 0 nil])
([nil nil ((5410 . 5414) (5342 . 5346) (5289 . 5293) (5233 . 5237) 5468) nil (26715 22688 76363 877000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -7197) (undo-tree-id14333 . -1) 7198 (t 26715 22688 99466 536000)) nil (26715 22699 456328 175000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -7159) (undo-tree-id14361 . -1) (undo-tree-id14362 . -1) (undo-tree-id14363 . -1) (undo-tree-id14364 . -1) (undo-tree-id14365 . -1) (undo-tree-id14366 . -1) (undo-tree-id14367 . -1) (undo-tree-id14368 . -1) (undo-tree-id14369 . -1) (undo-tree-id14370 . -1) (undo-tree-id14371 . -1) (undo-tree-id14372 . -1) (#("4" 0 1 (fontified t)) . -7160) (undo-tree-id14373 . -1) (undo-tree-id14374 . -1) (undo-tree-id14375 . -1) (undo-tree-id14376 . -1) (undo-tree-id14377 . -1) (undo-tree-id14378 . -1) 7161 (t 26715 22699 478401 545000)) nil (26715 22892 343776 830000) 0 nil])
([nil nil ((7159 . 7161)) nil (26715 22892 343662 211000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -7290) (undo-tree-id14334 . -1) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) (undo-tree-id14337 . -1) (undo-tree-id14338 . -1) (undo-tree-id14339 . -1) (undo-tree-id14340 . -1) (undo-tree-id14341 . -1) (undo-tree-id14342 . -1) (undo-tree-id14343 . -1) (undo-tree-id14344 . -1) (undo-tree-id14345 . -1) (undo-tree-id14346 . -1) (undo-tree-id14347 . -1) (undo-tree-id14348 . -1) (undo-tree-id14349 . -1) (#("4" 0 1 (fontified t)) . -7291) (undo-tree-id14350 . -1) (undo-tree-id14351 . -1) (undo-tree-id14352 . -1) (undo-tree-id14353 . -1) (undo-tree-id14354 . -1) (undo-tree-id14355 . -1) (undo-tree-id14356 . -1) (undo-tree-id14357 . -1) (undo-tree-id14358 . -1) (undo-tree-id14359 . -1) (undo-tree-id14360 . -1) 7292) nil (26715 22892 343657 243000) 0 nil])
([nil nil ((7290 . 7292)) nil (26715 22892 343571 976000) 0 nil])
([nil nil ((5480 . 5484) (#("    " 0 4 (face font-lock-comment-face fontified nil)) . 5479) (undo-tree-id14385 . -4) (5483 . 5484) (t 26715 22892 427384 482000)) nil (26715 22971 106144 100000) 0 nil])
([nil nil ((5484 . 5504)) nil (26715 22971 106140 181000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . -5503) (undo-tree-id14379 . -1) (undo-tree-id14380 . -1) (undo-tree-id14381 . -1) (undo-tree-id14382 . -1) (undo-tree-id14383 . -1) (undo-tree-id14384 . -1) 5504) nil (26715 22971 106137 815000) 0 nil])
([nil nil ((5503 . 5508)) nil (26715 22971 106105 164000) 0 nil])
([nil nil ((5508 . 5528)) nil (26715 22971 106096 144000) 0 nil])
([nil nil ((4998 . 5003) (t 26715 22971 158868 104000)) nil (26715 23070 926805 469000) 0 nil])
([nil nil ((5003 . 5011)) nil (26715 23070 926803 863000) 0 nil])
([nil nil ((5011 . 5016)) nil (26715 23070 926801 818000) 0 nil])
([nil nil ((5016 . 5029)) nil (26715 23070 926791 229000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5028) (undo-tree-id14392 . -1) (undo-tree-id14393 . -1) (undo-tree-id14394 . -1) (undo-tree-id14395 . -1) (undo-tree-id14396 . -1) (undo-tree-id14397 . -1) (undo-tree-id14398 . -1) (undo-tree-id14399 . -1) (undo-tree-id14400 . -1) (undo-tree-id14401 . -1) (undo-tree-id14402 . -1) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) 5029 (t 26715 23071 1801 187000)) nil (26715 23076 650221 269000) 0 nil])
([nil nil ((5028 . 5034)) nil (26715 23076 650154 809000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -5033) (undo-tree-id14386 . -1) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) (undo-tree-id14391 . -1) 5034) nil (26715 23076 650149 406000) 0 nil])
([nil nil ((5033 . 5035)) nil (26715 23076 650095 923000) 0 nil])
([nil nil ((5035 . 5047)) nil (26715 23076 650077 452000) 0 nil])
([nil nil ((5097 . 5102) (t 26715 23076 719864 219000)) nil (26715 23111 477890 72000) 0 nil])
([nil nil ((5102 . 5110)) nil (26715 23111 477879 357000) 0 nil])
([nil nil ((#("    print(P)" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 12 (fontified t)) . 5098) (undo-tree-id14431 . -12) (undo-tree-id14432 . -12) (undo-tree-id14433 . -12) (undo-tree-id14434 . -12) (undo-tree-id14435 . -12) (undo-tree-id14436 . -12) (undo-tree-id14437 . -12) (undo-tree-id14438 . -12) (undo-tree-id14439 . -12) (undo-tree-id14440 . -12) (undo-tree-id14441 . -12) (undo-tree-id14442 . -12) (undo-tree-id14443 . -12) (undo-tree-id14444 . -12) (undo-tree-id14445 . -12) (undo-tree-id14446 . -12) (undo-tree-id14447 . -12) (undo-tree-id14448 . -12) (undo-tree-id14449 . -12) (undo-tree-id14450 . -12) (undo-tree-id14451 . -12) (undo-tree-id14452 . -12) (undo-tree-id14453 . -12) (undo-tree-id14454 . -12) (undo-tree-id14455 . -12) (undo-tree-id14456 . -12) (undo-tree-id14457 . -12) (undo-tree-id14458 . -12) (undo-tree-id14459 . -12) (undo-tree-id14460 . -12) (undo-tree-id14461 . -12) (undo-tree-id14462 . -12) (undo-tree-id14463 . -12) (undo-tree-id14464 . -12) (undo-tree-id14465 . -12) (undo-tree-id14466 . -12) (undo-tree-id14467 . -12) (undo-tree-id14468 . -12) (undo-tree-id14469 . -12) (undo-tree-id14470 . -12) (undo-tree-id14471 . -12) (undo-tree-id14472 . -12) (undo-tree-id14473 . -12) (undo-tree-id14474 . -12) (undo-tree-id14475 . -12) (undo-tree-id14476 . -12) (undo-tree-id14477 . -12) (t 26715 23111 547268 546000)) nil (26715 23122 479538 511000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5098) (undo-tree-id14430 . -1)) nil (26715 23122 479400 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5294 . 5295) (nil fontified nil 5294 . 5295) (nil fontified nil 5291 . 5294) (nil fontified nil 5286 . 5291) (nil fontified nil 5282 . 5286) (5282 . 5295)) nil (26715 23122 479389 832000) 0 nil])
([nil nil ((#("    print(N)
    print(pad101(1600 - c, len(N)))
" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 13 (fontified t) 13 17 (fontified t) 17 22 (face font-lock-builtin-face fontified t) 22 35 (fontified t) 35 36 (face font-lock-operator-face fontified t) 36 40 (fontified t) 40 43 (face font-lock-builtin-face fontified t) 43 48 (fontified t) 48 49 (fontified t)) . 4999) (undo-tree-id14405 . -49) (undo-tree-id14406 . -49) (undo-tree-id14407 . -49) (undo-tree-id14408 . -49) (undo-tree-id14409 . -49) (undo-tree-id14410 . -13) (undo-tree-id14411 . -13) (undo-tree-id14412 . -13) (undo-tree-id14413 . -13) (undo-tree-id14414 . -13) (undo-tree-id14415 . -13) (undo-tree-id14416 . -13) (undo-tree-id14417 . -13) (undo-tree-id14418 . -13) (undo-tree-id14419 . -13) (undo-tree-id14420 . -13) (undo-tree-id14421 . -13) (undo-tree-id14422 . -49) (undo-tree-id14423 . -49) (undo-tree-id14424 . -49) (undo-tree-id14425 . -49) (undo-tree-id14426 . -49) (undo-tree-id14427 . -49) (undo-tree-id14428 . -49) (undo-tree-id14429 . -49) 5048) nil (26715 23122 479378 793000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5281 . 5282) (nil fontified nil 5281 . 5282) (nil fontified nil 5276 . 5281) (nil fontified nil 5273 . 5276) (nil fontified nil 5269 . 5273) (nil fontified nil 5268 . 5269) (nil fontified nil 5255 . 5268) (nil fontified nil 5250 . 5255) (nil fontified nil 5246 . 5250) (nil fontified nil 5242 . 5246) (nil fontified nil 5237 . 5242) (nil fontified nil 5233 . 5237) (5233 . 5282)) nil (26715 23122 479278 368000) 0 nil])
([nil nil ((5243 . 5247) (t 26715 23122 548403 322000)) nil (26715 23139 818408 127000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -5245) (undo-tree-id14520 . -1) (undo-tree-id14521 . -1) (undo-tree-id14522 . -1) (undo-tree-id14523 . -1) (undo-tree-id14524 . -1) (undo-tree-id14525 . -1) (undo-tree-id14526 . -1) (undo-tree-id14527 . -1) (undo-tree-id14528 . -1) (undo-tree-id14529 . -1) (undo-tree-id14530 . -1) (undo-tree-id14531 . -1) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) (undo-tree-id14534 . -1) (undo-tree-id14535 . -1) (#(":" 0 1 (fontified t)) . -5246) (undo-tree-id14536 . -1) (undo-tree-id14537 . -1) (undo-tree-id14538 . -1) (undo-tree-id14539 . -1) (undo-tree-id14540 . -1) (undo-tree-id14541 . -1) 5247) nil (26715 23139 818404 920000) 0 nil])
([nil nil ((5245 . 5248)) nil (26715 23139 818363 788000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -5246) (undo-tree-id14491 . -1) (undo-tree-id14492 . -1) (undo-tree-id14493 . -1) (undo-tree-id14494 . -1) (undo-tree-id14495 . -1) (undo-tree-id14496 . -1) (undo-tree-id14497 . -1) (undo-tree-id14498 . -1) (undo-tree-id14499 . -1) (undo-tree-id14500 . -1) (undo-tree-id14501 . -1) (undo-tree-id14502 . -1) (undo-tree-id14503 . -1) (undo-tree-id14504 . -1) (undo-tree-id14505 . -1) (undo-tree-id14506 . -1) (undo-tree-id14507 . -1) (undo-tree-id14508 . -1) (undo-tree-id14509 . -1) (undo-tree-id14510 . -1) (undo-tree-id14511 . -1) (undo-tree-id14512 . -1) (#(" " 0 1 (fontified t)) . -5247) (undo-tree-id14513 . -1) (undo-tree-id14514 . -1) (undo-tree-id14515 . -1) (undo-tree-id14516 . -1) (undo-tree-id14517 . -1) (undo-tree-id14518 . -1) (undo-tree-id14519 . -1) 5248) nil (26715 23139 818360 189000) 0 nil])
([nil nil ((5246 . 5249)) nil (26715 23139 818305 379000) 0 nil])
([nil nil ((5262 . 5272)) nil (26715 23139 818304 219000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5271) (undo-tree-id14484 . -1) (undo-tree-id14485 . -1) (undo-tree-id14486 . -1) (undo-tree-id14487 . -1) (undo-tree-id14488 . -1) (undo-tree-id14489 . -1) (undo-tree-id14490 . -1) 5272) nil (26715 23139 818302 318000) 0 nil])
([nil nil ((5271 . 5273)) nil (26715 23139 818281 26000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -5309) (undo-tree-id14478 . -1) (undo-tree-id14479 . -1) (undo-tree-id14480 . -1) (undo-tree-id14481 . -1) (undo-tree-id14482 . -1) (undo-tree-id14483 . -1) 5310) nil (26715 23139 818278 91000) 0 nil])
([nil nil ((5309 . 5315)) nil (26715 23139 818246 396000) 0 nil])
([nil nil ((5311 . 5313)) nil (26715 23139 818236 575000) 0 nil])
([nil nil ((5495 . 5500) (t 26715 23139 904622 568000)) nil (26715 23199 236210 285000) 0 nil])
([nil nil ((5500 . 5521)) nil (26715 23199 236208 570000) 0 nil])
([nil nil ((5521 . 5529)) nil (26715 23199 236207 195000) 0 nil])
([nil nil ((#("    print(\"P_blocks: \", P_blocks)
" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 22 (face font-lock-string-face fontified t) 22 33 (fontified t) 33 34 (fontified t)) . 5496) (undo-tree-id14542 . -34) (undo-tree-id14543 . -34) (undo-tree-id14544 . -34) (undo-tree-id14545 . -34) (undo-tree-id14546 . -34) (undo-tree-id14547 . -34) (undo-tree-id14548 . -34) (undo-tree-id14549 . -34) (undo-tree-id14550 . -34) (undo-tree-id14551 . -34) (undo-tree-id14552 . -34) (undo-tree-id14553 . -34) (undo-tree-id14554 . -34) (undo-tree-id14555 . -34) (undo-tree-id14556 . -34) 5530) nil (26715 23199 236203 231000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5461 . 5462) (nil fontified nil 5461 . 5462) (nil fontified nil 5450 . 5461) (nil fontified nil 5438 . 5450) (nil fontified nil 5437 . 5438) (nil fontified nil 5432 . 5437) (nil fontified nil 5428 . 5432) (5428 . 5462)) nil (26715 23375 90930 288000) 0 nil])
([nil nil ((apply -18 5233 5706 undo--wrap-and-run-primitive-undo 5233 5706 ((5620 . 5622) (5548 . 5550) (5478 . 5480) (5442 . 5444) (5387 . 5389) (5329 . 5331) (5307 . 5309) (5258 . 5260) (5237 . 5239) 5649 (t 26715 23199 300430 747000)))) nil (26715 23965 963012 244000) 0 nil] [nil nil ((#("    print(\"N:\", N)
    print(\"pad101:\", pad101(1600 - c, len(N)))
    print(\"P: \", P)
    print(\"len(P):\", len(P))           # should be 1088
    print(\"n:\", n)                     # should be 1
    print(\"P_blocks: \", P_blocks)
    print(\"P_blocks.shape:\", P_blocks.shape)  # should be (1, 1088)
    print(\"P_blocks[0][:8]:\", P_blocks[0][:8])  # should be [1, 0, 0,
    print(\"P_blocks[0][-8:]:\", P_blocks[0][-8:])
" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 14 (face font-lock-string-face fontified t) 14 16 (fontified t) 16 19 (fontified t) 19 23 (fontified t) 23 28 (face font-lock-builtin-face fontified t) 28 29 (fontified t) 29 38 (face font-lock-string-face fontified t) 38 40 (fontified t) 40 52 (fontified t) 52 53 (face font-lock-operator-face fontified t) 53 57 (fontified t) 57 60 (face font-lock-builtin-face fontified t) 60 65 (fontified t) 65 66 (fontified t rear-nonsticky t) 66 70 (fontified t) 70 75 (face font-lock-builtin-face fontified t) 75 76 (fontified t) 76 81 (face font-lock-string-face fontified t) 81 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t rear-nonsticky t) 86 90 (fontified t) 90 95 (face font-lock-builtin-face fontified t) 95 96 (fontified t) 96 105 (face font-lock-string-face fontified t) 105 107 (fontified t) 107 110 (face font-lock-builtin-face fontified t) 110 125 (fontified t) 125 127 (face font-lock-comment-delimiter-face fontified t) 127 142 (face font-lock-comment-face fontified t) 142 146 (fontified t) 146 151 (face font-lock-builtin-face fontified t) 151 152 (fontified t) 152 156 (face font-lock-string-face fontified t) 156 181 (fontified t) 181 183 (face font-lock-comment-delimiter-face fontified t) 183 195 (face font-lock-comment-face fontified t) 195 199 (fontified t) 199 204 (face font-lock-builtin-face fontified t) 204 205 (fontified t) 205 217 (face font-lock-string-face fontified t) 217 228 (fontified t) 228 229 (rear-nonsticky t fontified t) 229 233 (fontified t) 233 238 (face font-lock-builtin-face fontified t) 238 239 (fontified t) 239 256 (face font-lock-string-face fontified t) 256 275 (fontified t) 275 277 (face font-lock-comment-delimiter-face fontified t) 277 297 (face font-lock-comment-face fontified t) 297 301 (fontified t) 301 306 (face font-lock-builtin-face fontified t) 306 307 (fontified t) 307 325 (face font-lock-string-face fontified t) 325 345 (fontified t) 345 347 (face font-lock-comment-delimiter-face fontified t) 347 365 (face font-lock-comment-face fontified t) 365 366 (face font-lock-comment-face fontified t rear-nonsticky t) 366 367 (face font-lock-comment-face fontified t) 367 371 (fontified t) 371 376 (face font-lock-builtin-face fontified t) 376 377 (fontified t) 377 396 (face font-lock-string-face fontified t) 396 410 (fontified t) 410 411 (face font-lock-operator-face fontified t) 411 415 (fontified t) 415 416 (fontified t)) . 5233) (undo-tree-id14557 . -416) (undo-tree-id14558 . -297) (undo-tree-id14559 . -402) (undo-tree-id14560 . -402) (undo-tree-id14561 . -402) (undo-tree-id14562 . -402) (undo-tree-id14563 . -402) (undo-tree-id14564 . -367) (undo-tree-id14565 . -367) (undo-tree-id14566 . -367) (undo-tree-id14567 . -367) (undo-tree-id14568 . -367) (undo-tree-id14569 . -416) (undo-tree-id14570 . -416) (undo-tree-id14571 . -416) (undo-tree-id14572 . -416) (undo-tree-id14573 . -416) (undo-tree-id14574 . -416) (undo-tree-id14575 . -416) (undo-tree-id14576 . -416) (undo-tree-id14577 . -416) (undo-tree-id14578 . -416) (undo-tree-id14579 . -416) (undo-tree-id14580 . -416) (undo-tree-id14581 . -195) (undo-tree-id14582 . -416) (undo-tree-id14583 . -416) (undo-tree-id14584 . -416) (undo-tree-id14585 . -416) (undo-tree-id14586 . -416) (undo-tree-id14587 . -416) (undo-tree-id14588 . -416) (undo-tree-id14589 . -416) (undo-tree-id14590 . -416) (undo-tree-id14591 . -416) (undo-tree-id14592 . -416) (undo-tree-id14593 . -416) (undo-tree-id14594 . -367) (undo-tree-id14595 . -367) (undo-tree-id14596 . -367) (undo-tree-id14597 . -367) (undo-tree-id14598 . -367) (undo-tree-id14599 . -367) (undo-tree-id14600 . -367) (undo-tree-id14601 . -297) (undo-tree-id14602 . -297) (undo-tree-id14603 . -297) (undo-tree-id14604 . -297) (undo-tree-id14605 . -297) (undo-tree-id14606 . -229) (undo-tree-id14607 . -229) (undo-tree-id14608 . -229) (undo-tree-id14609 . -229) (undo-tree-id14610 . -229) (undo-tree-id14611 . -195) (undo-tree-id14612 . -195) (undo-tree-id14613 . -195) (undo-tree-id14614 . -195) (undo-tree-id14615 . -195) (undo-tree-id14616 . -142) (undo-tree-id14617 . -142) (undo-tree-id14618 . -142) (undo-tree-id14619 . -142) (undo-tree-id14620 . -142) (undo-tree-id14621 . -86) (undo-tree-id14622 . -86) (undo-tree-id14623 . -86) (undo-tree-id14624 . -86) (undo-tree-id14625 . -86) (undo-tree-id14626 . -66) (undo-tree-id14627 . -66) (undo-tree-id14628 . -66) (undo-tree-id14629 . -66) (undo-tree-id14630 . -66) (undo-tree-id14631 . -19) (undo-tree-id14632 . -19) (undo-tree-id14633 . -19) (undo-tree-id14634 . -19) (undo-tree-id14635 . -19) (t 26715 23199 300430 747000)) ((5233 . 5649)) (26715 23375 89992 815000) 0 nil])
([nil nil ((6114 . 6120)) nil (26715 23965 963010 976000) 0 nil])
nil
([nil nil ((#("dtyp" 0 4 (fontified t)) . -6116) (undo-tree-id14638 . -4) 6120) nil (26715 23965 963008 599000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6114) (undo-tree-id14636 . -1) (#(" " 0 1 (fontified t)) . -6115) (undo-tree-id14637 . -1) 6116) nil (26715 23965 963002 73000) 0 nil])
([nil nil ((apply 2 5233 5252 undo--wrap-and-run-primitive-undo 5233 5252 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5237) 5254))) nil (26715 23965 962971 436000) 0 nil])
([nil nil ((5251 . 5256) (t 26715 23966 54802 492000)) nil (26715 23974 541719 598000) 0 nil])
([nil nil ((5256 . 5263)) nil (26715 23974 541717 440000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -5262) (undo-tree-id14639 . -1) (undo-tree-id14640 . -1) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1) 5263) nil (26715 23974 541711 899000) 0 nil])
([nil nil ((5262 . 5280)) nil (26715 23974 541638 231000) 0 nil])
([nil nil ((6266 . 6271) (t 26715 23974 661005 354000)) nil (26715 24304 733811 562000) 0 nil])
([nil nil ((6271 . 6292)) nil (26715 24304 733810 293000) 0 nil])
([nil nil ((6292 . 6310)) nil (26715 24304 733809 275000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6309) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) 6310) nil (26715 24304 733807 520000) 0 nil])
([nil nil ((6309 . 6318)) nil (26715 24304 733794 347000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -6317) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) 6318) nil (26715 24304 733792 664000) 0 nil])
([nil nil ((6317 . 6322)) nil (26715 24304 733782 251000) 0 nil])
([nil nil ((#("1])" 0 3 (fontified t)) . -6358) (undo-tree-id14739 . -2) (undo-tree-id14740 . -2) (undo-tree-id14741 . -2) (undo-tree-id14742 . -2) (undo-tree-id14743 . -2) (undo-tree-id14744 . -3) (undo-tree-id14745 . -3) (undo-tree-id14746 . -3) (undo-tree-id14747 . -3) (undo-tree-id14748 . -3) (undo-tree-id14749 . -3) 6361) nil (26715 24304 733780 264000) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -6355) (undo-tree-id14723 . -3) (undo-tree-id14724 . -3) (undo-tree-id14725 . -3) (undo-tree-id14726 . -3) (undo-tree-id14727 . -3) (undo-tree-id14728 . -3) (undo-tree-id14729 . -3) (undo-tree-id14730 . -3) (undo-tree-id14731 . -3) (undo-tree-id14732 . -3) (undo-tree-id14733 . -3) (undo-tree-id14734 . -3) (undo-tree-id14735 . -3) (undo-tree-id14736 . -3) (undo-tree-id14737 . -3) (undo-tree-id14738 . -3) 6358) nil (26715 24304 733760 687000) 0 nil])
([nil nil ((#("A, [" 0 4 (fontified t)) . -6351) (undo-tree-id14702 . -4) (undo-tree-id14703 . -4) (undo-tree-id14704 . -4) (undo-tree-id14705 . -4) (undo-tree-id14706 . -4) (undo-tree-id14707 . -4) (undo-tree-id14708 . -4) (undo-tree-id14709 . -4) (undo-tree-id14710 . -4) (undo-tree-id14711 . -4) (undo-tree-id14712 . -4) (undo-tree-id14713 . -4) (undo-tree-id14714 . -4) (undo-tree-id14715 . -4) (undo-tree-id14716 . -4) (undo-tree-id14717 . -4) (undo-tree-id14718 . -4) (undo-tree-id14719 . -4) (undo-tree-id14720 . -4) (undo-tree-id14721 . -4) (undo-tree-id14722 . -4) 6355) nil (26715 24304 733730 872000) 0 nil])
([nil nil ((#("append(" 0 7 (fontified t)) . -6344) (undo-tree-id14676 . -7) (undo-tree-id14677 . -7) (undo-tree-id14678 . -7) (undo-tree-id14679 . -7) (undo-tree-id14680 . -7) (undo-tree-id14681 . -7) (undo-tree-id14682 . -7) (undo-tree-id14683 . -7) (undo-tree-id14684 . -7) (undo-tree-id14685 . -7) (undo-tree-id14686 . -7) (undo-tree-id14687 . -7) (undo-tree-id14688 . -7) (undo-tree-id14689 . -7) (undo-tree-id14690 . -7) (undo-tree-id14691 . -7) (undo-tree-id14692 . -7) (undo-tree-id14693 . -7) (undo-tree-id14694 . -7) (undo-tree-id14695 . -7) (undo-tree-id14696 . -7) (undo-tree-id14697 . -7) (undo-tree-id14698 . -7) (undo-tree-id14699 . -7) (undo-tree-id14700 . -7) (undo-tree-id14701 . -7) 6351) nil (26715 24304 733693 314000) 0 nil])
([nil nil ((#("numpy." 0 6 (fontified t)) . -6338) (undo-tree-id14645 . -6) (undo-tree-id14646 . -6) (undo-tree-id14647 . -6) (undo-tree-id14648 . -6) (undo-tree-id14649 . -6) (undo-tree-id14650 . -6) (undo-tree-id14651 . -6) (undo-tree-id14652 . -6) (undo-tree-id14653 . -6) (undo-tree-id14654 . -6) (undo-tree-id14655 . -6) (undo-tree-id14656 . -6) (undo-tree-id14657 . -6) (undo-tree-id14658 . -6) (undo-tree-id14659 . -6) (undo-tree-id14660 . -6) (undo-tree-id14661 . -6) (undo-tree-id14662 . -6) (undo-tree-id14663 . -6) (undo-tree-id14664 . -6) (undo-tree-id14665 . -6) (undo-tree-id14666 . -6) (undo-tree-id14667 . -6) (undo-tree-id14668 . -6) (undo-tree-id14669 . -6) (undo-tree-id14670 . -6) (undo-tree-id14671 . -6) (undo-tree-id14672 . -6) (undo-tree-id14673 . -6) (undo-tree-id14674 . -6) (undo-tree-id14675 . -6) 6344) nil (26715 24304 733629 39000) 0 nil])
([nil nil ((6338 . 6339)) nil (26715 24304 733541 601000) 0 nil])
([nil nil ((6350 . 6355) (t 26715 24304 796020 933000)) nil (26715 24312 255271 668000) 0 nil])
([nil nil ((6355 . 6363)) nil (26715 24312 255260 739000) 0 nil])
([nil nil ((6350 . 6352) (t 26715 24312 317492 677000)) nil (26715 28806 737444 680000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -6350) (undo-tree-id14895 . -1) (#("`" 0 1 (fontified t)) . -6351) (undo-tree-id14896 . -1) 6352) nil (26715 28806 737443 880000) 0 nil])
([nil nil ((5280 . 5285)) nil (26715 28806 737440 610000) 0 nil])
([nil nil ((5285 . 5293)) nil (26715 28806 737440 371000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -5291) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (undo-tree-id14879 . -1) (undo-tree-id14880 . -1) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (#("D" 0 1 (face font-lock-string-face fontified t)) . -5292) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (undo-tree-id14891 . -1) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (undo-tree-id14894 . -1) 5293) nil (26715 28806 737439 462000) 0 nil])
([nil nil ((5291 . 5295)) nil (26715 28806 737427 319000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -5293) (undo-tree-id14851 . -1) (undo-tree-id14852 . -1) (undo-tree-id14853 . -1) (undo-tree-id14854 . -1) (undo-tree-id14855 . -1) (undo-tree-id14856 . -1) (undo-tree-id14857 . -1) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (undo-tree-id14862 . -1) (undo-tree-id14863 . -1) (undo-tree-id14864 . -1) (undo-tree-id14865 . -1) (undo-tree-id14866 . -1) (#(":" 0 1 (fontified t)) . -5294) (undo-tree-id14867 . -1) (undo-tree-id14868 . -1) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) (undo-tree-id14871 . -1) (undo-tree-id14872 . -1) 5295) nil (26715 28806 737426 477000) 0 nil])
([nil nil ((5293 . 5298)) nil (26715 28806 737414 397000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5295) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) (undo-tree-id14798 . -1) (undo-tree-id14799 . -1) (undo-tree-id14800 . -1) (undo-tree-id14801 . -1) (undo-tree-id14802 . -1) (undo-tree-id14803 . -1) (undo-tree-id14804 . -1) (undo-tree-id14805 . -1) (undo-tree-id14806 . -1) (undo-tree-id14807 . -1) (undo-tree-id14808 . -1) (undo-tree-id14809 . -1) (undo-tree-id14810 . -1) (undo-tree-id14811 . -1) (undo-tree-id14812 . -1) (undo-tree-id14813 . -1) (undo-tree-id14814 . -1) (#("d" 0 1 (fontified t)) . -5296) (undo-tree-id14815 . -1) (undo-tree-id14816 . -1) (undo-tree-id14817 . -1) (undo-tree-id14818 . -1) (undo-tree-id14819 . -1) (undo-tree-id14820 . -1) (undo-tree-id14821 . -1) (undo-tree-id14822 . -1) (undo-tree-id14823 . -1) (undo-tree-id14824 . -1) (undo-tree-id14825 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) (undo-tree-id14828 . -1) (undo-tree-id14829 . -1) (undo-tree-id14830 . -1) (undo-tree-id14831 . -1) (undo-tree-id14832 . -1) (undo-tree-id14833 . -1) (undo-tree-id14834 . -1) (undo-tree-id14835 . -1) (undo-tree-id14836 . -1) (undo-tree-id14837 . -1) (#(")" 0 1 (fontified t)) . -5297) (undo-tree-id14838 . -1) (undo-tree-id14839 . -1) (undo-tree-id14840 . -1) (undo-tree-id14841 . -1) (undo-tree-id14842 . -1) (undo-tree-id14843 . -1) (undo-tree-id14844 . -1) (undo-tree-id14845 . -1) (undo-tree-id14846 . -1) (undo-tree-id14847 . -1) (undo-tree-id14848 . -1) (undo-tree-id14849 . -1) (undo-tree-id14850 . -1) 5298) nil (26715 28806 737412 748000) 0 nil])
([nil nil ((5295 . 5299)) nil (26715 28806 737373 689000) 0 nil])
([nil nil ((5299 . 5304)) nil (26715 28806 737373 464000) 0 nil])
([nil nil ((5304 . 5313)) nil (26715 28806 737373 117000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -5312) (undo-tree-id14770 . -1) (undo-tree-id14771 . -1) (undo-tree-id14772 . -1) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) 5313) nil (26715 28806 737372 519000) 0 nil])
([nil nil ((5312 . 5315)) nil (26715 28806 737368 732000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5314) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) (undo-tree-id14766 . -1) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -1) 5315) nil (26715 28806 737367 630000) 0 nil])
([nil nil ((5314 . 5318)) nil (26715 28806 737353 768000) 0 nil])
([nil nil ((#("512)" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -6384) (undo-tree-id14915 . -4) (undo-tree-id14916 . -4) (undo-tree-id14917 . -4) (undo-tree-id14918 . -4) (undo-tree-id14919 . -4) (undo-tree-id14920 . -4) 6388 (t 26715 28806 755864 380000)) nil (26715 28851 75210 213000) 0 nil])
([nil nil ((#("256, " 0 5 (fontified t)) . -6379) (undo-tree-id14903 . -5) (undo-tree-id14904 . -5) (undo-tree-id14905 . -5) (undo-tree-id14906 . -5) (undo-tree-id14907 . -5) (undo-tree-id14908 . -5) (undo-tree-id14909 . -5) (undo-tree-id14910 . -5) (undo-tree-id14911 . -5) (undo-tree-id14912 . -5) (undo-tree-id14913 . -5) (undo-tree-id14914 . -5) 6384) nil (26715 28851 75205 62000) 0 nil])
([nil nil ((6379 . 6386)) nil (26715 28851 75193 341000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -6385) (undo-tree-id14897 . -1) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) 6386) nil (26715 28851 75192 88000) 0 nil])
([nil nil ((6385 . 6388)) nil (26715 28851 75175 706000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . -7563) (undo-tree-id14946 . -1) (#("4" 0 1 (face font-lock-string-face fontified t)) . -7564) (undo-tree-id14947 . -1) 7565 (t 26715 28851 92417 878000)) nil (26715 29363 271926 740000) 0 nil])
([nil nil ((7563 . 7565)) nil (26715 29363 271923 404000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . -7432) (undo-tree-id14944 . -1) (#("4" 0 1 (face font-lock-string-face fontified t)) . -7433) (undo-tree-id14945 . -1) 7434) nil (26715 29363 271922 811000) 0 nil])
([nil nil ((7432 . 7434)) nil (26715 29363 271921 364000) 0 nil])
([nil nil ((#("256" 0 3 (fontified t)) . -6384) (undo-tree-id14938 . -3) (undo-tree-id14939 . -3) (undo-tree-id14940 . -3) (undo-tree-id14941 . -3) (undo-tree-id14942 . -3) (undo-tree-id14943 . -3) 6387) nil (26715 29363 271920 740000) 0 nil])
([nil nil ((#("512, " 0 5 (fontified t)) . -6379) (undo-tree-id14927 . -5) (undo-tree-id14928 . -5) (undo-tree-id14929 . -5) (undo-tree-id14930 . -5) (undo-tree-id14931 . -5) (undo-tree-id14932 . -5) (undo-tree-id14933 . -5) (undo-tree-id14934 . -5) (undo-tree-id14935 . -5) (undo-tree-id14936 . -5) (undo-tree-id14937 . -5) 6384) nil (26715 29363 271917 302000) 0 nil])
([nil nil ((6379 . 6385)) nil (26715 29363 271905 105000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -6384) (undo-tree-id14921 . -1) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) 6385) nil (26715 29363 271903 116000) 0 nil])
([nil nil ((6384 . 6387)) nil (26715 29363 271881 529000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -6386) (undo-tree-id14948 . -1) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) 6387 (t 26715 29363 287344 324000)) nil (26715 29364 232367 550000) 0 nil])
([nil nil ((6386 . 6387)) nil (26715 29364 232350 789000) 0 nil])
([nil nil ((5867 . 5876) (t 26715 29364 249344 144000)) nil (26715 29426 51290 543000) 0 nil])
([nil nil ((5876 . 5886)) nil (26715 29426 51289 996000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -5885) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (undo-tree-id14958 . -1) (undo-tree-id14959 . -1) (undo-tree-id14960 . -1) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) 5886) nil (26715 29426 51289 125000) 0 nil])
([nil nil ((5885 . 5890)) nil (26715 29426 51273 972000) 0 nil])
([nil nil ((apply 16 5319 5716 undo--wrap-and-run-primitive-undo 5319 5716 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5671) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5601) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5533) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5499) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5446) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5390) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5370) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5323) 5732 (t 26715 29426 68352 98000)))) nil (26715 29670 316543 771000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . -5616) (undo-tree-id15102 . -1) (undo-tree-id15103 . -1) (undo-tree-id15104 . -1) (undo-tree-id15105 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15109 . -1) (undo-tree-id15110 . -1) (undo-tree-id15111 . -1) (undo-tree-id15112 . -1) (undo-tree-id15113 . -1) (undo-tree-id15114 . -1) (undo-tree-id15115 . -1) (undo-tree-id15116 . -1) (undo-tree-id15117 . -1) (undo-tree-id15118 . -1) (undo-tree-id15119 . -1) (undo-tree-id15120 . -1) (undo-tree-id15121 . -1) (undo-tree-id15122 . -1) (undo-tree-id15123 . -1) (undo-tree-id15124 . -1) (undo-tree-id15125 . -1) (undo-tree-id15126 . -1) (undo-tree-id15127 . -1) (undo-tree-id15128 . -1) (undo-tree-id15129 . -1) (undo-tree-id15130 . -1) (undo-tree-id15131 . -1) (undo-tree-id15132 . -1) (undo-tree-id15133 . -1) (undo-tree-id15134 . -1) (undo-tree-id15135 . -1) (undo-tree-id15136 . -1) (undo-tree-id15137 . -1) (undo-tree-id15138 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -5617) (undo-tree-id15139 . -1) (undo-tree-id15140 . -1) (undo-tree-id15141 . -1) (undo-tree-id15142 . -1) (undo-tree-id15143 . -1) (undo-tree-id15144 . -1) (undo-tree-id15145 . -1) (undo-tree-id15146 . -1) (undo-tree-id15147 . -1) (undo-tree-id15148 . -1) (undo-tree-id15149 . -1) (undo-tree-id15150 . -1) (undo-tree-id15151 . -1) (undo-tree-id15152 . -1) (undo-tree-id15153 . -1) (undo-tree-id15154 . -1) (undo-tree-id15155 . -1) (undo-tree-id15156 . -1) (undo-tree-id15157 . -1) (undo-tree-id15158 . -1) (undo-tree-id15159 . -1) (undo-tree-id15160 . -1) (undo-tree-id15161 . -1) (undo-tree-id15162 . -1) (undo-tree-id15163 . -1) (undo-tree-id15164 . -1) (undo-tree-id15165 . -1) (undo-tree-id15166 . -1) (undo-tree-id15167 . -1) (undo-tree-id15168 . -1) (undo-tree-id15169 . -1) (undo-tree-id15170 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -5618) (undo-tree-id15171 . -1) (undo-tree-id15172 . -1) (undo-tree-id15173 . -1) (undo-tree-id15174 . -1) (undo-tree-id15175 . -1) (undo-tree-id15176 . -1) (undo-tree-id15177 . -1) (undo-tree-id15178 . -1) (undo-tree-id15179 . -1) (undo-tree-id15180 . -1) (undo-tree-id15181 . -1) (undo-tree-id15182 . -1) (undo-tree-id15183 . -1) (undo-tree-id15184 . -1) (undo-tree-id15185 . -1) (undo-tree-id15186 . -1) (undo-tree-id15187 . -1) (undo-tree-id15188 . -1) (undo-tree-id15189 . -1) (undo-tree-id15190 . -1) (undo-tree-id15191 . -1) (undo-tree-id15192 . -1) (undo-tree-id15193 . -1) (undo-tree-id15194 . -1) (undo-tree-id15195 . -1) (undo-tree-id15196 . -1) (undo-tree-id15197 . -1) (#("[" 0 1 (face font-lock-string-face fontified t)) . -5619) (undo-tree-id15198 . -1) (undo-tree-id15199 . -1) (undo-tree-id15200 . -1) (undo-tree-id15201 . -1) (undo-tree-id15202 . -1) (undo-tree-id15203 . -1) (undo-tree-id15204 . -1) (undo-tree-id15205 . -1) (undo-tree-id15206 . -1) (undo-tree-id15207 . -1) (undo-tree-id15208 . -1) (undo-tree-id15209 . -1) (undo-tree-id15210 . -1) (undo-tree-id15211 . -1) (undo-tree-id15212 . -1) (undo-tree-id15213 . -1) (undo-tree-id15214 . -1) (undo-tree-id15215 . -1) (undo-tree-id15216 . -1) (undo-tree-id15217 . -1) (undo-tree-id15218 . -1) (undo-tree-id15219 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -5620) (undo-tree-id15220 . -1) (undo-tree-id15221 . -1) (undo-tree-id15222 . -1) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) (undo-tree-id15225 . -1) (undo-tree-id15226 . -1) (undo-tree-id15227 . -1) (undo-tree-id15228 . -1) (undo-tree-id15229 . -1) (undo-tree-id15230 . -1) (undo-tree-id15231 . -1) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15234 . -1) (undo-tree-id15235 . -1) (undo-tree-id15236 . -1) (#("8" 0 1 (face font-lock-string-face fontified t)) . -5621) (undo-tree-id15237 . -1) (undo-tree-id15238 . -1) (undo-tree-id15239 . -1) (undo-tree-id15240 . -1) (undo-tree-id15241 . -1) (undo-tree-id15242 . -1) (undo-tree-id15243 . -1) (undo-tree-id15244 . -1) (undo-tree-id15245 . -1) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -5622) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) 5623 (t 26715 29670 331693 643000)) nil (26715 29703 666563 878000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 5628) (#("8" 0 1 (fontified t)) . 5628) (#(":" 0 1 (fontified t)) . 5628) (#("[" 0 1 (fontified t)) . 5628) (#("]" 0 1 (fontified t)) . 5628) (#("0" 0 1 (fontified t)) . 5628) (#("[" 0 1 (fontified t)) . 5628)) nil (26715 29703 666408 994000) 0 nil])
([nil nil ((#("    print(\"P_blocks[0][-8:]:\", P_blocks[0][-8:])" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 29 (face font-lock-string-face fontified t) 29 43 (fontified t) 43 44 (face font-lock-operator-face fontified t) 44 48 (fontified t)) . 5653) (undo-tree-id15063 . -25) (undo-tree-id15064 . -25) (undo-tree-id15065 . -25) (undo-tree-id15066 . -25) (undo-tree-id15067 . -25) (undo-tree-id15068 . -25) (undo-tree-id15069 . -25) (undo-tree-id15070 . -25) (undo-tree-id15071 . -25) (undo-tree-id15072 . -25) (undo-tree-id15073 . -25) (undo-tree-id15074 . -25) (undo-tree-id15075 . -25) (undo-tree-id15076 . -25) (undo-tree-id15077 . -25) (undo-tree-id15078 . -27) (undo-tree-id15079 . -27) (undo-tree-id15080 . -27) (undo-tree-id15081 . -27) (undo-tree-id15082 . -27) (undo-tree-id15083 . -27) (undo-tree-id15084 . -27) (undo-tree-id15085 . -27) (undo-tree-id15086 . -27) (undo-tree-id15087 . -27) (undo-tree-id15088 . -4) (undo-tree-id15089 . -4) (undo-tree-id15090 . -31) (undo-tree-id15091 . -31) (undo-tree-id15092 . -31) (undo-tree-id15093 . -31) (undo-tree-id15094 . -31) (undo-tree-id15095 . -31) (undo-tree-id15096 . -48) (undo-tree-id15097 . -48) (undo-tree-id15098 . -48) (undo-tree-id15099 . -48) (undo-tree-id15100 . -48) (undo-tree-id15101 . -48)) nil (26715 29703 666406 40000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5653) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (undo-tree-id14965 . -1) (undo-tree-id14966 . -1) (undo-tree-id14967 . -1) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) (undo-tree-id14970 . -1) (undo-tree-id14971 . -1) (undo-tree-id14972 . -1) (undo-tree-id14973 . -1) (undo-tree-id14974 . -1) (undo-tree-id14975 . -1) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (undo-tree-id14978 . -1) (undo-tree-id14979 . -1) (undo-tree-id14980 . -1) (undo-tree-id14981 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) (undo-tree-id14984 . -1) (undo-tree-id14985 . -1) (undo-tree-id14986 . -1) (undo-tree-id14987 . -1) (undo-tree-id14988 . -1) (undo-tree-id14989 . -1) (undo-tree-id14990 . -1) (undo-tree-id14991 . -1) (undo-tree-id14992 . -1) (undo-tree-id14993 . -1) (undo-tree-id14994 . -1) (undo-tree-id14995 . -1) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (undo-tree-id14998 . -1) (undo-tree-id14999 . -1) (undo-tree-id15000 . -1) (undo-tree-id15001 . -1) (undo-tree-id15002 . -1) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (undo-tree-id15005 . -1) (undo-tree-id15006 . -1) (undo-tree-id15007 . -1) (undo-tree-id15008 . -1) (undo-tree-id15009 . -1) (undo-tree-id15010 . -1) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) (undo-tree-id15024 . -1) (undo-tree-id15025 . -1) (undo-tree-id15026 . -1) (undo-tree-id15027 . -1) (undo-tree-id15028 . -1) (undo-tree-id15029 . -1) (undo-tree-id15030 . -1) (undo-tree-id15031 . -1) (undo-tree-id15032 . -1) (undo-tree-id15033 . -1) (undo-tree-id15034 . -1) (undo-tree-id15035 . -1) (undo-tree-id15036 . -1) (undo-tree-id15037 . -1) (undo-tree-id15038 . -1) (undo-tree-id15039 . -1) (undo-tree-id15040 . -1) (undo-tree-id15041 . -1) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) (undo-tree-id15044 . -1) (undo-tree-id15045 . -1) (undo-tree-id15046 . -1) (undo-tree-id15047 . -1) (undo-tree-id15048 . -1) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (undo-tree-id15051 . -1) (undo-tree-id15052 . -1) (undo-tree-id15053 . -1) (undo-tree-id15054 . -1) (undo-tree-id15055 . -1) (undo-tree-id15056 . -1) (undo-tree-id15057 . -1) (undo-tree-id15058 . -1) (undo-tree-id15059 . -1) (undo-tree-id15060 . -1) (undo-tree-id15061 . -1) (undo-tree-id15062 . -1)) nil (26715 29703 666346 300000) 0 nil])
([nil nil ((#("    print(\"P_blocks:\", P_blocks)  # should be [1, 0, 0," 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 21 (face font-lock-string-face fontified t) 21 34 (fontified t) 34 36 (face font-lock-comment-delimiter-face fontified t) 36 54 (face font-lock-comment-face fontified t) 54 55 (face font-lock-comment-face fontified t rear-nonsticky t)) . 5597) (undo-tree-id15414 . -19) (undo-tree-id15415 . -19) (undo-tree-id15416 . -19) (undo-tree-id15417 . -19) (undo-tree-id15418 . -19) (undo-tree-id15419 . -19) (undo-tree-id15420 . -19) (undo-tree-id15421 . -19) (undo-tree-id15422 . -19) (undo-tree-id15423 . -19) (undo-tree-id15424 . -19) (undo-tree-id15425 . -19) (undo-tree-id15426 . -19) (undo-tree-id15427 . -19) (undo-tree-id15428 . -19) (undo-tree-id15429 . -19) (undo-tree-id15430 . -19) (undo-tree-id15431 . -19) (undo-tree-id15432 . -19) (undo-tree-id15433 . -19) (undo-tree-id15434 . -19) (undo-tree-id15435 . -19) (undo-tree-id15436 . -19) (undo-tree-id15437 . -19) (undo-tree-id15438 . -19) (undo-tree-id15439 . -19) (undo-tree-id15440 . -19) (undo-tree-id15441 . -19) (undo-tree-id15442 . -19) (undo-tree-id15443 . -19) (undo-tree-id15444 . -19) (undo-tree-id15445 . -19) (undo-tree-id15446 . -19) (undo-tree-id15447 . -19) (undo-tree-id15448 . -19) (undo-tree-id15449 . -19) (undo-tree-id15450 . -55) (undo-tree-id15451 . -55) (undo-tree-id15452 . -55) (undo-tree-id15453 . -55) (undo-tree-id15454 . -55) (undo-tree-id15455 . -55) (t 26715 29703 695771 73000)) nil (26715 29743 617056 20000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5597) (undo-tree-id15255 . -1) (undo-tree-id15256 . -1) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) (undo-tree-id15260 . -1) (undo-tree-id15261 . -1) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (undo-tree-id15272 . -1) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (undo-tree-id15282 . -1) (undo-tree-id15283 . -1) (undo-tree-id15284 . -1) (undo-tree-id15285 . -1) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (undo-tree-id15292 . -1) (undo-tree-id15293 . -1) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (undo-tree-id15296 . -1) (undo-tree-id15297 . -1) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (undo-tree-id15300 . -1) (undo-tree-id15301 . -1) (undo-tree-id15302 . -1) (undo-tree-id15303 . -1) (undo-tree-id15304 . -1) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (undo-tree-id15307 . -1) (undo-tree-id15308 . -1) (undo-tree-id15309 . -1) (undo-tree-id15310 . -1) (undo-tree-id15311 . -1) (undo-tree-id15312 . -1) (undo-tree-id15313 . -1) (undo-tree-id15314 . -1) (undo-tree-id15315 . -1) (undo-tree-id15316 . -1) (undo-tree-id15317 . -1) (undo-tree-id15318 . -1) (undo-tree-id15319 . -1) (undo-tree-id15320 . -1) (undo-tree-id15321 . -1) (undo-tree-id15322 . -1) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (undo-tree-id15381 . -1) (undo-tree-id15382 . -1) (undo-tree-id15383 . -1) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) (undo-tree-id15391 . -1) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) (undo-tree-id15399 . -1) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1)) nil (26715 29743 617028 569000) 0 nil])
([nil nil ((5635 . 5640) (t 26715 29743 634871 613000)) nil (26715 29815 924908 822000) 0 nil])
([nil nil ((5640 . 5648)) nil (26715 29815 924908 377000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -5647) (undo-tree-id15463 . -1) (undo-tree-id15464 . -1) (undo-tree-id15465 . -1) (undo-tree-id15466 . -1) (undo-tree-id15467 . -1) (undo-tree-id15468 . -1) 5648) nil (26715 29815 924907 825000) 0 nil])
([nil nil ((5647 . 5650)) nil (26715 29815 924903 568000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -5649) (undo-tree-id15456 . -1) (undo-tree-id15457 . -1) (undo-tree-id15458 . -1) (undo-tree-id15459 . -1) (undo-tree-id15460 . -1) (undo-tree-id15461 . -1) (undo-tree-id15462 . -1) 5650) nil (26715 29815 924902 532000) 0 nil])
([nil nil ((5649 . 5654)) nil (26715 29815 924888 361000) 0 nil])
([nil nil ((5751 . 5760) (t 26715 29815 941073 432000)) nil (26715 29824 941888 206000) 0 nil])
([nil nil ((5760 . 5765)) nil (26715 29824 941887 745000) 0 nil])
([nil nil ((5765 . 5766)) nil (26715 29824 941887 300000) 0 nil])
([nil nil ((#("        print(" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t)) . 5752) (undo-tree-id15470 . -8) (undo-tree-id15471 . -8) (undo-tree-id15472 . -8) (undo-tree-id15473 . -8) (undo-tree-id15474 . -8) (undo-tree-id15475 . -8) (undo-tree-id15476 . -8) (undo-tree-id15477 . -8) (undo-tree-id15478 . -8) (undo-tree-id15479 . -8) (undo-tree-id15480 . -8) (undo-tree-id15481 . -8) (undo-tree-id15482 . -8) (undo-tree-id15483 . -8) (undo-tree-id15484 . -8) (undo-tree-id15485 . -8) (undo-tree-id15486 . -8) (undo-tree-id15487 . -9) (undo-tree-id15488 . -9) (undo-tree-id15489 . -9) (undo-tree-id15490 . -9) (undo-tree-id15491 . -9) (undo-tree-id15492 . -9) (undo-tree-id15493 . -9) (undo-tree-id15494 . -9) (undo-tree-id15495 . -9) (undo-tree-id15496 . -9) (undo-tree-id15497 . -10) (undo-tree-id15498 . -10) (undo-tree-id15499 . -10) (undo-tree-id15500 . -10) (undo-tree-id15501 . -10) (undo-tree-id15502 . -11) (undo-tree-id15503 . -11) (undo-tree-id15504 . -11) (undo-tree-id15505 . -11) (undo-tree-id15506 . -11) (undo-tree-id15507 . -12) (undo-tree-id15508 . -12) (undo-tree-id15509 . -12) (undo-tree-id15510 . -12) (undo-tree-id15511 . -12) (undo-tree-id15512 . -13) (undo-tree-id15513 . -13) (undo-tree-id15514 . -13) (undo-tree-id15515 . -13) (undo-tree-id15516 . -13) (undo-tree-id15517 . -14) (undo-tree-id15518 . -14) (undo-tree-id15519 . -14) (undo-tree-id15520 . -14) (undo-tree-id15521 . -14) (undo-tree-id15522 . -8) (undo-tree-id15523 . -8) (undo-tree-id15524 . -8) (undo-tree-id15525 . -8) (undo-tree-id15526 . -8) (undo-tree-id15527 . -8) (undo-tree-id15528 . -14) (undo-tree-id15529 . -14) (undo-tree-id15530 . -14) (undo-tree-id15531 . -14) (undo-tree-id15532 . -14) (undo-tree-id15533 . -14) (undo-tree-id15534 . -14) (undo-tree-id15535 . -14) (undo-tree-id15536 . -14) (undo-tree-id15537 . -14) (undo-tree-id15538 . -14)) nil (26715 29824 941884 785000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5752) (undo-tree-id15469 . -1)) nil (26715 29824 941823 871000) 0 nil])
([nil nil ((5924 . 5933) (t 26715 29824 962100 269000)) nil (26715 30145 759480 129000) 0 nil])
([nil nil ((5933 . 5935)) nil (26715 30145 759479 415000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -5934) (undo-tree-id15606 . -1) (undo-tree-id15607 . -1) (undo-tree-id15608 . -1) (undo-tree-id15609 . -1) (undo-tree-id15610 . -1) (undo-tree-id15611 . -1) 5935) nil (26715 30145 759478 975000) 0 nil])
([nil nil ((5934 . 5942)) nil (26715 30145 759475 751000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face fontified t)) . -5940) (undo-tree-id15584 . -1) (undo-tree-id15585 . -1) (undo-tree-id15586 . -1) (undo-tree-id15587 . -1) (undo-tree-id15588 . -1) (undo-tree-id15589 . -1) (undo-tree-id15590 . -1) (undo-tree-id15591 . -1) (undo-tree-id15592 . -1) (undo-tree-id15593 . -1) (undo-tree-id15594 . -1) (undo-tree-id15595 . -1) (undo-tree-id15596 . -1) (undo-tree-id15597 . -1) (undo-tree-id15598 . -1) (undo-tree-id15599 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -5941) (undo-tree-id15600 . -1) (undo-tree-id15601 . -1) (undo-tree-id15602 . -1) (undo-tree-id15603 . -1) (undo-tree-id15604 . -1) (undo-tree-id15605 . -1) 5942) nil (26715 30145 759474 928000) 0 nil])
([nil nil ((5940 . 5944)) nil (26715 30145 759462 903000) 0 nil])
([nil nil ((#("hey!" 0 4 (face font-lock-string-face fontified t)) . -5940) (undo-tree-id15563 . -1) (undo-tree-id15564 . -1) (undo-tree-id15565 . -1) (undo-tree-id15566 . -1) (undo-tree-id15567 . -1) (undo-tree-id15568 . -2) (undo-tree-id15569 . -2) (undo-tree-id15570 . -2) (undo-tree-id15571 . -2) (undo-tree-id15572 . -2) (undo-tree-id15573 . -3) (undo-tree-id15574 . -3) (undo-tree-id15575 . -3) (undo-tree-id15576 . -3) (undo-tree-id15577 . -3) (undo-tree-id15578 . -4) (undo-tree-id15579 . -4) (undo-tree-id15580 . -4) (undo-tree-id15581 . -4) (undo-tree-id15582 . -4) (undo-tree-id15583 . -4) 5944) nil (26715 30145 759462 98000) 0 nil])
([nil nil ((5940 . 5949)) nil (26715 30145 759451 83000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -5947) (undo-tree-id15539 . -1) (undo-tree-id15540 . -1) (undo-tree-id15541 . -1) (undo-tree-id15542 . -1) (undo-tree-id15543 . -1) (undo-tree-id15544 . -1) (undo-tree-id15545 . -1) (undo-tree-id15546 . -1) (undo-tree-id15547 . -1) (undo-tree-id15548 . -1) (undo-tree-id15549 . -1) (undo-tree-id15550 . -1) (undo-tree-id15551 . -1) (undo-tree-id15552 . -1) (undo-tree-id15553 . -1) (undo-tree-id15554 . -1) (undo-tree-id15555 . -1) (#(")" 0 1 (face font-lock-string-face fontified t)) . -5948) (undo-tree-id15556 . -1) (undo-tree-id15557 . -1) (undo-tree-id15558 . -1) (undo-tree-id15559 . -1) (undo-tree-id15560 . -1) (undo-tree-id15561 . -1) (undo-tree-id15562 . -1) 5949) nil (26715 30145 759449 749000) 0 nil])
([nil nil ((5947 . 5949)) nil (26715 30145 759423 645000) 0 nil])
([nil nil ((#("        S[:1600 - c] ^= P_blocks[i]
" 0 8 (fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 16 (fontified t) 16 17 (face font-lock-operator-face fontified t) 17 21 (fontified t) 21 22 (face font-lock-operator-face fontified t) 22 23 (face font-lock-operator-face fontified t) 23 36 (fontified t)) . -5716) (undo-tree-id15612 . -36) (undo-tree-id15613 . -36) (undo-tree-id15614 . -36) (undo-tree-id15615 . -36) (undo-tree-id15616 . -36) (undo-tree-id15617 . -36) (undo-tree-id15618 . -36) (undo-tree-id15619 . -36) 5752 (t 26715 30145 775239 997000)) nil (26715 30207 801402 287000) 0 nil])
([nil nil ((apply 2 5763 5843 undo--wrap-and-run-primitive-undo 5763 5843 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5771) 5763))) nil (26715 30209 234269 791000) 0 nil] [nil nil ((apply 2 5763 5843 undo--wrap-and-run-primitive-undo 5763 5843 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5771) 5763))) ((apply -2 5763 5845 undo--wrap-and-run-primitive-undo 5763 5845 ((5771 . 5773) 5848))) (26715 30207 801338 314000) 0 nil])
([nil nil ((#("        print(\"S:\", S)" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-string-face fontified t) 18 22 (fontified t)) . 5716) (undo-tree-id15632 . -22) (t 26715 30209 250498 687000)) nil (26715 30260 574013 286000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 5716)) nil (26715 30260 574012 341000) 0 nil])
([nil nil ((5825 . 5833) (5808 . 5812) (#(" " 0 1 (fontified nil)) . 5808) (5807 . 5808) (5820 . 5821)) nil (26715 30260 574011 886000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5847 . 5848) (nil fontified nil 5847 . 5848) (nil fontified nil 5843 . 5847) (nil fontified nil 5839 . 5843) (nil fontified nil 5838 . 5839) (nil fontified nil 5833 . 5838) (nil fontified nil 5825 . 5833) (5825 . 5848)) nil (26715 30260 574011 310000) 0 nil])
([nil nil ((5824 . 5825)) nil (26715 30260 574010 483000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5824) (undo-tree-id15620 . -1) (undo-tree-id15621 . -1) (undo-tree-id15622 . -1) (undo-tree-id15623 . -1) (undo-tree-id15624 . -1) (undo-tree-id15625 . -1) (undo-tree-id15626 . -1) (undo-tree-id15627 . -1) (undo-tree-id15628 . -1) (undo-tree-id15629 . -1) (undo-tree-id15630 . -1) (undo-tree-id15631 . -1) 5825) nil (26715 30260 574009 351000) 0 nil])
([nil nil ((5807 . 5809)) nil (26715 30262 749128 535000) 0 nil])
([nil nil ((5810 . 5873) (#("    " 0 4 (fontified t)) . 5810) 5826 (t 26715 30260 589713 863000)) nil (26715 30272 884070 464000) 0 nil] [nil nil ((5810 . 5873) (#("    " 0 4 (fontified t)) . 5810) 5826 (t 26715 30260 589713 863000)) ((5810 . 5814) (#("                                                               " 0 63 (fontified t)) . 5810)) (26715 30262 743930 128000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -5870) 5885) nil (26715 30272 884069 782000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -5866) 5882) nil (26715 30272 884069 381000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5862) 5878) nil (26715 30272 884068 943000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5858) 5874) nil (26715 30272 884068 581000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5854) 5870) nil (26715 30272 884067 995000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5850) 5866) nil (26715 30272 884067 507000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5846) 5862) nil (26715 30272 884067 68000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5842) 5858) nil (26715 30272 884066 706000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5838) 5854) nil (26715 30272 884066 266000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5834) 5850) nil (26715 30272 884065 777000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5830) 5846) nil (26715 30272 884064 945000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5826) 5842) nil (26715 30272 884064 434000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5822) 5838) nil (26715 30272 884063 971000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5818) 5834) nil (26715 30272 884063 521000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5814) 5830) nil (26715 30272 884063 102000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5810) 5826) nil (26715 30272 884062 653000) 0 nil])
([nil nil ((5810 . 5873) 5822) nil (26715 30272 884062 225000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -5870) 5885) nil (26715 30272 884061 887000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5866) 5882) nil (26715 30272 884061 436000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5862) 5878) nil (26715 30272 884060 980000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5858) 5874) nil (26715 30272 884060 572000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5854) 5870) nil (26715 30272 884060 141000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5850) 5866) nil (26715 30272 884059 707000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5846) 5862) nil (26715 30272 884059 152000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5842) 5858) nil (26715 30272 884058 373000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5838) 5854) nil (26715 30272 884057 919000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5834) 5850) nil (26715 30272 884057 241000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5830) 5846) nil (26715 30272 884053 341000) 0 nil])
([nil nil ((5895 . 5900) (t 26715 30272 900766 189000)) nil (26715 30280 499217 113000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5132) (undo-tree-id15633 . -3) (undo-tree-id15634 . -3) (undo-tree-id15635 . -3) (undo-tree-id15636 . -3) (undo-tree-id15637 . -3) (undo-tree-id15638 . -3) (undo-tree-id15639 . -3) (undo-tree-id15640 . -3) (undo-tree-id15641 . -3) (undo-tree-id15642 . -3) (undo-tree-id15643 . -3) (undo-tree-id15644 . -3) (undo-tree-id15645 . -3) (undo-tree-id15646 . -3) (undo-tree-id15647 . -3) (undo-tree-id15648 . -3) (undo-tree-id15649 . -3) (undo-tree-id15650 . -3) (undo-tree-id15651 . -3) (undo-tree-id15652 . -3) (undo-tree-id15653 . -3) (undo-tree-id15654 . -3) (undo-tree-id15655 . -3) (undo-tree-id15656 . -3) (undo-tree-id15657 . -3) (undo-tree-id15658 . -3) (undo-tree-id15659 . -3) (undo-tree-id15660 . -3) (undo-tree-id15661 . -3) (undo-tree-id15662 . -3) (undo-tree-id15663 . -3) (undo-tree-id15664 . -3) (undo-tree-id15665 . -3) (undo-tree-id15666 . -3) (undo-tree-id15667 . -3) (undo-tree-id15668 . -3) (undo-tree-id15669 . -3) (undo-tree-id15670 . -3) (undo-tree-id15671 . -3) (undo-tree-id15672 . -3) (undo-tree-id15673 . -3) (undo-tree-id15674 . -3) (undo-tree-id15675 . -3) (undo-tree-id15676 . -3) (undo-tree-id15677 . -3) (undo-tree-id15678 . -3) (undo-tree-id15679 . -3) (undo-tree-id15680 . -3) (undo-tree-id15681 . -3) (undo-tree-id15682 . -3) (undo-tree-id15683 . -3) (undo-tree-id15684 . -3) (undo-tree-id15685 . -3) (undo-tree-id15686 . -3) (undo-tree-id15687 . -3) (undo-tree-id15688 . -3) (undo-tree-id15689 . -3) (undo-tree-id15690 . -3) (undo-tree-id15691 . -3) (undo-tree-id15692 . -3) (undo-tree-id15693 . -3) (undo-tree-id15694 . -3) (undo-tree-id15695 . -3) (undo-tree-id15696 . -3) (undo-tree-id15697 . -3) (undo-tree-id15698 . -3) (undo-tree-id15699 . -3) (undo-tree-id15700 . -3) (undo-tree-id15701 . -3) (undo-tree-id15702 . -3) (undo-tree-id15703 . -3) (undo-tree-id15704 . -4) (undo-tree-id15705 . -4) (undo-tree-id15706 . -4) (undo-tree-id15707 . -4) (undo-tree-id15708 . -4) (undo-tree-id15709 . -4) (undo-tree-id15710 . -4) 5136 (t 26715 30280 515798 690000)) nil (26715 32328 363434 407000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5199) 5198) nil (26715 32328 363356 966000) 0 nil])
([nil nil ((5173 . 5175) (t 26715 32328 381304 265000)) nil (26715 32331 359402 990000) 0 nil])
([nil nil ((5175 . 5176) (t 26715 32331 376445 866000)) nil (26715 32333 96422 113000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5175) (undo-tree-id15711 . -1) (undo-tree-id15712 . -1) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) (undo-tree-id15716 . -1) (undo-tree-id15717 . -1) 5176) nil (26715 32333 96418 62000) 0 nil])
([nil nil ((4323 . 4333) (t 26715 32333 114527 843000)) nil (26715 32491 54305 182000) 0 nil])
([nil nil ((#("wit" 0 3 (face font-lock-comment-face fontified t)) . -4330) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -2) (undo-tree-id15724 . -2) (undo-tree-id15725 . -2) (undo-tree-id15726 . -2) (undo-tree-id15727 . -2) (undo-tree-id15728 . -3) (undo-tree-id15729 . -3) (undo-tree-id15730 . -3) (undo-tree-id15731 . -3) (undo-tree-id15732 . -3) (undo-tree-id15733 . -3) 4333) nil (26715 32491 54302 189000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5901) (undo-tree-id15735 . -1) (t 26715 32491 71481 736000)) nil (26715 32496 118444 175000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5901) (undo-tree-id15734 . -4)) nil (26715 32496 118439 364000) 0 nil])
([nil nil ((5232 . 5237) (t 26715 32496 136691 622000)) nil (26715 32866 834090 609000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5367 . 5368) (nil fontified nil 5233 . 5368) (5233 . 5368)) nil (26715 32866 834089 147000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5380) (undo-tree-id15736 . -1) (undo-tree-id15737 . -4) (undo-tree-id15738 . -4) (undo-tree-id15739 . -4) (undo-tree-id15740 . -4) (undo-tree-id15741 . -4) (undo-tree-id15742 . -4) (undo-tree-id15743 . -4) (undo-tree-id15744 . -4) (undo-tree-id15745 . -4) (undo-tree-id15746 . -4) (undo-tree-id15747 . -4) (undo-tree-id15748 . -4) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (5289 . 5293) (5259 . 5263) (5233 . 5237)) nil (26715 32866 834082 100000) 0 nil])
([nil nil ((#("    assert len(P) == 1088
    assert len(P_blocks) == 1
    assert np.array_equal(P_blocks[0][:8], np.array([0,1,1,0,0,0,0,0]))  # 0x06, LSB-first
" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 14 (face font-lock-builtin-face fontified t) 14 18 (fontified t) 18 20 (face font-lock-operator-face fontified t) 20 30 (fontified t) 30 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 40 (face font-lock-builtin-face fontified t) 40 51 (fontified t) 51 53 (face font-lock-operator-face fontified t) 53 60 (fontified t) 60 66 (face font-lock-keyword-face fontified t) 66 129 (fontified t) 129 131 (face font-lock-comment-delimiter-face fontified t) 131 146 (face font-lock-comment-face fontified t) 146 147 (face font-lock-comment-face rear-nonsticky t fontified t)) . 5233) (undo-tree-id15954 . -147) (undo-tree-id15955 . -147) (undo-tree-id15956 . -147) (undo-tree-id15957 . -147) (undo-tree-id15958 . -147) (undo-tree-id15959 . -147) (undo-tree-id15960 . -147) (undo-tree-id15961 . -147) (undo-tree-id15962 . -147) (undo-tree-id15963 . -147) (undo-tree-id15964 . -147) (undo-tree-id15965 . -147) (undo-tree-id15966 . -147) (undo-tree-id15967 . -147) (undo-tree-id15968 . -147) (undo-tree-id15969 . -147) (undo-tree-id15970 . -147) (undo-tree-id15971 . -147) (undo-tree-id15972 . -147) (undo-tree-id15973 . -147) (undo-tree-id15974 . -147) (undo-tree-id15975 . -147) (undo-tree-id15976 . -147) (undo-tree-id15977 . -147) (undo-tree-id15978 . -147) (undo-tree-id15979 . -56) (undo-tree-id15980 . -147) (undo-tree-id15981 . -147) (undo-tree-id15982 . -147) (undo-tree-id15983 . -147) (undo-tree-id15984 . -147) (undo-tree-id15985 . -147) (undo-tree-id15986 . -147) (undo-tree-id15987 . -147) (undo-tree-id15988 . -147) (undo-tree-id15989 . -147) (undo-tree-id15990 . -147) (undo-tree-id15991 . -147) (t 26715 32866 851155 198000)) nil (26715 32925 939772 763000) 0 nil])
([nil nil ((nil fontified nil 5803 . 5804) (nil fontified nil 5788 . 5803) (nil fontified nil 5786 . 5788) (nil fontified nil 5723 . 5786) (nil fontified nil 5717 . 5723) (nil fontified nil 5710 . 5717) (nil fontified nil 5708 . 5710) (nil fontified nil 5697 . 5708) (nil fontified nil 5694 . 5697) (nil fontified nil 5693 . 5694) (nil fontified nil 5687 . 5693) (nil fontified nil 5677 . 5687) (nil fontified nil 5675 . 5677) (nil fontified nil 5671 . 5675) (nil fontified nil 5668 . 5671) (nil fontified nil 5667 . 5668) (nil fontified nil 5661 . 5667) (nil fontified nil 5657 . 5661) (5657 . 5804)) nil (26715 32925 939754 409000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5232) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (undo-tree-id15806 . -1) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) (undo-tree-id15809 . -1) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (undo-tree-id15820 . -1) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (undo-tree-id15834 . -1) (undo-tree-id15835 . -1) (undo-tree-id15836 . -1) (undo-tree-id15837 . -1) (undo-tree-id15838 . -1) (undo-tree-id15839 . -1) (undo-tree-id15840 . -1) (undo-tree-id15841 . -1) (undo-tree-id15842 . -1) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) (undo-tree-id15845 . -1) (undo-tree-id15846 . -1) (undo-tree-id15847 . -1) (undo-tree-id15848 . -1) (undo-tree-id15849 . -1) (undo-tree-id15850 . -1) (undo-tree-id15851 . -1) (undo-tree-id15852 . -1) (undo-tree-id15853 . -1) (undo-tree-id15854 . -1) (undo-tree-id15855 . -1) (undo-tree-id15856 . -1) (undo-tree-id15857 . -1) (undo-tree-id15858 . -1) (undo-tree-id15859 . -1) (undo-tree-id15860 . -1) (undo-tree-id15861 . -1) (undo-tree-id15862 . -1) (undo-tree-id15863 . -1) (undo-tree-id15864 . -1) (undo-tree-id15865 . -1) (undo-tree-id15866 . -1) (undo-tree-id15867 . -1) (undo-tree-id15868 . -1) (undo-tree-id15869 . -1) (undo-tree-id15870 . -1) (undo-tree-id15871 . -1) (undo-tree-id15872 . -1) (undo-tree-id15873 . -1) (undo-tree-id15874 . -1) (undo-tree-id15875 . -1) (undo-tree-id15876 . -1) (undo-tree-id15877 . -1) (undo-tree-id15878 . -1) (undo-tree-id15879 . -1) (undo-tree-id15880 . -1) (undo-tree-id15881 . -1) (undo-tree-id15882 . -1) (undo-tree-id15883 . -1) (undo-tree-id15884 . -1) (undo-tree-id15885 . -1) (undo-tree-id15886 . -1) (undo-tree-id15887 . -1) (undo-tree-id15888 . -1) (undo-tree-id15889 . -1) (undo-tree-id15890 . -1) (undo-tree-id15891 . -1) (undo-tree-id15892 . -1) (undo-tree-id15893 . -1) (undo-tree-id15894 . -1) (undo-tree-id15895 . -1) (undo-tree-id15896 . -1) (undo-tree-id15897 . -1) (undo-tree-id15898 . -1) (undo-tree-id15899 . -1) (undo-tree-id15900 . -1) (undo-tree-id15901 . -1) (undo-tree-id15902 . -1) (undo-tree-id15903 . -1) (undo-tree-id15904 . -1) (undo-tree-id15905 . -1) (undo-tree-id15906 . -1) (undo-tree-id15907 . -1) (undo-tree-id15908 . -1) (undo-tree-id15909 . -1) (undo-tree-id15910 . -1) (undo-tree-id15911 . -1) (undo-tree-id15912 . -1) (undo-tree-id15913 . -1) (undo-tree-id15914 . -1) (undo-tree-id15915 . -1) (undo-tree-id15916 . -1) (undo-tree-id15917 . -1) (undo-tree-id15918 . -1) (undo-tree-id15919 . -1) (undo-tree-id15920 . -1) (undo-tree-id15921 . -1) (undo-tree-id15922 . -1) (undo-tree-id15923 . -1) (undo-tree-id15924 . -1) (undo-tree-id15925 . -1) (undo-tree-id15926 . -1) (undo-tree-id15927 . -1) (undo-tree-id15928 . -1) (undo-tree-id15929 . -1) (undo-tree-id15930 . -1) (undo-tree-id15931 . -1) (undo-tree-id15932 . -1) (undo-tree-id15933 . -1) (undo-tree-id15934 . -1) (undo-tree-id15935 . -1) (undo-tree-id15936 . -1) (undo-tree-id15937 . -1) (undo-tree-id15938 . -1) (undo-tree-id15939 . -1) (undo-tree-id15940 . -1) (#("
" 0 1 (fontified t)) . -5233) (undo-tree-id15941 . -1) (undo-tree-id15942 . -1) (undo-tree-id15943 . -1) (undo-tree-id15944 . -1) (undo-tree-id15945 . -1) (undo-tree-id15946 . -1) (undo-tree-id15947 . -1) (undo-tree-id15948 . -1) (undo-tree-id15949 . -1) (undo-tree-id15950 . -1) (undo-tree-id15951 . -1) (undo-tree-id15952 . -1) (undo-tree-id15953 . -1) 5234) nil (26715 32925 939747 816000) 0 nil])
([nil nil ((apply -6 7402 7572 undo--wrap-and-run-primitive-undo 7402 7572 ((7493 . 7495) (7441 . 7443) (7406 . 7408) 7544 (t 26715 32925 956252 945000)))) nil (26715 32968 296877 847000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -5722) (undo-tree-id15992 . -1) (undo-tree-id15993 . -1) (undo-tree-id15994 . -1) (undo-tree-id15995 . -1) (undo-tree-id15996 . -1) (undo-tree-id15997 . -1) (undo-tree-id15998 . -1) (#("p" 0 1 (fontified t)) . -5723) (undo-tree-id15999 . -1) 5724 (t 26715 32968 314439 591000)) nil (26715 32984 299949 909000) 0 nil])
([nil nil ((5722 . 5727)) nil (26715 32984 299930 387000) 0 nil])
([nil nil ((#("np" 0 2 (fontified t)) . -5757) (undo-tree-id16000 . -2) 5759 (t 26715 32984 317533 562000)) nil (26715 32997 248667 822000) 0 nil])
([nil nil ((5757 . 5762)) nil (26715 32997 248656 469000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6099 . 6100) (nil fontified nil 6019 . 6100) (6019 . 6100) (t 26715 32997 265618 578000)) nil (26715 33039 575081 595000) 0 nil])
([nil nil ((6060 . 6064) (6019 . 6023) 6100) nil (26715 33039 575080 816000) 0 nil])
([nil nil ((apply -2 5996 6021 undo--wrap-and-run-primitive-undo 5996 6021 ((6004 . 6006) 5996))) nil (26715 33039 575079 314000) 0 nil])
([nil nil ((apply -22 5233 5658 undo--wrap-and-run-primitive-undo 5233 5658 ((5621 . 5623) (5551 . 5553) (5515 . 5517) (5460 . 5462) (5402 . 5404) (5380 . 5382) (5331 . 5333) (5310 . 5312) (5289 . 5291) (5258 . 5260) (5237 . 5239) 5597))) nil (26715 33039 575078 304000) 0 nil])
([nil nil ((apply 2 5617 5655 undo--wrap-and-run-primitive-undo 5617 5655 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5621) 5617))) nil (26715 33039 575077 312000) 0 nil])
([nil nil ((apply -2 5656 5677 undo--wrap-and-run-primitive-undo 5656 5677 ((5660 . 5662)))) nil (26715 33039 575071 997000) 0 nil])
([nil nil ((#("    assert len(P) == 1088
    assert len(P_blocks) == 1
    assert numpy.array_equal(P_blocks[0][:8], numpy.array([0,1,1,0,0,0,0,0]))  # 0x06, LSB-first
" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 14 (face font-lock-builtin-face fontified t) 14 18 (fontified t) 18 20 (face font-lock-operator-face fontified t) 20 26 (fontified t) 26 30 (fontified t) 30 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 40 (face font-lock-builtin-face fontified t) 40 51 (fontified t) 51 53 (face font-lock-operator-face fontified t) 53 56 (fontified t) 56 60 (fontified t) 60 66 (face font-lock-keyword-face fontified t) 66 135 (fontified t) 135 137 (face font-lock-comment-delimiter-face fontified t) 137 152 (face font-lock-comment-face fontified t) 152 153 (face font-lock-comment-face fontified t rear-nonsticky t)) . -5677) (undo-tree-id16001 . -4) (undo-tree-id16002 . -4) (undo-tree-id16003 . -4) (undo-tree-id16004 . -4) (undo-tree-id16005 . -4) (undo-tree-id16006 . -4) (undo-tree-id16007 . -4) (undo-tree-id16008 . -4) (undo-tree-id16009 . -4) (undo-tree-id16010 . -4) (undo-tree-id16011 . -4) (undo-tree-id16012 . -4) (undo-tree-id16013 . -4) (undo-tree-id16014 . -4) (undo-tree-id16015 . -4) (undo-tree-id16016 . -4) (undo-tree-id16017 . -4) (undo-tree-id16018 . -4) (undo-tree-id16019 . -4) (undo-tree-id16020 . -4) (undo-tree-id16021 . -4) (undo-tree-id16022 . -4) (undo-tree-id16023 . -4) (undo-tree-id16024 . -4) (undo-tree-id16025 . -4) (undo-tree-id16026 . -4) (undo-tree-id16027 . -4) (undo-tree-id16028 . -4) (undo-tree-id16029 . -4) (undo-tree-id16030 . -4) (undo-tree-id16031 . -4) (undo-tree-id16032 . -4) (undo-tree-id16033 . -4) (undo-tree-id16034 . -4) (undo-tree-id16035 . -4) (undo-tree-id16036 . -4) (undo-tree-id16037 . -4) (undo-tree-id16038 . -4) (undo-tree-id16039 . -4) (undo-tree-id16040 . -4) (undo-tree-id16041 . -4) (undo-tree-id16042 . -4) (undo-tree-id16043 . -4) (undo-tree-id16044 . -4) (undo-tree-id16045 . -4) (undo-tree-id16046 . -4) (undo-tree-id16047 . -4) (undo-tree-id16048 . -4) (undo-tree-id16049 . -4) (undo-tree-id16050 . -4) (undo-tree-id16051 . -4) (undo-tree-id16052 . -4) (undo-tree-id16053 . -4) (undo-tree-id16054 . -4) (undo-tree-id16055 . -4) (undo-tree-id16056 . -4) (undo-tree-id16057 . -4) (undo-tree-id16058 . -4) (undo-tree-id16059 . -4) (undo-tree-id16060 . -4) (undo-tree-id16061 . -4) (undo-tree-id16062 . -4) (undo-tree-id16063 . -4) (undo-tree-id16064 . -4) (undo-tree-id16065 . -4) (undo-tree-id16066 . -4) (undo-tree-id16067 . -4) (undo-tree-id16068 . -4) (undo-tree-id16069 . -4) (undo-tree-id16070 . -4) (undo-tree-id16071 . -4) (undo-tree-id16072 . -4) (undo-tree-id16073 . -4) (undo-tree-id16074 . -4) (undo-tree-id16075 . -4) (undo-tree-id16076 . -4) (undo-tree-id16077 . -4) (undo-tree-id16078 . -4) (undo-tree-id16079 . -4) (undo-tree-id16080 . -4) (undo-tree-id16081 . -4) (undo-tree-id16082 . -4) (undo-tree-id16083 . -4) (undo-tree-id16084 . -4) (undo-tree-id16085 . -4) (undo-tree-id16086 . -4) (undo-tree-id16087 . -4) (undo-tree-id16088 . -4) (undo-tree-id16089 . -4) (undo-tree-id16090 . -4) (undo-tree-id16091 . -4) (undo-tree-id16092 . -153) (undo-tree-id16093 . -153) (undo-tree-id16094 . -153) (undo-tree-id16095 . -153) (undo-tree-id16096 . -153) (undo-tree-id16097 . -56) (undo-tree-id16098 . -56) (undo-tree-id16099 . -56) (undo-tree-id16100 . -56) (undo-tree-id16101 . -56) (undo-tree-id16102 . -26) (undo-tree-id16103 . -26) (undo-tree-id16104 . -26) (undo-tree-id16105 . -26) (undo-tree-id16106 . -26) (undo-tree-id16107 . -26) (undo-tree-id16108 . -26) (undo-tree-id16109 . -26) (undo-tree-id16110 . -26) (undo-tree-id16111 . -26) (undo-tree-id16112 . -26) (undo-tree-id16113 . -26) (undo-tree-id16114 . -56) (undo-tree-id16115 . -56) (undo-tree-id16116 . -56) (undo-tree-id16117 . -56) (undo-tree-id16118 . -56) (undo-tree-id16119 . -153) (undo-tree-id16120 . -153) (undo-tree-id16121 . -153) (undo-tree-id16122 . -153) (undo-tree-id16123 . -72) (undo-tree-id16124 . -153) (undo-tree-id16125 . -153) (undo-tree-id16126 . -153) 5830 (t 26715 33039 592950 48000)) nil (26715 33516 282945 671000) 0 nil])
([nil nil ((4330 . 4343) (t 26715 33516 304788 171000)) nil (26715 34510 575152 839000) 0 nil])
([nil nil ((4343 . 4359)) nil (26715 34510 575152 294000) 0 nil])
([nil nil ((#("function" 0 8 (face font-lock-comment-face fontified t)) . -4351) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -2) (undo-tree-id16653 . -2) (undo-tree-id16654 . -2) (undo-tree-id16655 . -2) (undo-tree-id16656 . -2) (undo-tree-id16657 . -3) (undo-tree-id16658 . -3) (undo-tree-id16659 . -3) (undo-tree-id16660 . -3) (undo-tree-id16661 . -3) (undo-tree-id16662 . -4) (undo-tree-id16663 . -4) (undo-tree-id16664 . -4) (undo-tree-id16665 . -4) (undo-tree-id16666 . -4) (undo-tree-id16667 . -5) (undo-tree-id16668 . -5) (undo-tree-id16669 . -5) (undo-tree-id16670 . -5) (undo-tree-id16671 . -5) (undo-tree-id16672 . -6) (undo-tree-id16673 . -6) (undo-tree-id16674 . -6) (undo-tree-id16675 . -6) (undo-tree-id16676 . -6) (undo-tree-id16677 . -7) (undo-tree-id16678 . -7) (undo-tree-id16679 . -7) (undo-tree-id16680 . -7) (undo-tree-id16681 . -7) (undo-tree-id16682 . -8) (undo-tree-id16683 . -8) (undo-tree-id16684 . -8) (undo-tree-id16685 . -8) (undo-tree-id16686 . -8) (undo-tree-id16687 . -8) (undo-tree-id16688 . -8) (undo-tree-id16689 . -8) (undo-tree-id16690 . -8) (undo-tree-id16691 . -8) (undo-tree-id16692 . -8) 4359) nil (26715 34510 575151 226000) 0 nil])
([nil nil ((#("sponge " 0 7 (face font-lock-comment-face fontified t)) . -4344) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -2) (undo-tree-id16566 . -2) (undo-tree-id16567 . -2) (undo-tree-id16568 . -2) (undo-tree-id16569 . -2) (undo-tree-id16570 . -3) (undo-tree-id16571 . -3) (undo-tree-id16572 . -3) (undo-tree-id16573 . -3) (undo-tree-id16574 . -3) (undo-tree-id16575 . -4) (undo-tree-id16576 . -4) (undo-tree-id16577 . -4) (undo-tree-id16578 . -4) (undo-tree-id16579 . -4) (undo-tree-id16580 . -5) (undo-tree-id16581 . -5) (undo-tree-id16582 . -5) (undo-tree-id16583 . -5) (undo-tree-id16584 . -5) (undo-tree-id16585 . -6) (undo-tree-id16586 . -6) (undo-tree-id16587 . -6) (undo-tree-id16588 . -6) (undo-tree-id16589 . -6) (undo-tree-id16590 . -7) (undo-tree-id16591 . -7) (undo-tree-id16592 . -7) (undo-tree-id16593 . -7) (undo-tree-id16594 . -7) (undo-tree-id16595 . -7) (undo-tree-id16596 . -7) (undo-tree-id16597 . -7) (undo-tree-id16598 . -7) (undo-tree-id16599 . -7) (undo-tree-id16600 . -7) (undo-tree-id16601 . -7) (undo-tree-id16602 . -7) (undo-tree-id16603 . -7) (undo-tree-id16604 . -7) (undo-tree-id16605 . -7) (undo-tree-id16606 . -7) (undo-tree-id16607 . -7) (undo-tree-id16608 . -7) (undo-tree-id16609 . -7) (undo-tree-id16610 . -7) (undo-tree-id16611 . -7) (undo-tree-id16612 . -7) (undo-tree-id16613 . -7) (undo-tree-id16614 . -7) (undo-tree-id16615 . -7) (undo-tree-id16616 . -7) (undo-tree-id16617 . -7) (undo-tree-id16618 . -7) (undo-tree-id16619 . -7) (undo-tree-id16620 . -7) (undo-tree-id16621 . -7) (undo-tree-id16622 . -7) (undo-tree-id16623 . -7) (undo-tree-id16624 . -7) (undo-tree-id16625 . -7) (undo-tree-id16626 . -7) (undo-tree-id16627 . -7) (undo-tree-id16628 . -7) (undo-tree-id16629 . -7) (undo-tree-id16630 . -7) (undo-tree-id16631 . -7) (undo-tree-id16632 . -7) (undo-tree-id16633 . -7) (undo-tree-id16634 . -7) (undo-tree-id16635 . -7) (undo-tree-id16636 . -7) (undo-tree-id16637 . -7) (undo-tree-id16638 . -7) (undo-tree-id16639 . -7) (undo-tree-id16640 . -7) (undo-tree-id16641 . -7) (undo-tree-id16642 . -7) (undo-tree-id16643 . -7) (undo-tree-id16644 . -7) (undo-tree-id16645 . -7) (undo-tree-id16646 . -7) 4351) nil (26715 34510 575127 576000) 0 nil])
([nil nil ((4344 . 4354)) nil (26715 34510 575081 205000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -4352) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -4353) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (undo-tree-id16559 . -1) 4354) nil (26715 34510 575080 80000) 0 nil])
([nil nil ((4362 . 4365) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 4356) (4354 . 4356) (4354 . 4355) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 4354) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (4353 . 4354) (4352 . 4360)) nil (26715 34510 575063 578000) 0 nil])
([nil nil ((#("is " 0 3 (face font-lock-comment-face fontified t)) . -4362) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -2) (undo-tree-id16504 . -2) (undo-tree-id16505 . -2) (undo-tree-id16506 . -2) (undo-tree-id16507 . -2) (undo-tree-id16508 . -3) (undo-tree-id16509 . -3) (undo-tree-id16510 . -3) (undo-tree-id16511 . -3) (undo-tree-id16512 . -3) (undo-tree-id16513 . -3) (undo-tree-id16514 . -3) (undo-tree-id16515 . -3) (undo-tree-id16516 . -3) (undo-tree-id16517 . -3) (undo-tree-id16518 . -3) (undo-tree-id16519 . -3) 4365) nil (26715 34510 575059 346000) 0 nil])
([nil nil ((#("which " 0 6 (face font-lock-comment-face fontified t)) . -4356) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -2) (undo-tree-id16446 . -2) (undo-tree-id16447 . -2) (undo-tree-id16448 . -2) (undo-tree-id16449 . -2) (undo-tree-id16450 . -3) (undo-tree-id16451 . -3) (undo-tree-id16452 . -3) (undo-tree-id16453 . -3) (undo-tree-id16454 . -3) (undo-tree-id16455 . -4) (undo-tree-id16456 . -4) (undo-tree-id16457 . -4) (undo-tree-id16458 . -4) (undo-tree-id16459 . -4) (undo-tree-id16460 . -5) (undo-tree-id16461 . -5) (undo-tree-id16462 . -5) (undo-tree-id16463 . -5) (undo-tree-id16464 . -5) (undo-tree-id16465 . -6) (undo-tree-id16466 . -6) (undo-tree-id16467 . -6) (undo-tree-id16468 . -6) (undo-tree-id16469 . -6) (undo-tree-id16470 . -6) (undo-tree-id16471 . -6) (undo-tree-id16472 . -6) (undo-tree-id16473 . -6) (undo-tree-id16474 . -6) (undo-tree-id16475 . -6) (undo-tree-id16476 . -6) (undo-tree-id16477 . -6) (undo-tree-id16478 . -6) (undo-tree-id16479 . -6) (undo-tree-id16480 . -6) (undo-tree-id16481 . -6) (undo-tree-id16482 . -6) (undo-tree-id16483 . -6) (undo-tree-id16484 . -6) (undo-tree-id16485 . -6) (undo-tree-id16486 . -6) (undo-tree-id16487 . -6) (undo-tree-id16488 . -6) (undo-tree-id16489 . -6) (undo-tree-id16490 . -6) (undo-tree-id16491 . -6) (undo-tree-id16492 . -6) (undo-tree-id16493 . -6) (undo-tree-id16494 . -6) (undo-tree-id16495 . -6) (undo-tree-id16496 . -6) (undo-tree-id16497 . -6) 4362) nil (26715 34510 575048 518000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -4352) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -4353) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) (undo-tree-id16290 . -1) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (undo-tree-id16298 . -1) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -4354) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1) (undo-tree-id16322 . -1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -4355) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) (undo-tree-id16378 . -1) (undo-tree-id16379 . -1) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (undo-tree-id16384 . -1) (undo-tree-id16385 . -1) (undo-tree-id16386 . -1) (undo-tree-id16387 . -1) (undo-tree-id16388 . -1) (undo-tree-id16389 . -1) (undo-tree-id16390 . -1) (undo-tree-id16391 . -1) (undo-tree-id16392 . -1) (undo-tree-id16393 . -1) (undo-tree-id16394 . -1) (undo-tree-id16395 . -1) (undo-tree-id16396 . -1) (undo-tree-id16397 . -1) (undo-tree-id16398 . -1) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (undo-tree-id16405 . -1) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) (undo-tree-id16408 . -1) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (undo-tree-id16430 . -1) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) 4356) nil (26715 34510 575014 106000) 0 nil])
([nil nil ((4352 . 4353)) nil (26715 34510 574815 914000) 0 nil])
([nil nil ((4353 . 4354) (t 26715 34510 592550 466000)) nil (26715 34579 346614 954000) 0 nil])
([nil nil ((#("function.," 0 10 (face font-lock-comment-face fontified t)) . -4344) (undo-tree-id18822 . -8) (undo-tree-id18823 . -8) (undo-tree-id18824 . -8) (undo-tree-id18825 . -8) (undo-tree-id18826 . -8) (undo-tree-id18827 . -8) (undo-tree-id18828 . -8) (undo-tree-id18829 . -8) (undo-tree-id18830 . -8) (undo-tree-id18831 . -8) (undo-tree-id18832 . -8) (undo-tree-id18833 . -8) (undo-tree-id18834 . -8) (undo-tree-id18835 . -8) (undo-tree-id18836 . -8) (undo-tree-id18837 . -8) (undo-tree-id18838 . -8) (undo-tree-id18839 . -8) (undo-tree-id18840 . -8) (undo-tree-id18841 . -8) (undo-tree-id18842 . -8) (undo-tree-id18843 . -8) (undo-tree-id18844 . -8) (undo-tree-id18845 . -8) (undo-tree-id18846 . -8) (undo-tree-id18847 . -8) (undo-tree-id18848 . -8) (undo-tree-id18849 . -8) (undo-tree-id18850 . -8) (undo-tree-id18851 . -8) (undo-tree-id18852 . -8) (undo-tree-id18853 . -8) (undo-tree-id18854 . -8) (undo-tree-id18855 . -8) (undo-tree-id18856 . -8) (undo-tree-id18857 . -8) (undo-tree-id18858 . -8) (undo-tree-id18859 . -8) (undo-tree-id18860 . -8) (undo-tree-id18861 . -8) (undo-tree-id18862 . -8) (undo-tree-id18863 . -8) (undo-tree-id18864 . -8) (undo-tree-id18865 . -8) (undo-tree-id18866 . -8) (undo-tree-id18867 . -8) (undo-tree-id18868 . -8) (undo-tree-id18869 . -8) (undo-tree-id18870 . -8) (undo-tree-id18871 . -8) (undo-tree-id18872 . -8) (undo-tree-id18873 . -8) (undo-tree-id18874 . -8) (undo-tree-id18875 . -8) (undo-tree-id18876 . -8) (undo-tree-id18877 . -8) (undo-tree-id18878 . -8) (undo-tree-id18879 . -8) (undo-tree-id18880 . -8) (undo-tree-id18881 . -8) (undo-tree-id18882 . -8) (undo-tree-id18883 . -8) (undo-tree-id18884 . -8) (undo-tree-id18885 . -8) (undo-tree-id18886 . -8) (undo-tree-id18887 . -8) (undo-tree-id18888 . -8) (undo-tree-id18889 . -8) (undo-tree-id18890 . -8) (undo-tree-id18891 . -8) (undo-tree-id18892 . -8) (undo-tree-id18893 . -8) (undo-tree-id18894 . -8) (undo-tree-id18895 . -8) (undo-tree-id18896 . -8) (undo-tree-id18897 . -8) (undo-tree-id18898 . -8) (undo-tree-id18899 . -8) (undo-tree-id18900 . -8) (undo-tree-id18901 . -8) (undo-tree-id18902 . -8) (undo-tree-id18903 . -8) (undo-tree-id18904 . -8) (undo-tree-id18905 . -8) (undo-tree-id18906 . -8) (undo-tree-id18907 . -8) (undo-tree-id18908 . -8) (undo-tree-id18909 . -8) (undo-tree-id18910 . -8) (undo-tree-id18911 . -8) (undo-tree-id18912 . -8) (undo-tree-id18913 . -8) (undo-tree-id18914 . -8) (undo-tree-id18915 . -8) (undo-tree-id18916 . -8) (undo-tree-id18917 . -8) (undo-tree-id18918 . -8) (undo-tree-id18919 . -8) (undo-tree-id18920 . -8) (undo-tree-id18921 . -8) (undo-tree-id18922 . -8) (undo-tree-id18923 . -8) (undo-tree-id18924 . -8) (undo-tree-id18925 . -8) (undo-tree-id18926 . -8) (undo-tree-id18927 . -8) (undo-tree-id18928 . -8) (undo-tree-id18929 . -8) (undo-tree-id18930 . -9) (undo-tree-id18931 . -9) (undo-tree-id18932 . -9) (undo-tree-id18933 . -9) (undo-tree-id18934 . -9) (undo-tree-id18935 . -9) (undo-tree-id18936 . -9) (undo-tree-id18937 . -9) (undo-tree-id18938 . -9) (undo-tree-id18939 . -9) (undo-tree-id18940 . -9) (undo-tree-id18941 . -9) (undo-tree-id18942 . -10) (undo-tree-id18943 . -10) (undo-tree-id18944 . -10) (undo-tree-id18945 . -10) (undo-tree-id18946 . -10) (undo-tree-id18947 . -10) (undo-tree-id18948 . -10) 4354) nil (26715 34579 346612 572000) 0 nil])
([nil nil ((#("keccak " 0 7 (face font-lock-comment-face fontified t)) . -4337) (undo-tree-id18604 . -7) (undo-tree-id18605 . -7) (undo-tree-id18606 . -7) (undo-tree-id18607 . -7) (undo-tree-id18608 . -7) (undo-tree-id18609 . -7) (undo-tree-id18610 . -7) (undo-tree-id18611 . -7) (undo-tree-id18612 . -7) (undo-tree-id18613 . -7) (undo-tree-id18614 . -7) (undo-tree-id18615 . -7) (undo-tree-id18616 . -7) (undo-tree-id18617 . -7) (undo-tree-id18618 . -7) (undo-tree-id18619 . -7) (undo-tree-id18620 . -7) (undo-tree-id18621 . -7) (undo-tree-id18622 . -7) (undo-tree-id18623 . -7) (undo-tree-id18624 . -7) (undo-tree-id18625 . -7) (undo-tree-id18626 . -7) (undo-tree-id18627 . -7) (undo-tree-id18628 . -7) (undo-tree-id18629 . -7) (undo-tree-id18630 . -7) (undo-tree-id18631 . -7) (undo-tree-id18632 . -7) (undo-tree-id18633 . -7) (undo-tree-id18634 . -7) (undo-tree-id18635 . -7) (undo-tree-id18636 . -7) (undo-tree-id18637 . -7) (undo-tree-id18638 . -7) (undo-tree-id18639 . -7) (undo-tree-id18640 . -7) (undo-tree-id18641 . -7) (undo-tree-id18642 . -7) (undo-tree-id18643 . -7) (undo-tree-id18644 . -7) (undo-tree-id18645 . -7) (undo-tree-id18646 . -7) (undo-tree-id18647 . -7) (undo-tree-id18648 . -7) (undo-tree-id18649 . -7) (undo-tree-id18650 . -7) (undo-tree-id18651 . -7) (undo-tree-id18652 . -7) (undo-tree-id18653 . -7) (undo-tree-id18654 . -7) (undo-tree-id18655 . -7) (undo-tree-id18656 . -7) (undo-tree-id18657 . -7) (undo-tree-id18658 . -7) (undo-tree-id18659 . -7) (undo-tree-id18660 . -7) (undo-tree-id18661 . -7) (undo-tree-id18662 . -7) (undo-tree-id18663 . -7) (undo-tree-id18664 . -7) (undo-tree-id18665 . -7) (undo-tree-id18666 . -7) (undo-tree-id18667 . -7) (undo-tree-id18668 . -7) (undo-tree-id18669 . -7) (undo-tree-id18670 . -7) (undo-tree-id18671 . -7) (undo-tree-id18672 . -7) (undo-tree-id18673 . -7) (undo-tree-id18674 . -7) (undo-tree-id18675 . -7) (undo-tree-id18676 . -7) (undo-tree-id18677 . -7) (undo-tree-id18678 . -7) (undo-tree-id18679 . -7) (undo-tree-id18680 . -7) (undo-tree-id18681 . -7) (undo-tree-id18682 . -7) (undo-tree-id18683 . -7) (undo-tree-id18684 . -7) (undo-tree-id18685 . -7) (undo-tree-id18686 . -7) (undo-tree-id18687 . -7) (undo-tree-id18688 . -7) (undo-tree-id18689 . -7) (undo-tree-id18690 . -7) (undo-tree-id18691 . -7) (undo-tree-id18692 . -7) (undo-tree-id18693 . -7) (undo-tree-id18694 . -7) (undo-tree-id18695 . -7) (undo-tree-id18696 . -7) (undo-tree-id18697 . -7) (undo-tree-id18698 . -7) (undo-tree-id18699 . -7) (undo-tree-id18700 . -7) (undo-tree-id18701 . -7) (undo-tree-id18702 . -7) (undo-tree-id18703 . -7) (undo-tree-id18704 . -7) (undo-tree-id18705 . -7) (undo-tree-id18706 . -7) (undo-tree-id18707 . -7) (undo-tree-id18708 . -7) (undo-tree-id18709 . -7) (undo-tree-id18710 . -7) (undo-tree-id18711 . -7) (undo-tree-id18712 . -7) (undo-tree-id18713 . -7) (undo-tree-id18714 . -7) (undo-tree-id18715 . -7) (undo-tree-id18716 . -7) (undo-tree-id18717 . -7) (undo-tree-id18718 . -7) (undo-tree-id18719 . -7) (undo-tree-id18720 . -7) (undo-tree-id18721 . -7) (undo-tree-id18722 . -7) (undo-tree-id18723 . -7) (undo-tree-id18724 . -7) (undo-tree-id18725 . -7) (undo-tree-id18726 . -7) (undo-tree-id18727 . -7) (undo-tree-id18728 . -7) (undo-tree-id18729 . -7) (undo-tree-id18730 . -7) (undo-tree-id18731 . -7) (undo-tree-id18732 . -7) (undo-tree-id18733 . -7) (undo-tree-id18734 . -7) (undo-tree-id18735 . -7) (undo-tree-id18736 . -7) (undo-tree-id18737 . -7) (undo-tree-id18738 . -7) (undo-tree-id18739 . -7) (undo-tree-id18740 . -7) (undo-tree-id18741 . -7) (undo-tree-id18742 . -7) (undo-tree-id18743 . -7) (undo-tree-id18744 . -7) (undo-tree-id18745 . -7) (undo-tree-id18746 . -7) (undo-tree-id18747 . -7) (undo-tree-id18748 . -7) (undo-tree-id18749 . -7) (undo-tree-id18750 . -7) (undo-tree-id18751 . -7) (undo-tree-id18752 . -7) (undo-tree-id18753 . -7) (undo-tree-id18754 . -7) (undo-tree-id18755 . -7) (undo-tree-id18756 . -7) (undo-tree-id18757 . -7) (undo-tree-id18758 . -7) (undo-tree-id18759 . -7) (undo-tree-id18760 . -7) (undo-tree-id18761 . -7) (undo-tree-id18762 . -7) (undo-tree-id18763 . -7) (undo-tree-id18764 . -7) (undo-tree-id18765 . -7) (undo-tree-id18766 . -7) (undo-tree-id18767 . -7) (undo-tree-id18768 . -7) (undo-tree-id18769 . -7) (undo-tree-id18770 . -7) (undo-tree-id18771 . -7) (undo-tree-id18772 . -7) (undo-tree-id18773 . -7) (undo-tree-id18774 . -7) (undo-tree-id18775 . -7) (undo-tree-id18776 . -7) (undo-tree-id18777 . -7) (undo-tree-id18778 . -7) (undo-tree-id18779 . -7) (undo-tree-id18780 . -7) (undo-tree-id18781 . -7) (undo-tree-id18782 . -7) (undo-tree-id18783 . -7) (undo-tree-id18784 . -7) (undo-tree-id18785 . -7) (undo-tree-id18786 . -7) (undo-tree-id18787 . -7) (undo-tree-id18788 . -7) (undo-tree-id18789 . -7) (undo-tree-id18790 . -7) (undo-tree-id18791 . -7) (undo-tree-id18792 . -7) (undo-tree-id18793 . -7) (undo-tree-id18794 . -7) (undo-tree-id18795 . -7) (undo-tree-id18796 . -7) (undo-tree-id18797 . -7) (undo-tree-id18798 . -7) (undo-tree-id18799 . -7) (undo-tree-id18800 . -7) (undo-tree-id18801 . -7) (undo-tree-id18802 . -7) (undo-tree-id18803 . -7) (undo-tree-id18804 . -7) (undo-tree-id18805 . -7) (undo-tree-id18806 . -7) (undo-tree-id18807 . -7) (undo-tree-id18808 . -7) (undo-tree-id18809 . -7) (undo-tree-id18810 . -7) (undo-tree-id18811 . -7) (undo-tree-id18812 . -7) (undo-tree-id18813 . -7) (undo-tree-id18814 . -7) (undo-tree-id18815 . -7) (undo-tree-id18816 . -7) (undo-tree-id18817 . -7) (undo-tree-id18818 . -7) (undo-tree-id18819 . -7) (undo-tree-id18820 . -7) (undo-tree-id18821 . -7) 4344) nil (26715 34579 346551 227000) 0 nil])
([nil nil ((#("inside " 0 7 (face font-lock-comment-face fontified t)) . -4330) (undo-tree-id18381 . -7) (undo-tree-id18382 . -7) (undo-tree-id18383 . -7) (undo-tree-id18384 . -7) (undo-tree-id18385 . -7) (undo-tree-id18386 . -7) (undo-tree-id18387 . -7) (undo-tree-id18388 . -7) (undo-tree-id18389 . -7) (undo-tree-id18390 . -7) (undo-tree-id18391 . -7) (undo-tree-id18392 . -7) (undo-tree-id18393 . -7) (undo-tree-id18394 . -7) (undo-tree-id18395 . -7) (undo-tree-id18396 . -7) (undo-tree-id18397 . -7) (undo-tree-id18398 . -7) (undo-tree-id18399 . -7) (undo-tree-id18400 . -7) (undo-tree-id18401 . -7) (undo-tree-id18402 . -7) (undo-tree-id18403 . -7) (undo-tree-id18404 . -7) (undo-tree-id18405 . -7) (undo-tree-id18406 . -7) (undo-tree-id18407 . -7) (undo-tree-id18408 . -7) (undo-tree-id18409 . -7) (undo-tree-id18410 . -7) (undo-tree-id18411 . -7) (undo-tree-id18412 . -7) (undo-tree-id18413 . -7) (undo-tree-id18414 . -7) (undo-tree-id18415 . -7) (undo-tree-id18416 . -7) (undo-tree-id18417 . -7) (undo-tree-id18418 . -7) (undo-tree-id18419 . -7) (undo-tree-id18420 . -7) (undo-tree-id18421 . -7) (undo-tree-id18422 . -7) (undo-tree-id18423 . -7) (undo-tree-id18424 . -7) (undo-tree-id18425 . -7) (undo-tree-id18426 . -7) (undo-tree-id18427 . -7) (undo-tree-id18428 . -7) (undo-tree-id18429 . -7) (undo-tree-id18430 . -7) (undo-tree-id18431 . -7) (undo-tree-id18432 . -7) (undo-tree-id18433 . -7) (undo-tree-id18434 . -7) (undo-tree-id18435 . -7) (undo-tree-id18436 . -7) (undo-tree-id18437 . -7) (undo-tree-id18438 . -7) (undo-tree-id18439 . -7) (undo-tree-id18440 . -7) (undo-tree-id18441 . -7) (undo-tree-id18442 . -7) (undo-tree-id18443 . -7) (undo-tree-id18444 . -7) (undo-tree-id18445 . -7) (undo-tree-id18446 . -7) (undo-tree-id18447 . -7) (undo-tree-id18448 . -7) (undo-tree-id18449 . -7) (undo-tree-id18450 . -7) (undo-tree-id18451 . -7) (undo-tree-id18452 . -7) (undo-tree-id18453 . -7) (undo-tree-id18454 . -7) (undo-tree-id18455 . -7) (undo-tree-id18456 . -7) (undo-tree-id18457 . -7) (undo-tree-id18458 . -7) (undo-tree-id18459 . -7) (undo-tree-id18460 . -7) (undo-tree-id18461 . -7) (undo-tree-id18462 . -7) (undo-tree-id18463 . -7) (undo-tree-id18464 . -7) (undo-tree-id18465 . -7) (undo-tree-id18466 . -7) (undo-tree-id18467 . -7) (undo-tree-id18468 . -7) (undo-tree-id18469 . -7) (undo-tree-id18470 . -7) (undo-tree-id18471 . -7) (undo-tree-id18472 . -7) (undo-tree-id18473 . -7) (undo-tree-id18474 . -7) (undo-tree-id18475 . -7) (undo-tree-id18476 . -7) (undo-tree-id18477 . -7) (undo-tree-id18478 . -7) (undo-tree-id18479 . -7) (undo-tree-id18480 . -7) (undo-tree-id18481 . -7) (undo-tree-id18482 . -7) (undo-tree-id18483 . -7) (undo-tree-id18484 . -7) (undo-tree-id18485 . -7) (undo-tree-id18486 . -7) (undo-tree-id18487 . -7) (undo-tree-id18488 . -7) (undo-tree-id18489 . -7) (undo-tree-id18490 . -7) (undo-tree-id18491 . -7) (undo-tree-id18492 . -7) (undo-tree-id18493 . -7) (undo-tree-id18494 . -7) (undo-tree-id18495 . -7) (undo-tree-id18496 . -7) (undo-tree-id18497 . -7) (undo-tree-id18498 . -7) (undo-tree-id18499 . -7) (undo-tree-id18500 . -7) (undo-tree-id18501 . -7) (undo-tree-id18502 . -7) (undo-tree-id18503 . -7) (undo-tree-id18504 . -7) (undo-tree-id18505 . -7) (undo-tree-id18506 . -7) (undo-tree-id18507 . -7) (undo-tree-id18508 . -7) (undo-tree-id18509 . -7) (undo-tree-id18510 . -7) (undo-tree-id18511 . -7) (undo-tree-id18512 . -7) (undo-tree-id18513 . -7) (undo-tree-id18514 . -7) (undo-tree-id18515 . -7) (undo-tree-id18516 . -7) (undo-tree-id18517 . -7) (undo-tree-id18518 . -7) (undo-tree-id18519 . -7) (undo-tree-id18520 . -7) (undo-tree-id18521 . -7) (undo-tree-id18522 . -7) (undo-tree-id18523 . -7) (undo-tree-id18524 . -7) (undo-tree-id18525 . -7) (undo-tree-id18526 . -7) (undo-tree-id18527 . -7) (undo-tree-id18528 . -7) (undo-tree-id18529 . -7) (undo-tree-id18530 . -7) (undo-tree-id18531 . -7) (undo-tree-id18532 . -7) (undo-tree-id18533 . -7) (undo-tree-id18534 . -7) (undo-tree-id18535 . -7) (undo-tree-id18536 . -7) (undo-tree-id18537 . -7) (undo-tree-id18538 . -7) (undo-tree-id18539 . -7) (undo-tree-id18540 . -7) (undo-tree-id18541 . -7) (undo-tree-id18542 . -7) (undo-tree-id18543 . -7) (undo-tree-id18544 . -7) (undo-tree-id18545 . -7) (undo-tree-id18546 . -7) (undo-tree-id18547 . -7) (undo-tree-id18548 . -7) (undo-tree-id18549 . -7) (undo-tree-id18550 . -7) (undo-tree-id18551 . -7) (undo-tree-id18552 . -7) (undo-tree-id18553 . -7) (undo-tree-id18554 . -7) (undo-tree-id18555 . -7) (undo-tree-id18556 . -7) (undo-tree-id18557 . -7) (undo-tree-id18558 . -7) (undo-tree-id18559 . -7) (undo-tree-id18560 . -7) (undo-tree-id18561 . -7) (undo-tree-id18562 . -7) (undo-tree-id18563 . -7) (undo-tree-id18564 . -7) (undo-tree-id18565 . -7) (undo-tree-id18566 . -7) (undo-tree-id18567 . -7) (undo-tree-id18568 . -7) (undo-tree-id18569 . -7) (undo-tree-id18570 . -7) (undo-tree-id18571 . -7) (undo-tree-id18572 . -7) (undo-tree-id18573 . -7) (undo-tree-id18574 . -7) (undo-tree-id18575 . -7) (undo-tree-id18576 . -7) (undo-tree-id18577 . -7) (undo-tree-id18578 . -7) (undo-tree-id18579 . -7) (undo-tree-id18580 . -7) (undo-tree-id18581 . -7) (undo-tree-id18582 . -7) (undo-tree-id18583 . -7) (undo-tree-id18584 . -7) (undo-tree-id18585 . -7) (undo-tree-id18586 . -7) (undo-tree-id18587 . -7) (undo-tree-id18588 . -7) (undo-tree-id18589 . -7) (undo-tree-id18590 . -7) (undo-tree-id18591 . -7) (undo-tree-id18592 . -7) (undo-tree-id18593 . -7) (undo-tree-id18594 . -7) (undo-tree-id18595 . -7) (undo-tree-id18596 . -7) (undo-tree-id18597 . -7) (undo-tree-id18598 . -7) (undo-tree-id18599 . -7) (undo-tree-id18600 . -7) (undo-tree-id18601 . -7) (undo-tree-id18602 . -7) (undo-tree-id18603 . -7) 4337) nil (26715 34579 346454 634000) 0 nil])
([nil nil ((#("called " 0 7 (face font-lock-comment-face fontified t)) . -4323) (undo-tree-id18152 . -7) (undo-tree-id18153 . -7) (undo-tree-id18154 . -7) (undo-tree-id18155 . -7) (undo-tree-id18156 . -7) (undo-tree-id18157 . -7) (undo-tree-id18158 . -7) (undo-tree-id18159 . -7) (undo-tree-id18160 . -7) (undo-tree-id18161 . -7) (undo-tree-id18162 . -7) (undo-tree-id18163 . -7) (undo-tree-id18164 . -7) (undo-tree-id18165 . -7) (undo-tree-id18166 . -7) (undo-tree-id18167 . -7) (undo-tree-id18168 . -7) (undo-tree-id18169 . -7) (undo-tree-id18170 . -7) (undo-tree-id18171 . -7) (undo-tree-id18172 . -7) (undo-tree-id18173 . -7) (undo-tree-id18174 . -7) (undo-tree-id18175 . -7) (undo-tree-id18176 . -7) (undo-tree-id18177 . -7) (undo-tree-id18178 . -7) (undo-tree-id18179 . -7) (undo-tree-id18180 . -7) (undo-tree-id18181 . -7) (undo-tree-id18182 . -7) (undo-tree-id18183 . -7) (undo-tree-id18184 . -7) (undo-tree-id18185 . -7) (undo-tree-id18186 . -7) (undo-tree-id18187 . -7) (undo-tree-id18188 . -7) (undo-tree-id18189 . -7) (undo-tree-id18190 . -7) (undo-tree-id18191 . -7) (undo-tree-id18192 . -7) (undo-tree-id18193 . -7) (undo-tree-id18194 . -7) (undo-tree-id18195 . -7) (undo-tree-id18196 . -7) (undo-tree-id18197 . -7) (undo-tree-id18198 . -7) (undo-tree-id18199 . -7) (undo-tree-id18200 . -7) (undo-tree-id18201 . -7) (undo-tree-id18202 . -7) (undo-tree-id18203 . -7) (undo-tree-id18204 . -7) (undo-tree-id18205 . -7) (undo-tree-id18206 . -7) (undo-tree-id18207 . -7) (undo-tree-id18208 . -7) (undo-tree-id18209 . -7) (undo-tree-id18210 . -7) (undo-tree-id18211 . -7) (undo-tree-id18212 . -7) (undo-tree-id18213 . -7) (undo-tree-id18214 . -7) (undo-tree-id18215 . -7) (undo-tree-id18216 . -7) (undo-tree-id18217 . -7) (undo-tree-id18218 . -7) (undo-tree-id18219 . -7) (undo-tree-id18220 . -7) (undo-tree-id18221 . -7) (undo-tree-id18222 . -7) (undo-tree-id18223 . -7) (undo-tree-id18224 . -7) (undo-tree-id18225 . -7) (undo-tree-id18226 . -7) (undo-tree-id18227 . -7) (undo-tree-id18228 . -7) (undo-tree-id18229 . -7) (undo-tree-id18230 . -7) (undo-tree-id18231 . -7) (undo-tree-id18232 . -7) (undo-tree-id18233 . -7) (undo-tree-id18234 . -7) (undo-tree-id18235 . -7) (undo-tree-id18236 . -7) (undo-tree-id18237 . -7) (undo-tree-id18238 . -7) (undo-tree-id18239 . -7) (undo-tree-id18240 . -7) (undo-tree-id18241 . -7) (undo-tree-id18242 . -7) (undo-tree-id18243 . -7) (undo-tree-id18244 . -7) (undo-tree-id18245 . -7) (undo-tree-id18246 . -7) (undo-tree-id18247 . -7) (undo-tree-id18248 . -7) (undo-tree-id18249 . -7) (undo-tree-id18250 . -7) (undo-tree-id18251 . -7) (undo-tree-id18252 . -7) (undo-tree-id18253 . -7) (undo-tree-id18254 . -7) (undo-tree-id18255 . -7) (undo-tree-id18256 . -7) (undo-tree-id18257 . -7) (undo-tree-id18258 . -7) (undo-tree-id18259 . -7) (undo-tree-id18260 . -7) (undo-tree-id18261 . -7) (undo-tree-id18262 . -7) (undo-tree-id18263 . -7) (undo-tree-id18264 . -7) (undo-tree-id18265 . -7) (undo-tree-id18266 . -7) (undo-tree-id18267 . -7) (undo-tree-id18268 . -7) (undo-tree-id18269 . -7) (undo-tree-id18270 . -7) (undo-tree-id18271 . -7) (undo-tree-id18272 . -7) (undo-tree-id18273 . -7) (undo-tree-id18274 . -7) (undo-tree-id18275 . -7) (undo-tree-id18276 . -7) (undo-tree-id18277 . -7) (undo-tree-id18278 . -7) (undo-tree-id18279 . -7) (undo-tree-id18280 . -7) (undo-tree-id18281 . -7) (undo-tree-id18282 . -7) (undo-tree-id18283 . -7) (undo-tree-id18284 . -7) (undo-tree-id18285 . -7) (undo-tree-id18286 . -7) (undo-tree-id18287 . -7) (undo-tree-id18288 . -7) (undo-tree-id18289 . -7) (undo-tree-id18290 . -7) (undo-tree-id18291 . -7) (undo-tree-id18292 . -7) (undo-tree-id18293 . -7) (undo-tree-id18294 . -7) (undo-tree-id18295 . -7) (undo-tree-id18296 . -7) (undo-tree-id18297 . -7) (undo-tree-id18298 . -7) (undo-tree-id18299 . -7) (undo-tree-id18300 . -7) (undo-tree-id18301 . -7) (undo-tree-id18302 . -7) (undo-tree-id18303 . -7) (undo-tree-id18304 . -7) (undo-tree-id18305 . -7) (undo-tree-id18306 . -7) (undo-tree-id18307 . -7) (undo-tree-id18308 . -7) (undo-tree-id18309 . -7) (undo-tree-id18310 . -7) (undo-tree-id18311 . -7) (undo-tree-id18312 . -7) (undo-tree-id18313 . -7) (undo-tree-id18314 . -7) (undo-tree-id18315 . -7) (undo-tree-id18316 . -7) (undo-tree-id18317 . -7) (undo-tree-id18318 . -7) (undo-tree-id18319 . -7) (undo-tree-id18320 . -7) (undo-tree-id18321 . -7) (undo-tree-id18322 . -7) (undo-tree-id18323 . -7) (undo-tree-id18324 . -7) (undo-tree-id18325 . -7) (undo-tree-id18326 . -7) (undo-tree-id18327 . -7) (undo-tree-id18328 . -7) (undo-tree-id18329 . -7) (undo-tree-id18330 . -7) (undo-tree-id18331 . -7) (undo-tree-id18332 . -7) (undo-tree-id18333 . -7) (undo-tree-id18334 . -7) (undo-tree-id18335 . -7) (undo-tree-id18336 . -7) (undo-tree-id18337 . -7) (undo-tree-id18338 . -7) (undo-tree-id18339 . -7) (undo-tree-id18340 . -7) (undo-tree-id18341 . -7) (undo-tree-id18342 . -7) (undo-tree-id18343 . -7) (undo-tree-id18344 . -7) (undo-tree-id18345 . -7) (undo-tree-id18346 . -7) (undo-tree-id18347 . -7) (undo-tree-id18348 . -7) (undo-tree-id18349 . -7) (undo-tree-id18350 . -7) (undo-tree-id18351 . -7) (undo-tree-id18352 . -7) (undo-tree-id18353 . -7) (undo-tree-id18354 . -7) (undo-tree-id18355 . -7) (undo-tree-id18356 . -7) (undo-tree-id18357 . -7) (undo-tree-id18358 . -7) (undo-tree-id18359 . -7) (undo-tree-id18360 . -7) (undo-tree-id18361 . -7) (undo-tree-id18362 . -7) (undo-tree-id18363 . -7) (undo-tree-id18364 . -7) (undo-tree-id18365 . -7) (undo-tree-id18366 . -7) (undo-tree-id18367 . -7) (undo-tree-id18368 . -7) (undo-tree-id18369 . -7) (undo-tree-id18370 . -7) (undo-tree-id18371 . -7) (undo-tree-id18372 . -7) (undo-tree-id18373 . -7) (undo-tree-id18374 . -7) (undo-tree-id18375 . -7) (undo-tree-id18376 . -7) (undo-tree-id18377 . -7) (undo-tree-id18378 . -7) (undo-tree-id18379 . -7) (undo-tree-id18380 . -7) 4330) nil (26715 34579 346353 474000) 0 nil])
([nil nil ((#("is " 0 3 (face font-lock-comment-face fontified t)) . -4320) (undo-tree-id17918 . -3) (undo-tree-id17919 . -3) (undo-tree-id17920 . -3) (undo-tree-id17921 . -3) (undo-tree-id17922 . -3) (undo-tree-id17923 . -3) (undo-tree-id17924 . -3) (undo-tree-id17925 . -3) (undo-tree-id17926 . -3) (undo-tree-id17927 . -3) (undo-tree-id17928 . -3) (undo-tree-id17929 . -3) (undo-tree-id17930 . -3) (undo-tree-id17931 . -3) (undo-tree-id17932 . -3) (undo-tree-id17933 . -3) (undo-tree-id17934 . -3) (undo-tree-id17935 . -3) (undo-tree-id17936 . -3) (undo-tree-id17937 . -3) (undo-tree-id17938 . -3) (undo-tree-id17939 . -3) (undo-tree-id17940 . -3) (undo-tree-id17941 . -3) (undo-tree-id17942 . -3) (undo-tree-id17943 . -3) (undo-tree-id17944 . -3) (undo-tree-id17945 . -3) (undo-tree-id17946 . -3) (undo-tree-id17947 . -3) (undo-tree-id17948 . -3) (undo-tree-id17949 . -3) (undo-tree-id17950 . -3) (undo-tree-id17951 . -3) (undo-tree-id17952 . -3) (undo-tree-id17953 . -3) (undo-tree-id17954 . -3) (undo-tree-id17955 . -3) (undo-tree-id17956 . -3) (undo-tree-id17957 . -3) (undo-tree-id17958 . -3) (undo-tree-id17959 . -3) (undo-tree-id17960 . -3) (undo-tree-id17961 . -3) (undo-tree-id17962 . -3) (undo-tree-id17963 . -3) (undo-tree-id17964 . -3) (undo-tree-id17965 . -3) (undo-tree-id17966 . -3) (undo-tree-id17967 . -3) (undo-tree-id17968 . -3) (undo-tree-id17969 . -3) (undo-tree-id17970 . -3) (undo-tree-id17971 . -3) (undo-tree-id17972 . -3) (undo-tree-id17973 . -3) (undo-tree-id17974 . -3) (undo-tree-id17975 . -3) (undo-tree-id17976 . -3) (undo-tree-id17977 . -3) (undo-tree-id17978 . -3) (undo-tree-id17979 . -3) (undo-tree-id17980 . -3) (undo-tree-id17981 . -3) (undo-tree-id17982 . -3) (undo-tree-id17983 . -3) (undo-tree-id17984 . -3) (undo-tree-id17985 . -3) (undo-tree-id17986 . -3) (undo-tree-id17987 . -3) (undo-tree-id17988 . -3) (undo-tree-id17989 . -3) (undo-tree-id17990 . -3) (undo-tree-id17991 . -3) (undo-tree-id17992 . -3) (undo-tree-id17993 . -3) (undo-tree-id17994 . -3) (undo-tree-id17995 . -3) (undo-tree-id17996 . -3) (undo-tree-id17997 . -3) (undo-tree-id17998 . -3) (undo-tree-id17999 . -3) (undo-tree-id18000 . -3) (undo-tree-id18001 . -3) (undo-tree-id18002 . -3) (undo-tree-id18003 . -3) (undo-tree-id18004 . -3) (undo-tree-id18005 . -3) (undo-tree-id18006 . -3) (undo-tree-id18007 . -3) (undo-tree-id18008 . -3) (undo-tree-id18009 . -3) (undo-tree-id18010 . -3) (undo-tree-id18011 . -3) (undo-tree-id18012 . -3) (undo-tree-id18013 . -3) (undo-tree-id18014 . -3) (undo-tree-id18015 . -3) (undo-tree-id18016 . -3) (undo-tree-id18017 . -3) (undo-tree-id18018 . -3) (undo-tree-id18019 . -3) (undo-tree-id18020 . -3) (undo-tree-id18021 . -3) (undo-tree-id18022 . -3) (undo-tree-id18023 . -3) (undo-tree-id18024 . -3) (undo-tree-id18025 . -3) (undo-tree-id18026 . -3) (undo-tree-id18027 . -3) (undo-tree-id18028 . -3) (undo-tree-id18029 . -3) (undo-tree-id18030 . -3) (undo-tree-id18031 . -3) (undo-tree-id18032 . -3) (undo-tree-id18033 . -3) (undo-tree-id18034 . -3) (undo-tree-id18035 . -3) (undo-tree-id18036 . -3) (undo-tree-id18037 . -3) (undo-tree-id18038 . -3) (undo-tree-id18039 . -3) (undo-tree-id18040 . -3) (undo-tree-id18041 . -3) (undo-tree-id18042 . -3) (undo-tree-id18043 . -3) (undo-tree-id18044 . -3) (undo-tree-id18045 . -3) (undo-tree-id18046 . -3) (undo-tree-id18047 . -3) (undo-tree-id18048 . -3) (undo-tree-id18049 . -3) (undo-tree-id18050 . -3) (undo-tree-id18051 . -3) (undo-tree-id18052 . -3) (undo-tree-id18053 . -3) (undo-tree-id18054 . -3) (undo-tree-id18055 . -3) (undo-tree-id18056 . -3) (undo-tree-id18057 . -3) (undo-tree-id18058 . -3) (undo-tree-id18059 . -3) (undo-tree-id18060 . -3) (undo-tree-id18061 . -3) (undo-tree-id18062 . -3) (undo-tree-id18063 . -3) (undo-tree-id18064 . -3) (undo-tree-id18065 . -3) (undo-tree-id18066 . -3) (undo-tree-id18067 . -3) (undo-tree-id18068 . -3) (undo-tree-id18069 . -3) (undo-tree-id18070 . -3) (undo-tree-id18071 . -3) (undo-tree-id18072 . -3) (undo-tree-id18073 . -3) (undo-tree-id18074 . -3) (undo-tree-id18075 . -3) (undo-tree-id18076 . -3) (undo-tree-id18077 . -3) (undo-tree-id18078 . -3) (undo-tree-id18079 . -3) (undo-tree-id18080 . -3) (undo-tree-id18081 . -3) (undo-tree-id18082 . -3) (undo-tree-id18083 . -3) (undo-tree-id18084 . -3) (undo-tree-id18085 . -3) (undo-tree-id18086 . -3) (undo-tree-id18087 . -3) (undo-tree-id18088 . -3) (undo-tree-id18089 . -3) (undo-tree-id18090 . -3) (undo-tree-id18091 . -3) (undo-tree-id18092 . -3) (undo-tree-id18093 . -3) (undo-tree-id18094 . -3) (undo-tree-id18095 . -3) (undo-tree-id18096 . -3) (undo-tree-id18097 . -3) (undo-tree-id18098 . -3) (undo-tree-id18099 . -3) (undo-tree-id18100 . -3) (undo-tree-id18101 . -3) (undo-tree-id18102 . -3) (undo-tree-id18103 . -3) (undo-tree-id18104 . -3) (undo-tree-id18105 . -3) (undo-tree-id18106 . -3) (undo-tree-id18107 . -3) (undo-tree-id18108 . -3) (undo-tree-id18109 . -3) (undo-tree-id18110 . -3) (undo-tree-id18111 . -3) (undo-tree-id18112 . -3) (undo-tree-id18113 . -3) (undo-tree-id18114 . -3) (undo-tree-id18115 . -3) (undo-tree-id18116 . -3) (undo-tree-id18117 . -3) (undo-tree-id18118 . -3) (undo-tree-id18119 . -3) (undo-tree-id18120 . -3) (undo-tree-id18121 . -3) (undo-tree-id18122 . -3) (undo-tree-id18123 . -3) (undo-tree-id18124 . -3) (undo-tree-id18125 . -3) (undo-tree-id18126 . -3) (undo-tree-id18127 . -3) (undo-tree-id18128 . -3) (undo-tree-id18129 . -3) (undo-tree-id18130 . -3) (undo-tree-id18131 . -3) (undo-tree-id18132 . -3) (undo-tree-id18133 . -3) (undo-tree-id18134 . -3) (undo-tree-id18135 . -3) (undo-tree-id18136 . -3) (undo-tree-id18137 . -3) (undo-tree-id18138 . -3) (undo-tree-id18139 . -3) (undo-tree-id18140 . -3) (undo-tree-id18141 . -3) (undo-tree-id18142 . -3) (undo-tree-id18143 . -3) (undo-tree-id18144 . -3) (undo-tree-id18145 . -3) (undo-tree-id18146 . -3) (undo-tree-id18147 . -3) (undo-tree-id18148 . -3) (undo-tree-id18149 . -3) (undo-tree-id18150 . -3) (undo-tree-id18151 . -3) 4323) nil (26715 34579 346247 433000) 0 nil])
([nil nil ((#("which " 0 6 (face font-lock-comment-face fontified t)) . -4314) (undo-tree-id17679 . -6) (undo-tree-id17680 . -6) (undo-tree-id17681 . -6) (undo-tree-id17682 . -6) (undo-tree-id17683 . -6) (undo-tree-id17684 . -6) (undo-tree-id17685 . -6) (undo-tree-id17686 . -6) (undo-tree-id17687 . -6) (undo-tree-id17688 . -6) (undo-tree-id17689 . -6) (undo-tree-id17690 . -6) (undo-tree-id17691 . -6) (undo-tree-id17692 . -6) (undo-tree-id17693 . -6) (undo-tree-id17694 . -6) (undo-tree-id17695 . -6) (undo-tree-id17696 . -6) (undo-tree-id17697 . -6) (undo-tree-id17698 . -6) (undo-tree-id17699 . -6) (undo-tree-id17700 . -6) (undo-tree-id17701 . -6) (undo-tree-id17702 . -6) (undo-tree-id17703 . -6) (undo-tree-id17704 . -6) (undo-tree-id17705 . -6) (undo-tree-id17706 . -6) (undo-tree-id17707 . -6) (undo-tree-id17708 . -6) (undo-tree-id17709 . -6) (undo-tree-id17710 . -6) (undo-tree-id17711 . -6) (undo-tree-id17712 . -6) (undo-tree-id17713 . -6) (undo-tree-id17714 . -6) (undo-tree-id17715 . -6) (undo-tree-id17716 . -6) (undo-tree-id17717 . -6) (undo-tree-id17718 . -6) (undo-tree-id17719 . -6) (undo-tree-id17720 . -6) (undo-tree-id17721 . -6) (undo-tree-id17722 . -6) (undo-tree-id17723 . -6) (undo-tree-id17724 . -6) (undo-tree-id17725 . -6) (undo-tree-id17726 . -6) (undo-tree-id17727 . -6) (undo-tree-id17728 . -6) (undo-tree-id17729 . -6) (undo-tree-id17730 . -6) (undo-tree-id17731 . -6) (undo-tree-id17732 . -6) (undo-tree-id17733 . -6) (undo-tree-id17734 . -6) (undo-tree-id17735 . -6) (undo-tree-id17736 . -6) (undo-tree-id17737 . -6) (undo-tree-id17738 . -6) (undo-tree-id17739 . -6) (undo-tree-id17740 . -6) (undo-tree-id17741 . -6) (undo-tree-id17742 . -6) (undo-tree-id17743 . -6) (undo-tree-id17744 . -6) (undo-tree-id17745 . -6) (undo-tree-id17746 . -6) (undo-tree-id17747 . -6) (undo-tree-id17748 . -6) (undo-tree-id17749 . -6) (undo-tree-id17750 . -6) (undo-tree-id17751 . -6) (undo-tree-id17752 . -6) (undo-tree-id17753 . -6) (undo-tree-id17754 . -6) (undo-tree-id17755 . -6) (undo-tree-id17756 . -6) (undo-tree-id17757 . -6) (undo-tree-id17758 . -6) (undo-tree-id17759 . -6) (undo-tree-id17760 . -6) (undo-tree-id17761 . -6) (undo-tree-id17762 . -6) (undo-tree-id17763 . -6) (undo-tree-id17764 . -6) (undo-tree-id17765 . -6) (undo-tree-id17766 . -6) (undo-tree-id17767 . -6) (undo-tree-id17768 . -6) (undo-tree-id17769 . -6) (undo-tree-id17770 . -6) (undo-tree-id17771 . -6) (undo-tree-id17772 . -6) (undo-tree-id17773 . -6) (undo-tree-id17774 . -6) (undo-tree-id17775 . -6) (undo-tree-id17776 . -6) (undo-tree-id17777 . -6) (undo-tree-id17778 . -6) (undo-tree-id17779 . -6) (undo-tree-id17780 . -6) (undo-tree-id17781 . -6) (undo-tree-id17782 . -6) (undo-tree-id17783 . -6) (undo-tree-id17784 . -6) (undo-tree-id17785 . -6) (undo-tree-id17786 . -6) (undo-tree-id17787 . -6) (undo-tree-id17788 . -6) (undo-tree-id17789 . -6) (undo-tree-id17790 . -6) (undo-tree-id17791 . -6) (undo-tree-id17792 . -6) (undo-tree-id17793 . -6) (undo-tree-id17794 . -6) (undo-tree-id17795 . -6) (undo-tree-id17796 . -6) (undo-tree-id17797 . -6) (undo-tree-id17798 . -6) (undo-tree-id17799 . -6) (undo-tree-id17800 . -6) (undo-tree-id17801 . -6) (undo-tree-id17802 . -6) (undo-tree-id17803 . -6) (undo-tree-id17804 . -6) (undo-tree-id17805 . -6) (undo-tree-id17806 . -6) (undo-tree-id17807 . -6) (undo-tree-id17808 . -6) (undo-tree-id17809 . -6) (undo-tree-id17810 . -6) (undo-tree-id17811 . -6) (undo-tree-id17812 . -6) (undo-tree-id17813 . -6) (undo-tree-id17814 . -6) (undo-tree-id17815 . -6) (undo-tree-id17816 . -6) (undo-tree-id17817 . -6) (undo-tree-id17818 . -6) (undo-tree-id17819 . -6) (undo-tree-id17820 . -6) (undo-tree-id17821 . -6) (undo-tree-id17822 . -6) (undo-tree-id17823 . -6) (undo-tree-id17824 . -6) (undo-tree-id17825 . -6) (undo-tree-id17826 . -6) (undo-tree-id17827 . -6) (undo-tree-id17828 . -6) (undo-tree-id17829 . -6) (undo-tree-id17830 . -6) (undo-tree-id17831 . -6) (undo-tree-id17832 . -6) (undo-tree-id17833 . -6) (undo-tree-id17834 . -6) (undo-tree-id17835 . -6) (undo-tree-id17836 . -6) (undo-tree-id17837 . -6) (undo-tree-id17838 . -6) (undo-tree-id17839 . -6) (undo-tree-id17840 . -6) (undo-tree-id17841 . -6) (undo-tree-id17842 . -6) (undo-tree-id17843 . -6) (undo-tree-id17844 . -6) (undo-tree-id17845 . -6) (undo-tree-id17846 . -6) (undo-tree-id17847 . -6) (undo-tree-id17848 . -6) (undo-tree-id17849 . -6) (undo-tree-id17850 . -6) (undo-tree-id17851 . -6) (undo-tree-id17852 . -6) (undo-tree-id17853 . -6) (undo-tree-id17854 . -6) (undo-tree-id17855 . -6) (undo-tree-id17856 . -6) (undo-tree-id17857 . -6) (undo-tree-id17858 . -6) (undo-tree-id17859 . -6) (undo-tree-id17860 . -6) (undo-tree-id17861 . -6) (undo-tree-id17862 . -6) (undo-tree-id17863 . -6) (undo-tree-id17864 . -6) (undo-tree-id17865 . -6) (undo-tree-id17866 . -6) (undo-tree-id17867 . -6) (undo-tree-id17868 . -6) (undo-tree-id17869 . -6) (undo-tree-id17870 . -6) (undo-tree-id17871 . -6) (undo-tree-id17872 . -6) (undo-tree-id17873 . -6) (undo-tree-id17874 . -6) (undo-tree-id17875 . -6) (undo-tree-id17876 . -6) (undo-tree-id17877 . -6) (undo-tree-id17878 . -6) (undo-tree-id17879 . -6) (undo-tree-id17880 . -6) (undo-tree-id17881 . -6) (undo-tree-id17882 . -6) (undo-tree-id17883 . -6) (undo-tree-id17884 . -6) (undo-tree-id17885 . -6) (undo-tree-id17886 . -6) (undo-tree-id17887 . -6) (undo-tree-id17888 . -6) (undo-tree-id17889 . -6) (undo-tree-id17890 . -6) (undo-tree-id17891 . -6) (undo-tree-id17892 . -6) (undo-tree-id17893 . -6) (undo-tree-id17894 . -6) (undo-tree-id17895 . -6) (undo-tree-id17896 . -6) (undo-tree-id17897 . -6) (undo-tree-id17898 . -6) (undo-tree-id17899 . -6) (undo-tree-id17900 . -6) (undo-tree-id17901 . -6) (undo-tree-id17902 . -6) (undo-tree-id17903 . -6) (undo-tree-id17904 . -6) (undo-tree-id17905 . -6) (undo-tree-id17906 . -6) (undo-tree-id17907 . -6) (undo-tree-id17908 . -6) (undo-tree-id17909 . -6) (undo-tree-id17910 . -6) (undo-tree-id17911 . -6) (undo-tree-id17912 . -6) (undo-tree-id17913 . -6) (undo-tree-id17914 . -6) (undo-tree-id17915 . -6) (undo-tree-id17916 . -6) (undo-tree-id17917 . -6) 4320) nil (26715 34579 346124 610000) 0 nil])
([nil nil ((#("function " 0 9 (face font-lock-comment-face fontified t)) . -4305) (undo-tree-id17435 . -9) (undo-tree-id17436 . -9) (undo-tree-id17437 . -9) (undo-tree-id17438 . -9) (undo-tree-id17439 . -9) (undo-tree-id17440 . -9) (undo-tree-id17441 . -9) (undo-tree-id17442 . -9) (undo-tree-id17443 . -9) (undo-tree-id17444 . -9) (undo-tree-id17445 . -9) (undo-tree-id17446 . -9) (undo-tree-id17447 . -9) (undo-tree-id17448 . -9) (undo-tree-id17449 . -9) (undo-tree-id17450 . -9) (undo-tree-id17451 . -9) (undo-tree-id17452 . -9) (undo-tree-id17453 . -9) (undo-tree-id17454 . -9) (undo-tree-id17455 . -9) (undo-tree-id17456 . -9) (undo-tree-id17457 . -9) (undo-tree-id17458 . -9) (undo-tree-id17459 . -9) (undo-tree-id17460 . -9) (undo-tree-id17461 . -9) (undo-tree-id17462 . -9) (undo-tree-id17463 . -9) (undo-tree-id17464 . -9) (undo-tree-id17465 . -9) (undo-tree-id17466 . -9) (undo-tree-id17467 . -9) (undo-tree-id17468 . -9) (undo-tree-id17469 . -9) (undo-tree-id17470 . -9) (undo-tree-id17471 . -9) (undo-tree-id17472 . -9) (undo-tree-id17473 . -9) (undo-tree-id17474 . -9) (undo-tree-id17475 . -9) (undo-tree-id17476 . -9) (undo-tree-id17477 . -9) (undo-tree-id17478 . -9) (undo-tree-id17479 . -9) (undo-tree-id17480 . -9) (undo-tree-id17481 . -9) (undo-tree-id17482 . -9) (undo-tree-id17483 . -9) (undo-tree-id17484 . -9) (undo-tree-id17485 . -9) (undo-tree-id17486 . -9) (undo-tree-id17487 . -9) (undo-tree-id17488 . -9) (undo-tree-id17489 . -9) (undo-tree-id17490 . -9) (undo-tree-id17491 . -9) (undo-tree-id17492 . -9) (undo-tree-id17493 . -9) (undo-tree-id17494 . -9) (undo-tree-id17495 . -9) (undo-tree-id17496 . -9) (undo-tree-id17497 . -9) (undo-tree-id17498 . -9) (undo-tree-id17499 . -9) (undo-tree-id17500 . -9) (undo-tree-id17501 . -9) (undo-tree-id17502 . -9) (undo-tree-id17503 . -9) (undo-tree-id17504 . -9) (undo-tree-id17505 . -9) (undo-tree-id17506 . -9) (undo-tree-id17507 . -9) (undo-tree-id17508 . -9) (undo-tree-id17509 . -9) (undo-tree-id17510 . -9) (undo-tree-id17511 . -9) (undo-tree-id17512 . -9) (undo-tree-id17513 . -9) (undo-tree-id17514 . -9) (undo-tree-id17515 . -9) (undo-tree-id17516 . -9) (undo-tree-id17517 . -9) (undo-tree-id17518 . -9) (undo-tree-id17519 . -9) (undo-tree-id17520 . -9) (undo-tree-id17521 . -9) (undo-tree-id17522 . -9) (undo-tree-id17523 . -9) (undo-tree-id17524 . -9) (undo-tree-id17525 . -9) (undo-tree-id17526 . -9) (undo-tree-id17527 . -9) (undo-tree-id17528 . -9) (undo-tree-id17529 . -9) (undo-tree-id17530 . -9) (undo-tree-id17531 . -9) (undo-tree-id17532 . -9) (undo-tree-id17533 . -9) (undo-tree-id17534 . -9) (undo-tree-id17535 . -9) (undo-tree-id17536 . -9) (undo-tree-id17537 . -9) (undo-tree-id17538 . -9) (undo-tree-id17539 . -9) (undo-tree-id17540 . -9) (undo-tree-id17541 . -9) (undo-tree-id17542 . -9) (undo-tree-id17543 . -9) (undo-tree-id17544 . -9) (undo-tree-id17545 . -9) (undo-tree-id17546 . -9) (undo-tree-id17547 . -9) (undo-tree-id17548 . -9) (undo-tree-id17549 . -9) (undo-tree-id17550 . -9) (undo-tree-id17551 . -9) (undo-tree-id17552 . -9) (undo-tree-id17553 . -9) (undo-tree-id17554 . -9) (undo-tree-id17555 . -9) (undo-tree-id17556 . -9) (undo-tree-id17557 . -9) (undo-tree-id17558 . -9) (undo-tree-id17559 . -9) (undo-tree-id17560 . -9) (undo-tree-id17561 . -9) (undo-tree-id17562 . -9) (undo-tree-id17563 . -9) (undo-tree-id17564 . -9) (undo-tree-id17565 . -9) (undo-tree-id17566 . -9) (undo-tree-id17567 . -9) (undo-tree-id17568 . -9) (undo-tree-id17569 . -9) (undo-tree-id17570 . -9) (undo-tree-id17571 . -9) (undo-tree-id17572 . -9) (undo-tree-id17573 . -9) (undo-tree-id17574 . -9) (undo-tree-id17575 . -9) (undo-tree-id17576 . -9) (undo-tree-id17577 . -9) (undo-tree-id17578 . -9) (undo-tree-id17579 . -9) (undo-tree-id17580 . -9) (undo-tree-id17581 . -9) (undo-tree-id17582 . -9) (undo-tree-id17583 . -9) (undo-tree-id17584 . -9) (undo-tree-id17585 . -9) (undo-tree-id17586 . -9) (undo-tree-id17587 . -9) (undo-tree-id17588 . -9) (undo-tree-id17589 . -9) (undo-tree-id17590 . -9) (undo-tree-id17591 . -9) (undo-tree-id17592 . -9) (undo-tree-id17593 . -9) (undo-tree-id17594 . -9) (undo-tree-id17595 . -9) (undo-tree-id17596 . -9) (undo-tree-id17597 . -9) (undo-tree-id17598 . -9) (undo-tree-id17599 . -9) (undo-tree-id17600 . -9) (undo-tree-id17601 . -9) (undo-tree-id17602 . -9) (undo-tree-id17603 . -9) (undo-tree-id17604 . -9) (undo-tree-id17605 . -9) (undo-tree-id17606 . -9) (undo-tree-id17607 . -9) (undo-tree-id17608 . -9) (undo-tree-id17609 . -9) (undo-tree-id17610 . -9) (undo-tree-id17611 . -9) (undo-tree-id17612 . -9) (undo-tree-id17613 . -9) (undo-tree-id17614 . -9) (undo-tree-id17615 . -9) (undo-tree-id17616 . -9) (undo-tree-id17617 . -9) (undo-tree-id17618 . -9) (undo-tree-id17619 . -9) (undo-tree-id17620 . -9) (undo-tree-id17621 . -9) (undo-tree-id17622 . -9) (undo-tree-id17623 . -9) (undo-tree-id17624 . -9) (undo-tree-id17625 . -9) (undo-tree-id17626 . -9) (undo-tree-id17627 . -9) (undo-tree-id17628 . -9) (undo-tree-id17629 . -9) (undo-tree-id17630 . -9) (undo-tree-id17631 . -9) (undo-tree-id17632 . -9) (undo-tree-id17633 . -9) (undo-tree-id17634 . -9) (undo-tree-id17635 . -9) (undo-tree-id17636 . -9) (undo-tree-id17637 . -9) (undo-tree-id17638 . -9) (undo-tree-id17639 . -9) (undo-tree-id17640 . -9) (undo-tree-id17641 . -9) (undo-tree-id17642 . -9) (undo-tree-id17643 . -9) (undo-tree-id17644 . -9) (undo-tree-id17645 . -9) (undo-tree-id17646 . -9) (undo-tree-id17647 . -9) (undo-tree-id17648 . -9) (undo-tree-id17649 . -9) (undo-tree-id17650 . -9) (undo-tree-id17651 . -9) (undo-tree-id17652 . -9) (undo-tree-id17653 . -9) (undo-tree-id17654 . -9) (undo-tree-id17655 . -9) (undo-tree-id17656 . -9) (undo-tree-id17657 . -9) (undo-tree-id17658 . -9) (undo-tree-id17659 . -9) (undo-tree-id17660 . -9) (undo-tree-id17661 . -9) (undo-tree-id17662 . -9) (undo-tree-id17663 . -9) (undo-tree-id17664 . -9) (undo-tree-id17665 . -9) (undo-tree-id17666 . -9) (undo-tree-id17667 . -9) (undo-tree-id17668 . -9) (undo-tree-id17669 . -9) (undo-tree-id17670 . -9) (undo-tree-id17671 . -9) (undo-tree-id17672 . -9) (undo-tree-id17673 . -9) (undo-tree-id17674 . -9) (undo-tree-id17675 . -9) (undo-tree-id17676 . -9) (undo-tree-id17677 . -9) (undo-tree-id17678 . -9) 4314) nil (26715 34579 345987 373000) 0 nil])
([nil nil ((#("the " 0 4 (face font-lock-comment-face fontified t)) . -4301) (undo-tree-id17186 . -4) (undo-tree-id17187 . -4) (undo-tree-id17188 . -4) (undo-tree-id17189 . -4) (undo-tree-id17190 . -4) (undo-tree-id17191 . -4) (undo-tree-id17192 . -4) (undo-tree-id17193 . -4) (undo-tree-id17194 . -4) (undo-tree-id17195 . -4) (undo-tree-id17196 . -4) (undo-tree-id17197 . -4) (undo-tree-id17198 . -4) (undo-tree-id17199 . -4) (undo-tree-id17200 . -4) (undo-tree-id17201 . -4) (undo-tree-id17202 . -4) (undo-tree-id17203 . -4) (undo-tree-id17204 . -4) (undo-tree-id17205 . -4) (undo-tree-id17206 . -4) (undo-tree-id17207 . -4) (undo-tree-id17208 . -4) (undo-tree-id17209 . -4) (undo-tree-id17210 . -4) (undo-tree-id17211 . -4) (undo-tree-id17212 . -4) (undo-tree-id17213 . -4) (undo-tree-id17214 . -4) (undo-tree-id17215 . -4) (undo-tree-id17216 . -4) (undo-tree-id17217 . -4) (undo-tree-id17218 . -4) (undo-tree-id17219 . -4) (undo-tree-id17220 . -4) (undo-tree-id17221 . -4) (undo-tree-id17222 . -4) (undo-tree-id17223 . -4) (undo-tree-id17224 . -4) (undo-tree-id17225 . -4) (undo-tree-id17226 . -4) (undo-tree-id17227 . -4) (undo-tree-id17228 . -4) (undo-tree-id17229 . -4) (undo-tree-id17230 . -4) (undo-tree-id17231 . -4) (undo-tree-id17232 . -4) (undo-tree-id17233 . -4) (undo-tree-id17234 . -4) (undo-tree-id17235 . -4) (undo-tree-id17236 . -4) (undo-tree-id17237 . -4) (undo-tree-id17238 . -4) (undo-tree-id17239 . -4) (undo-tree-id17240 . -4) (undo-tree-id17241 . -4) (undo-tree-id17242 . -4) (undo-tree-id17243 . -4) (undo-tree-id17244 . -4) (undo-tree-id17245 . -4) (undo-tree-id17246 . -4) (undo-tree-id17247 . -4) (undo-tree-id17248 . -4) (undo-tree-id17249 . -4) (undo-tree-id17250 . -4) (undo-tree-id17251 . -4) (undo-tree-id17252 . -4) (undo-tree-id17253 . -4) (undo-tree-id17254 . -4) (undo-tree-id17255 . -4) (undo-tree-id17256 . -4) (undo-tree-id17257 . -4) (undo-tree-id17258 . -4) (undo-tree-id17259 . -4) (undo-tree-id17260 . -4) (undo-tree-id17261 . -4) (undo-tree-id17262 . -4) (undo-tree-id17263 . -4) (undo-tree-id17264 . -4) (undo-tree-id17265 . -4) (undo-tree-id17266 . -4) (undo-tree-id17267 . -4) (undo-tree-id17268 . -4) (undo-tree-id17269 . -4) (undo-tree-id17270 . -4) (undo-tree-id17271 . -4) (undo-tree-id17272 . -4) (undo-tree-id17273 . -4) (undo-tree-id17274 . -4) (undo-tree-id17275 . -4) (undo-tree-id17276 . -4) (undo-tree-id17277 . -4) (undo-tree-id17278 . -4) (undo-tree-id17279 . -4) (undo-tree-id17280 . -4) (undo-tree-id17281 . -4) (undo-tree-id17282 . -4) (undo-tree-id17283 . -4) (undo-tree-id17284 . -4) (undo-tree-id17285 . -4) (undo-tree-id17286 . -4) (undo-tree-id17287 . -4) (undo-tree-id17288 . -4) (undo-tree-id17289 . -4) (undo-tree-id17290 . -4) (undo-tree-id17291 . -4) (undo-tree-id17292 . -4) (undo-tree-id17293 . -4) (undo-tree-id17294 . -4) (undo-tree-id17295 . -4) (undo-tree-id17296 . -4) (undo-tree-id17297 . -4) (undo-tree-id17298 . -4) (undo-tree-id17299 . -4) (undo-tree-id17300 . -4) (undo-tree-id17301 . -4) (undo-tree-id17302 . -4) (undo-tree-id17303 . -4) (undo-tree-id17304 . -4) (undo-tree-id17305 . -4) (undo-tree-id17306 . -4) (undo-tree-id17307 . -4) (undo-tree-id17308 . -4) (undo-tree-id17309 . -4) (undo-tree-id17310 . -4) (undo-tree-id17311 . -4) (undo-tree-id17312 . -4) (undo-tree-id17313 . -4) (undo-tree-id17314 . -4) (undo-tree-id17315 . -4) (undo-tree-id17316 . -4) (undo-tree-id17317 . -4) (undo-tree-id17318 . -4) (undo-tree-id17319 . -4) (undo-tree-id17320 . -4) (undo-tree-id17321 . -4) (undo-tree-id17322 . -4) (undo-tree-id17323 . -4) (undo-tree-id17324 . -4) (undo-tree-id17325 . -4) (undo-tree-id17326 . -4) (undo-tree-id17327 . -4) (undo-tree-id17328 . -4) (undo-tree-id17329 . -4) (undo-tree-id17330 . -4) (undo-tree-id17331 . -4) (undo-tree-id17332 . -4) (undo-tree-id17333 . -4) (undo-tree-id17334 . -4) (undo-tree-id17335 . -4) (undo-tree-id17336 . -4) (undo-tree-id17337 . -4) (undo-tree-id17338 . -4) (undo-tree-id17339 . -4) (undo-tree-id17340 . -4) (undo-tree-id17341 . -4) (undo-tree-id17342 . -4) (undo-tree-id17343 . -4) (undo-tree-id17344 . -4) (undo-tree-id17345 . -4) (undo-tree-id17346 . -4) (undo-tree-id17347 . -4) (undo-tree-id17348 . -4) (undo-tree-id17349 . -4) (undo-tree-id17350 . -4) (undo-tree-id17351 . -4) (undo-tree-id17352 . -4) (undo-tree-id17353 . -4) (undo-tree-id17354 . -4) (undo-tree-id17355 . -4) (undo-tree-id17356 . -4) (undo-tree-id17357 . -4) (undo-tree-id17358 . -4) (undo-tree-id17359 . -4) (undo-tree-id17360 . -4) (undo-tree-id17361 . -4) (undo-tree-id17362 . -4) (undo-tree-id17363 . -4) (undo-tree-id17364 . -4) (undo-tree-id17365 . -4) (undo-tree-id17366 . -4) (undo-tree-id17367 . -4) (undo-tree-id17368 . -4) (undo-tree-id17369 . -4) (undo-tree-id17370 . -4) (undo-tree-id17371 . -4) (undo-tree-id17372 . -4) (undo-tree-id17373 . -4) (undo-tree-id17374 . -4) (undo-tree-id17375 . -4) (undo-tree-id17376 . -4) (undo-tree-id17377 . -4) (undo-tree-id17378 . -4) (undo-tree-id17379 . -4) (undo-tree-id17380 . -4) (undo-tree-id17381 . -4) (undo-tree-id17382 . -4) (undo-tree-id17383 . -4) (undo-tree-id17384 . -4) (undo-tree-id17385 . -4) (undo-tree-id17386 . -4) (undo-tree-id17387 . -4) (undo-tree-id17388 . -4) (undo-tree-id17389 . -4) (undo-tree-id17390 . -4) (undo-tree-id17391 . -4) (undo-tree-id17392 . -4) (undo-tree-id17393 . -4) (undo-tree-id17394 . -4) (undo-tree-id17395 . -4) (undo-tree-id17396 . -4) (undo-tree-id17397 . -4) (undo-tree-id17398 . -4) (undo-tree-id17399 . -4) (undo-tree-id17400 . -4) (undo-tree-id17401 . -4) (undo-tree-id17402 . -4) (undo-tree-id17403 . -4) (undo-tree-id17404 . -4) (undo-tree-id17405 . -4) (undo-tree-id17406 . -4) (undo-tree-id17407 . -4) (undo-tree-id17408 . -4) (undo-tree-id17409 . -4) (undo-tree-id17410 . -4) (undo-tree-id17411 . -4) (undo-tree-id17412 . -4) (undo-tree-id17413 . -4) (undo-tree-id17414 . -4) (undo-tree-id17415 . -4) (undo-tree-id17416 . -4) (undo-tree-id17417 . -4) (undo-tree-id17418 . -4) (undo-tree-id17419 . -4) (undo-tree-id17420 . -4) (undo-tree-id17421 . -4) (undo-tree-id17422 . -4) (undo-tree-id17423 . -4) (undo-tree-id17424 . -4) (undo-tree-id17425 . -4) (undo-tree-id17426 . -4) (undo-tree-id17427 . -4) (undo-tree-id17428 . -4) (undo-tree-id17429 . -4) (undo-tree-id17430 . -4) (undo-tree-id17431 . -4) (undo-tree-id17432 . -4) (undo-tree-id17433 . -4) (undo-tree-id17434 . -4) 4305) nil (26715 34579 345847 693000) 0 nil])
([nil nil ((4301 . 4312)) nil (26715 34579 345719 668000) 0 nil])
([nil nil ((4312 . 4313)) nil (26715 34579 345719 192000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face fontified t)) . -4312) (undo-tree-id17175 . -1) (undo-tree-id17176 . -1) (undo-tree-id17177 . -1) (undo-tree-id17178 . -1) (undo-tree-id17179 . -1) (undo-tree-id17180 . -1) (undo-tree-id17181 . -1) (undo-tree-id17182 . -1) (undo-tree-id17183 . -1) (undo-tree-id17184 . -1) (undo-tree-id17185 . -1) 4313) nil (26715 34579 345718 744000) 0 nil])
([nil nil ((4312 . 4321)) nil (26715 34579 345713 771000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -4320) (undo-tree-id17168 . -1) (undo-tree-id17169 . -1) (undo-tree-id17170 . -1) (undo-tree-id17171 . -1) (undo-tree-id17172 . -1) (undo-tree-id17173 . -1) (undo-tree-id17174 . -1) 4321) nil (26715 34579 345713 112000) 0 nil])
([nil nil ((4320 . 4333)) nil (26715 34579 345709 209000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -4332) (undo-tree-id17157 . -1) (undo-tree-id17158 . -1) (undo-tree-id17159 . -1) (undo-tree-id17160 . -1) (undo-tree-id17161 . -1) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (undo-tree-id17164 . -1) (undo-tree-id17165 . -1) (undo-tree-id17166 . -1) (undo-tree-id17167 . -1) 4333) nil (26715 34579 345708 443000) 0 nil])
([nil nil ((#("functions " 0 10 (face font-lock-comment-face fontified t)) . -4322) (undo-tree-id17085 . -1) (undo-tree-id17086 . -1) (undo-tree-id17087 . -1) (undo-tree-id17088 . -1) (undo-tree-id17089 . -1) (undo-tree-id17090 . -2) (undo-tree-id17091 . -2) (undo-tree-id17092 . -2) (undo-tree-id17093 . -2) (undo-tree-id17094 . -2) (undo-tree-id17095 . -3) (undo-tree-id17096 . -3) (undo-tree-id17097 . -3) (undo-tree-id17098 . -3) (undo-tree-id17099 . -3) (undo-tree-id17100 . -4) (undo-tree-id17101 . -4) (undo-tree-id17102 . -4) (undo-tree-id17103 . -4) (undo-tree-id17104 . -4) (undo-tree-id17105 . -5) (undo-tree-id17106 . -5) (undo-tree-id17107 . -5) (undo-tree-id17108 . -5) (undo-tree-id17109 . -5) (undo-tree-id17110 . -6) (undo-tree-id17111 . -6) (undo-tree-id17112 . -6) (undo-tree-id17113 . -6) (undo-tree-id17114 . -6) (undo-tree-id17115 . -7) (undo-tree-id17116 . -7) (undo-tree-id17117 . -7) (undo-tree-id17118 . -7) (undo-tree-id17119 . -7) (undo-tree-id17120 . -8) (undo-tree-id17121 . -8) (undo-tree-id17122 . -8) (undo-tree-id17123 . -8) (undo-tree-id17124 . -8) (undo-tree-id17125 . -9) (undo-tree-id17126 . -9) (undo-tree-id17127 . -9) (undo-tree-id17128 . -9) (undo-tree-id17129 . -9) (undo-tree-id17130 . -10) (undo-tree-id17131 . -10) (undo-tree-id17132 . -10) (undo-tree-id17133 . -10) (undo-tree-id17134 . -10) (undo-tree-id17135 . -10) (undo-tree-id17136 . -10) (undo-tree-id17137 . -10) (undo-tree-id17138 . -10) (undo-tree-id17139 . -10) (undo-tree-id17140 . -10) (undo-tree-id17141 . -10) (undo-tree-id17142 . -10) (undo-tree-id17143 . -10) (undo-tree-id17144 . -10) (undo-tree-id17145 . -10) (undo-tree-id17146 . -10) (undo-tree-id17147 . -10) (undo-tree-id17148 . -10) (undo-tree-id17149 . -10) (undo-tree-id17150 . -10) (undo-tree-id17151 . -10) (undo-tree-id17152 . -10) (undo-tree-id17153 . -10) (undo-tree-id17154 . -10) (undo-tree-id17155 . -10) (undo-tree-id17156 . -10) 4332) nil (26715 34579 345702 357000) 0 nil])
([nil nil ((#("core " 0 5 (face font-lock-comment-face fontified t)) . -4317) (undo-tree-id16971 . -1) (undo-tree-id16972 . -1) (undo-tree-id16973 . -1) (undo-tree-id16974 . -1) (undo-tree-id16975 . -1) (undo-tree-id16976 . -2) (undo-tree-id16977 . -2) (undo-tree-id16978 . -2) (undo-tree-id16979 . -2) (undo-tree-id16980 . -2) (undo-tree-id16981 . -3) (undo-tree-id16982 . -3) (undo-tree-id16983 . -3) (undo-tree-id16984 . -3) (undo-tree-id16985 . -3) (undo-tree-id16986 . -3) (undo-tree-id16987 . -3) (undo-tree-id16988 . -3) (undo-tree-id16989 . -3) (undo-tree-id16990 . -3) (undo-tree-id16991 . -3) (undo-tree-id16992 . -3) (undo-tree-id16993 . -3) (undo-tree-id16994 . -3) (undo-tree-id16995 . -3) (undo-tree-id16996 . -3) (undo-tree-id16997 . -4) (undo-tree-id16998 . -4) (undo-tree-id16999 . -4) (undo-tree-id17000 . -4) (undo-tree-id17001 . -4) (undo-tree-id17002 . -5) (undo-tree-id17003 . -5) (undo-tree-id17004 . -5) (undo-tree-id17005 . -5) (undo-tree-id17006 . -5) (undo-tree-id17007 . -5) (undo-tree-id17008 . -5) (undo-tree-id17009 . -5) (undo-tree-id17010 . -5) (undo-tree-id17011 . -5) (undo-tree-id17012 . -5) (undo-tree-id17013 . -5) (undo-tree-id17014 . -5) (undo-tree-id17015 . -5) (undo-tree-id17016 . -5) (undo-tree-id17017 . -5) (undo-tree-id17018 . -5) (undo-tree-id17019 . -5) (undo-tree-id17020 . -5) (undo-tree-id17021 . -5) (undo-tree-id17022 . -5) (undo-tree-id17023 . -5) (undo-tree-id17024 . -5) (undo-tree-id17025 . -5) (undo-tree-id17026 . -5) (undo-tree-id17027 . -5) (undo-tree-id17028 . -5) (undo-tree-id17029 . -5) (undo-tree-id17030 . -5) (undo-tree-id17031 . -5) (undo-tree-id17032 . -5) (undo-tree-id17033 . -5) (undo-tree-id17034 . -5) (undo-tree-id17035 . -5) (undo-tree-id17036 . -5) (undo-tree-id17037 . -5) (undo-tree-id17038 . -5) (undo-tree-id17039 . -5) (undo-tree-id17040 . -5) (undo-tree-id17041 . -5) (undo-tree-id17042 . -5) (undo-tree-id17043 . -5) (undo-tree-id17044 . -5) (undo-tree-id17045 . -5) (undo-tree-id17046 . -5) (undo-tree-id17047 . -5) (undo-tree-id17048 . -5) (undo-tree-id17049 . -5) (undo-tree-id17050 . -5) (undo-tree-id17051 . -5) (undo-tree-id17052 . -5) (undo-tree-id17053 . -5) (undo-tree-id17054 . -5) (undo-tree-id17055 . -5) (undo-tree-id17056 . -5) (undo-tree-id17057 . -5) (undo-tree-id17058 . -5) (undo-tree-id17059 . -5) (undo-tree-id17060 . -5) (undo-tree-id17061 . -5) (undo-tree-id17062 . -5) (undo-tree-id17063 . -5) (undo-tree-id17064 . -5) (undo-tree-id17065 . -5) (undo-tree-id17066 . -5) (undo-tree-id17067 . -5) (undo-tree-id17068 . -5) (undo-tree-id17069 . -5) (undo-tree-id17070 . -5) (undo-tree-id17071 . -5) (undo-tree-id17072 . -5) (undo-tree-id17073 . -5) (undo-tree-id17074 . -5) (undo-tree-id17075 . -5) (undo-tree-id17076 . -5) (undo-tree-id17077 . -5) (undo-tree-id17078 . -5) (undo-tree-id17079 . -5) (undo-tree-id17080 . -5) (undo-tree-id17081 . -5) (undo-tree-id17082 . -5) (undo-tree-id17083 . -5) (undo-tree-id17084 . -5) 4322) nil (26715 34579 345663 645000) 0 nil])
([nil nil ((4317 . 4326)) nil (26715 34579 345605 252000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -4324) (undo-tree-id16949 . -1) (undo-tree-id16950 . -1) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (undo-tree-id16955 . -1) (undo-tree-id16956 . -1) (undo-tree-id16957 . -1) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -4325) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) 4326) nil (26715 34579 345604 441000) 0 nil])
([nil nil ((4324 . 4337)) nil (26715 34579 345592 223000) 0 nil])
([nil nil ((4337 . 4358)) nil (26715 34579 345591 989000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 4358) (4356 . 4358) (4356 . 4357) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 4356) (undo-tree-id16943 . -1) (undo-tree-id16944 . -1) (undo-tree-id16945 . -1) (undo-tree-id16946 . -1) (undo-tree-id16947 . -1) (undo-tree-id16948 . -1) (4355 . 4356) (4358 . 4363)) nil (26715 34579 345591 271000) 0 nil])
([nil nil ((#("the " 0 4 (face font-lock-comment-face fontified t)) . -4308) (undo-tree-id16932 . -4) (undo-tree-id16933 . -4) (undo-tree-id16934 . -4) (undo-tree-id16935 . -4) (undo-tree-id16936 . -4) (undo-tree-id16937 . -4) (undo-tree-id16938 . -4) (undo-tree-id16939 . -4) (undo-tree-id16940 . -4) (undo-tree-id16941 . -4) (undo-tree-id16942 . -4) 4312) nil (26715 34579 345587 346000) 0 nil])
([nil nil ((4308 . 4329)) nil (26715 34579 345581 92000) 0 nil])
([nil nil ((4329 . 4331)) nil (26715 34579 345580 788000) 0 nil])
([nil nil ((#("combin" 0 6 (face font-lock-comment-face fontified t)) . -4325) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -2) (undo-tree-id16902 . -2) (undo-tree-id16903 . -2) (undo-tree-id16904 . -2) (undo-tree-id16905 . -2) (undo-tree-id16906 . -3) (undo-tree-id16907 . -3) (undo-tree-id16908 . -3) (undo-tree-id16909 . -3) (undo-tree-id16910 . -3) (undo-tree-id16911 . -4) (undo-tree-id16912 . -4) (undo-tree-id16913 . -4) (undo-tree-id16914 . -4) (undo-tree-id16915 . -4) (undo-tree-id16916 . -5) (undo-tree-id16917 . -5) (undo-tree-id16918 . -5) (undo-tree-id16919 . -5) (undo-tree-id16920 . -5) (undo-tree-id16921 . -6) (undo-tree-id16922 . -6) (undo-tree-id16923 . -6) (undo-tree-id16924 . -6) (undo-tree-id16925 . -6) (undo-tree-id16926 . -6) (undo-tree-id16927 . -6) (undo-tree-id16928 . -6) (undo-tree-id16929 . -6) (undo-tree-id16930 . -6) (undo-tree-id16931 . -6) 4331) nil (26715 34579 345579 797000) 0 nil])
([nil nil ((4325 . 4340)) nil (26715 34579 345559 134000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -4383) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) 4384) nil (26715 34579 345558 590000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . 4383)) nil (26715 34579 345553 964000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 4360) (4358 . 4360) (4358 . 4359) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 4358) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (4357 . 4358) (4383 . 4384)) nil (26715 34579 345553 350000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -4385) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) 4386) nil (26715 34579 345548 705000) 0 nil])
([nil nil ((#("applied to each other, " 0 15 (face font-lock-comment-face fontified t) 15 16 (face font-lock-comment-face fontified t) 16 23 (face font-lock-comment-face fontified t)) . 4370) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -2) (undo-tree-id16699 . -2) (undo-tree-id16700 . -2) (undo-tree-id16701 . -2) (undo-tree-id16702 . -2) (undo-tree-id16703 . -3) (undo-tree-id16704 . -3) (undo-tree-id16705 . -3) (undo-tree-id16706 . -3) (undo-tree-id16707 . -3) (undo-tree-id16708 . -4) (undo-tree-id16709 . -4) (undo-tree-id16710 . -4) (undo-tree-id16711 . -4) (undo-tree-id16712 . -4) (undo-tree-id16713 . -5) (undo-tree-id16714 . -5) (undo-tree-id16715 . -5) (undo-tree-id16716 . -5) (undo-tree-id16717 . -5) (undo-tree-id16718 . -6) (undo-tree-id16719 . -6) (undo-tree-id16720 . -6) (undo-tree-id16721 . -6) (undo-tree-id16722 . -6) (undo-tree-id16723 . -7) (undo-tree-id16724 . -7) (undo-tree-id16725 . -7) (undo-tree-id16726 . -7) (undo-tree-id16727 . -7) (undo-tree-id16728 . -8) (undo-tree-id16729 . -8) (undo-tree-id16730 . -8) (undo-tree-id16731 . -8) (undo-tree-id16732 . -8) (undo-tree-id16733 . -8) (undo-tree-id16734 . -9) (undo-tree-id16735 . -9) (undo-tree-id16736 . -9) (undo-tree-id16737 . -9) (undo-tree-id16738 . -9) (undo-tree-id16739 . -10) (undo-tree-id16740 . -10) (undo-tree-id16741 . -10) (undo-tree-id16742 . -10) (undo-tree-id16743 . -10) (undo-tree-id16744 . -11) (undo-tree-id16745 . -11) (undo-tree-id16746 . -11) (undo-tree-id16747 . -11) (undo-tree-id16748 . -11) (undo-tree-id16749 . -11) (undo-tree-id16750 . -12) (undo-tree-id16751 . -12) (undo-tree-id16752 . -12) (undo-tree-id16753 . -12) (undo-tree-id16754 . -12) (undo-tree-id16755 . -13) (undo-tree-id16756 . -13) (undo-tree-id16757 . -13) (undo-tree-id16758 . -13) (undo-tree-id16759 . -13) (undo-tree-id16760 . -14) (undo-tree-id16761 . -14) (undo-tree-id16762 . -14) (undo-tree-id16763 . -14) (undo-tree-id16764 . -14) (undo-tree-id16765 . -15) (undo-tree-id16766 . -15) (undo-tree-id16767 . -15) (undo-tree-id16768 . -15) (undo-tree-id16769 . -15) (undo-tree-id16770 . -15) (undo-tree-id16771 . -15) (undo-tree-id16772 . -15) (undo-tree-id16773 . -15) (undo-tree-id16774 . -15) (undo-tree-id16775 . -15) (undo-tree-id16776 . -17) (undo-tree-id16777 . -17) (undo-tree-id16778 . -17) (undo-tree-id16779 . -17) (undo-tree-id16780 . -17) (undo-tree-id16781 . -18) (undo-tree-id16782 . -18) (undo-tree-id16783 . -18) (undo-tree-id16784 . -18) (undo-tree-id16785 . -18) (undo-tree-id16786 . -19) (undo-tree-id16787 . -19) (undo-tree-id16788 . -19) (undo-tree-id16789 . -19) (undo-tree-id16790 . -19) (undo-tree-id16791 . -20) (undo-tree-id16792 . -20) (undo-tree-id16793 . -20) (undo-tree-id16794 . -20) (undo-tree-id16795 . -20) (undo-tree-id16796 . -21) (undo-tree-id16797 . -21) (undo-tree-id16798 . -21) (undo-tree-id16799 . -21) (undo-tree-id16800 . -21) (undo-tree-id16801 . -21) (undo-tree-id16802 . -21) (undo-tree-id16803 . -21) (undo-tree-id16804 . -21) (undo-tree-id16805 . -21) (undo-tree-id16806 . -22) (undo-tree-id16807 . -22) (undo-tree-id16808 . -22) (undo-tree-id16809 . -22) (undo-tree-id16810 . -22) (undo-tree-id16811 . -22) (undo-tree-id16812 . -22) (undo-tree-id16813 . -22) (undo-tree-id16814 . -22) (undo-tree-id16815 . -22) (undo-tree-id16816 . -23) (undo-tree-id16817 . -23) (undo-tree-id16818 . -23) (undo-tree-id16819 . -23) (undo-tree-id16820 . -23) (undo-tree-id16821 . -23) (undo-tree-id16822 . -23) (undo-tree-id16823 . -23) (undo-tree-id16824 . -23) (undo-tree-id16825 . -23) (undo-tree-id16826 . -23) (undo-tree-id16827 . -11) (undo-tree-id16828 . -11) (undo-tree-id16829 . -11) (undo-tree-id16830 . -11) (undo-tree-id16831 . -11) (undo-tree-id16832 . -23) (undo-tree-id16833 . -23) (undo-tree-id16834 . -23) (undo-tree-id16835 . -23) (undo-tree-id16836 . -23) (undo-tree-id16837 . -23) (undo-tree-id16838 . -15) (undo-tree-id16839 . -15) (undo-tree-id16840 . -15) (undo-tree-id16841 . -15) (undo-tree-id16842 . -15) (undo-tree-id16843 . -15) (undo-tree-id16844 . -15) (undo-tree-id16845 . -15) (undo-tree-id16846 . -15) (undo-tree-id16847 . -15) (undo-tree-id16848 . -15) (undo-tree-id16849 . -15) (undo-tree-id16850 . -15) (undo-tree-id16851 . -15) (undo-tree-id16852 . -15) (undo-tree-id16853 . -15) (undo-tree-id16854 . -15) (undo-tree-id16855 . -15) (undo-tree-id16856 . -15) (undo-tree-id16857 . -15) (undo-tree-id16858 . -15) (undo-tree-id16859 . -15) (undo-tree-id16860 . -15) (undo-tree-id16861 . -15) (undo-tree-id16862 . -15) (undo-tree-id16863 . -15) (undo-tree-id16864 . -15) (undo-tree-id16865 . -15) (undo-tree-id16866 . -15) (undo-tree-id16867 . -15) (undo-tree-id16868 . -15) (undo-tree-id16869 . -23) (undo-tree-id16870 . -23) (undo-tree-id16871 . -23) (undo-tree-id16872 . -23) (undo-tree-id16873 . -23) (undo-tree-id16874 . -23)) nil (26715 34579 345538 627000) 0 nil])
([nil nil ((#("functions " 0 10 (face font-lock-comment-face fontified t)) . -4360) (undo-tree-id19428 . -10) (undo-tree-id19429 . -10) (undo-tree-id19430 . -10) (undo-tree-id19431 . -10) (undo-tree-id19432 . -10) (undo-tree-id19433 . -10) (undo-tree-id19434 . -10) (undo-tree-id19435 . -10) (undo-tree-id19436 . -10) (undo-tree-id19437 . -10) (undo-tree-id19438 . -10) (undo-tree-id19439 . -10) (undo-tree-id19440 . -10) (undo-tree-id19441 . -10) (undo-tree-id19442 . -10) (undo-tree-id19443 . -10) (undo-tree-id19444 . -10) (undo-tree-id19445 . -10) (undo-tree-id19446 . -10) (undo-tree-id19447 . -10) (undo-tree-id19448 . -10) (undo-tree-id19449 . -10) (undo-tree-id19450 . -10) (undo-tree-id19451 . -10) (undo-tree-id19452 . -10) (undo-tree-id19453 . -10) (undo-tree-id19454 . -10) (undo-tree-id19455 . -10) (undo-tree-id19456 . -10) (undo-tree-id19457 . -10) (undo-tree-id19458 . -10) (undo-tree-id19459 . -10) (undo-tree-id19460 . -10) (undo-tree-id19461 . -10) (undo-tree-id19462 . -10) (undo-tree-id19463 . -10) (undo-tree-id19464 . -10) (undo-tree-id19465 . -10) (undo-tree-id19466 . -10) (undo-tree-id19467 . -10) (undo-tree-id19468 . -10) (undo-tree-id19469 . -10) (undo-tree-id19470 . -10) (undo-tree-id19471 . -10) (undo-tree-id19472 . -10) (undo-tree-id19473 . -10) (undo-tree-id19474 . -10) (undo-tree-id19475 . -10) (undo-tree-id19476 . -10) (undo-tree-id19477 . -10) (undo-tree-id19478 . -10) (undo-tree-id19479 . -10) (undo-tree-id19480 . -10) (undo-tree-id19481 . -10) (undo-tree-id19482 . -10) (undo-tree-id19483 . -10) (undo-tree-id19484 . -10) (undo-tree-id19485 . -10) (undo-tree-id19486 . -10) (undo-tree-id19487 . -10) (undo-tree-id19488 . -10) (undo-tree-id19489 . -10) (undo-tree-id19490 . -10) (undo-tree-id19491 . -10) (undo-tree-id19492 . -10) (undo-tree-id19493 . -10) (undo-tree-id19494 . -10) (undo-tree-id19495 . -10) (undo-tree-id19496 . -10) (undo-tree-id19497 . -10) (undo-tree-id19498 . -10) (undo-tree-id19499 . -10) (undo-tree-id19500 . -10) (undo-tree-id19501 . -10) (undo-tree-id19502 . -10) (undo-tree-id19503 . -10) (undo-tree-id19504 . -10) (undo-tree-id19505 . -10) (undo-tree-id19506 . -10) (undo-tree-id19507 . -10) (undo-tree-id19508 . -10) (undo-tree-id19509 . -10) (undo-tree-id19510 . -10) (undo-tree-id19511 . -10) (undo-tree-id19512 . -10) (undo-tree-id19513 . -10) (undo-tree-id19514 . -10) (undo-tree-id19515 . -10) (undo-tree-id19516 . -10) (undo-tree-id19517 . -10) (undo-tree-id19518 . -10) (undo-tree-id19519 . -10) (undo-tree-id19520 . -10) (undo-tree-id19521 . -10) (undo-tree-id19522 . -10) (undo-tree-id19523 . -10) (undo-tree-id19524 . -10) (undo-tree-id19525 . -10) (undo-tree-id19526 . -10) (undo-tree-id19527 . -10) (undo-tree-id19528 . -10) (undo-tree-id19529 . -10) (undo-tree-id19530 . -10) (undo-tree-id19531 . -10) (undo-tree-id19532 . -10) (undo-tree-id19533 . -10) (undo-tree-id19534 . -10) (undo-tree-id19535 . -10) (undo-tree-id19536 . -10) (undo-tree-id19537 . -10) (undo-tree-id19538 . -10) (undo-tree-id19539 . -10) (undo-tree-id19540 . -10) (undo-tree-id19541 . -10) (undo-tree-id19542 . -10) (undo-tree-id19543 . -10) (undo-tree-id19544 . -10) (undo-tree-id19545 . -10) (undo-tree-id19546 . -10) (undo-tree-id19547 . -10) (undo-tree-id19548 . -10) (undo-tree-id19549 . -10) (undo-tree-id19550 . -10) (undo-tree-id19551 . -10) (undo-tree-id19552 . -10) (undo-tree-id19553 . -10) (undo-tree-id19554 . -10) (undo-tree-id19555 . -10) (undo-tree-id19556 . -10) (undo-tree-id19557 . -10) (undo-tree-id19558 . -10) (undo-tree-id19559 . -10) (undo-tree-id19560 . -10) (undo-tree-id19561 . -10) (undo-tree-id19562 . -10) (undo-tree-id19563 . -10) (undo-tree-id19564 . -10) (undo-tree-id19565 . -10) (undo-tree-id19566 . -10) (undo-tree-id19567 . -10) (undo-tree-id19568 . -10) (undo-tree-id19569 . -10) (undo-tree-id19570 . -10) (undo-tree-id19571 . -10) (undo-tree-id19572 . -10) (undo-tree-id19573 . -10) (undo-tree-id19574 . -10) (undo-tree-id19575 . -10) (undo-tree-id19576 . -10) (undo-tree-id19577 . -10) (undo-tree-id19578 . -10) (undo-tree-id19579 . -10) (undo-tree-id19580 . -10) (undo-tree-id19581 . -10) (undo-tree-id19582 . -10) (undo-tree-id19583 . -10) (undo-tree-id19584 . -10) (undo-tree-id19585 . -10) (undo-tree-id19586 . -10) (undo-tree-id19587 . -10) (undo-tree-id19588 . -10) (undo-tree-id19589 . -10) (undo-tree-id19590 . -10) (undo-tree-id19591 . -10) (undo-tree-id19592 . -10) (undo-tree-id19593 . -10) (undo-tree-id19594 . -10) (undo-tree-id19595 . -10) (undo-tree-id19596 . -10) (undo-tree-id19597 . -10) (undo-tree-id19598 . -10) (undo-tree-id19599 . -10) (undo-tree-id19600 . -10) (undo-tree-id19601 . -10) (undo-tree-id19602 . -10) (undo-tree-id19603 . -10) (undo-tree-id19604 . -10) (undo-tree-id19605 . -10) (undo-tree-id19606 . -10) (undo-tree-id19607 . -10) (undo-tree-id19608 . -10) (undo-tree-id19609 . -10) (undo-tree-id19610 . -10) (undo-tree-id19611 . -10) (undo-tree-id19612 . -10) (undo-tree-id19613 . -10) (undo-tree-id19614 . -10) (undo-tree-id19615 . -10) (undo-tree-id19616 . -10) (undo-tree-id19617 . -10) (undo-tree-id19618 . -10) (undo-tree-id19619 . -10) (undo-tree-id19620 . -10) (undo-tree-id19621 . -10) (undo-tree-id19622 . -10) (undo-tree-id19623 . -10) (undo-tree-id19624 . -10) (undo-tree-id19625 . -10) (undo-tree-id19626 . -10) (undo-tree-id19627 . -10) (undo-tree-id19628 . -10) (undo-tree-id19629 . -10) (undo-tree-id19630 . -10) (undo-tree-id19631 . -10) 4370 (t 26715 34579 364584 36000)) nil (26715 34586 148598 875000) 0 nil])
([nil nil ((#("letter
# " 0 7 (face font-lock-comment-face fontified t) 7 9 (face font-lock-comment-delimiter-face fontified t)) . -4351) (undo-tree-id19196 . -1) (undo-tree-id19197 . -1) (undo-tree-id19198 . -1) (undo-tree-id19199 . -1) (undo-tree-id19200 . -1) (undo-tree-id19201 . -1) (undo-tree-id19202 . -1) (undo-tree-id19203 . -1) (undo-tree-id19204 . -1) (undo-tree-id19205 . -1) (undo-tree-id19206 . -1) (undo-tree-id19207 . -1) (undo-tree-id19208 . -1) (undo-tree-id19209 . -1) (undo-tree-id19210 . -1) (undo-tree-id19211 . -7) (undo-tree-id19212 . -7) (undo-tree-id19213 . -7) (undo-tree-id19214 . -7) (undo-tree-id19215 . -7) (undo-tree-id19216 . -7) (undo-tree-id19217 . -9) (undo-tree-id19218 . -9) (undo-tree-id19219 . -9) (undo-tree-id19220 . -9) (undo-tree-id19221 . -9) (undo-tree-id19222 . -9) (undo-tree-id19223 . -9) (undo-tree-id19224 . -9) (undo-tree-id19225 . -9) (undo-tree-id19226 . -9) (undo-tree-id19227 . -9) (undo-tree-id19228 . -9) (undo-tree-id19229 . -9) (undo-tree-id19230 . -9) (undo-tree-id19231 . -9) (undo-tree-id19232 . -9) (undo-tree-id19233 . -9) (undo-tree-id19234 . -9) (undo-tree-id19235 . -9) (undo-tree-id19236 . -9) (undo-tree-id19237 . -9) (undo-tree-id19238 . -9) (undo-tree-id19239 . -9) (undo-tree-id19240 . -9) (undo-tree-id19241 . -9) (undo-tree-id19242 . -9) (undo-tree-id19243 . -9) (undo-tree-id19244 . -9) (undo-tree-id19245 . -9) (undo-tree-id19246 . -9) (undo-tree-id19247 . -9) (undo-tree-id19248 . -9) (undo-tree-id19249 . -9) (undo-tree-id19250 . -9) (undo-tree-id19251 . -9) (undo-tree-id19252 . -9) (undo-tree-id19253 . -9) (undo-tree-id19254 . -9) (undo-tree-id19255 . -9) (undo-tree-id19256 . -9) (undo-tree-id19257 . -9) (undo-tree-id19258 . -9) (undo-tree-id19259 . -9) (undo-tree-id19260 . -9) (undo-tree-id19261 . -9) (undo-tree-id19262 . -9) (undo-tree-id19263 . -9) (undo-tree-id19264 . -9) (undo-tree-id19265 . -9) (undo-tree-id19266 . -9) (undo-tree-id19267 . -9) (undo-tree-id19268 . -9) (undo-tree-id19269 . -9) (undo-tree-id19270 . -9) (undo-tree-id19271 . -9) (undo-tree-id19272 . -9) (undo-tree-id19273 . -9) (undo-tree-id19274 . -9) (undo-tree-id19275 . -9) (undo-tree-id19276 . -9) (undo-tree-id19277 . -9) (undo-tree-id19278 . -9) (undo-tree-id19279 . -9) (undo-tree-id19280 . -9) (undo-tree-id19281 . -9) (undo-tree-id19282 . -9) (undo-tree-id19283 . -9) (undo-tree-id19284 . -9) (undo-tree-id19285 . -9) (undo-tree-id19286 . -9) (undo-tree-id19287 . -9) (undo-tree-id19288 . -9) (undo-tree-id19289 . -9) (undo-tree-id19290 . -9) (undo-tree-id19291 . -9) (undo-tree-id19292 . -9) (undo-tree-id19293 . -9) (undo-tree-id19294 . -9) (undo-tree-id19295 . -9) (undo-tree-id19296 . -9) (undo-tree-id19297 . -9) (undo-tree-id19298 . -9) (undo-tree-id19299 . -9) (undo-tree-id19300 . -9) (undo-tree-id19301 . -9) (undo-tree-id19302 . -9) (undo-tree-id19303 . -9) (undo-tree-id19304 . -9) (undo-tree-id19305 . -9) (undo-tree-id19306 . -9) (undo-tree-id19307 . -9) (undo-tree-id19308 . -9) (undo-tree-id19309 . -9) (undo-tree-id19310 . -9) (undo-tree-id19311 . -9) (undo-tree-id19312 . -9) (undo-tree-id19313 . -9) (undo-tree-id19314 . -9) (undo-tree-id19315 . -9) (undo-tree-id19316 . -9) (undo-tree-id19317 . -9) (undo-tree-id19318 . -9) (undo-tree-id19319 . -9) (undo-tree-id19320 . -9) (undo-tree-id19321 . -9) (undo-tree-id19322 . -9) (undo-tree-id19323 . -9) (undo-tree-id19324 . -9) (undo-tree-id19325 . -9) (undo-tree-id19326 . -9) (undo-tree-id19327 . -9) (undo-tree-id19328 . -9) (undo-tree-id19329 . -9) (undo-tree-id19330 . -9) (undo-tree-id19331 . -9) (undo-tree-id19332 . -9) (undo-tree-id19333 . -9) (undo-tree-id19334 . -9) (undo-tree-id19335 . -9) (undo-tree-id19336 . -9) (undo-tree-id19337 . -9) (undo-tree-id19338 . -9) (undo-tree-id19339 . -9) (undo-tree-id19340 . -9) (undo-tree-id19341 . -9) (undo-tree-id19342 . -9) (undo-tree-id19343 . -9) (undo-tree-id19344 . -9) (undo-tree-id19345 . -9) (undo-tree-id19346 . -9) (undo-tree-id19347 . -9) (undo-tree-id19348 . -9) (undo-tree-id19349 . -9) (undo-tree-id19350 . -9) (undo-tree-id19351 . -9) (undo-tree-id19352 . -9) (undo-tree-id19353 . -9) (undo-tree-id19354 . -9) (undo-tree-id19355 . -9) (undo-tree-id19356 . -9) (undo-tree-id19357 . -9) (undo-tree-id19358 . -9) (undo-tree-id19359 . -9) (undo-tree-id19360 . -9) (undo-tree-id19361 . -9) (undo-tree-id19362 . -9) (undo-tree-id19363 . -9) (undo-tree-id19364 . -9) (undo-tree-id19365 . -9) (undo-tree-id19366 . -9) (undo-tree-id19367 . -9) (undo-tree-id19368 . -9) (undo-tree-id19369 . -9) (undo-tree-id19370 . -9) (undo-tree-id19371 . -9) (undo-tree-id19372 . -9) (undo-tree-id19373 . -9) (undo-tree-id19374 . -9) (undo-tree-id19375 . -9) (undo-tree-id19376 . -9) (undo-tree-id19377 . -9) (undo-tree-id19378 . -9) (undo-tree-id19379 . -9) (undo-tree-id19380 . -9) (undo-tree-id19381 . -9) (undo-tree-id19382 . -9) (undo-tree-id19383 . -9) (undo-tree-id19384 . -9) (undo-tree-id19385 . -9) (undo-tree-id19386 . -9) (undo-tree-id19387 . -9) (undo-tree-id19388 . -9) (undo-tree-id19389 . -9) (undo-tree-id19390 . -9) (undo-tree-id19391 . -9) (undo-tree-id19392 . -9) (undo-tree-id19393 . -9) (undo-tree-id19394 . -9) (undo-tree-id19395 . -9) (undo-tree-id19396 . -9) (undo-tree-id19397 . -9) (undo-tree-id19398 . -9) (undo-tree-id19399 . -9) (undo-tree-id19400 . -9) (undo-tree-id19401 . -9) (undo-tree-id19402 . -9) (undo-tree-id19403 . -9) (undo-tree-id19404 . -9) (undo-tree-id19405 . -9) (undo-tree-id19406 . -9) (undo-tree-id19407 . -9) (undo-tree-id19408 . -9) (undo-tree-id19409 . -9) (undo-tree-id19410 . -9) (undo-tree-id19411 . -9) (undo-tree-id19412 . -9) (undo-tree-id19413 . -9) (undo-tree-id19414 . -9) (undo-tree-id19415 . -9) (undo-tree-id19416 . -9) (undo-tree-id19417 . -9) (undo-tree-id19418 . -9) (undo-tree-id19419 . -9) (undo-tree-id19420 . -7) (undo-tree-id19421 . -9) (undo-tree-id19422 . -9) (undo-tree-id19423 . -9) (undo-tree-id19424 . -9) (undo-tree-id19425 . -9) (undo-tree-id19426 . -9) (undo-tree-id19427 . -9) 4360) nil (26715 34586 148277 924000) 0 nil])
([nil nil ((#("Greek " 0 6 (face font-lock-comment-face fontified t)) . -4345) (undo-tree-id18960 . -6) (undo-tree-id18961 . -6) (undo-tree-id18962 . -6) (undo-tree-id18963 . -6) (undo-tree-id18964 . -6) (undo-tree-id18965 . -6) (undo-tree-id18966 . -6) (undo-tree-id18967 . -6) (undo-tree-id18968 . -6) (undo-tree-id18969 . -6) (undo-tree-id18970 . -6) (undo-tree-id18971 . -6) (undo-tree-id18972 . -6) (undo-tree-id18973 . -6) (undo-tree-id18974 . -6) (undo-tree-id18975 . -6) (undo-tree-id18976 . -6) (undo-tree-id18977 . -6) (undo-tree-id18978 . -6) (undo-tree-id18979 . -6) (undo-tree-id18980 . -6) (undo-tree-id18981 . -6) (undo-tree-id18982 . -6) (undo-tree-id18983 . -6) (undo-tree-id18984 . -6) (undo-tree-id18985 . -6) (undo-tree-id18986 . -6) (undo-tree-id18987 . -6) (undo-tree-id18988 . -6) (undo-tree-id18989 . -6) (undo-tree-id18990 . -6) (undo-tree-id18991 . -6) (undo-tree-id18992 . -6) (undo-tree-id18993 . -6) (undo-tree-id18994 . -6) (undo-tree-id18995 . -6) (undo-tree-id18996 . -6) (undo-tree-id18997 . -6) (undo-tree-id18998 . -6) (undo-tree-id18999 . -6) (undo-tree-id19000 . -6) (undo-tree-id19001 . -6) (undo-tree-id19002 . -6) (undo-tree-id19003 . -6) (undo-tree-id19004 . -6) (undo-tree-id19005 . -6) (undo-tree-id19006 . -6) (undo-tree-id19007 . -6) (undo-tree-id19008 . -6) (undo-tree-id19009 . -6) (undo-tree-id19010 . -6) (undo-tree-id19011 . -6) (undo-tree-id19012 . -6) (undo-tree-id19013 . -6) (undo-tree-id19014 . -6) (undo-tree-id19015 . -6) (undo-tree-id19016 . -6) (undo-tree-id19017 . -6) (undo-tree-id19018 . -6) (undo-tree-id19019 . -6) (undo-tree-id19020 . -6) (undo-tree-id19021 . -6) (undo-tree-id19022 . -6) (undo-tree-id19023 . -6) (undo-tree-id19024 . -6) (undo-tree-id19025 . -6) (undo-tree-id19026 . -6) (undo-tree-id19027 . -6) (undo-tree-id19028 . -6) (undo-tree-id19029 . -6) (undo-tree-id19030 . -6) (undo-tree-id19031 . -6) (undo-tree-id19032 . -6) (undo-tree-id19033 . -6) (undo-tree-id19034 . -6) (undo-tree-id19035 . -6) (undo-tree-id19036 . -6) (undo-tree-id19037 . -6) (undo-tree-id19038 . -6) (undo-tree-id19039 . -6) (undo-tree-id19040 . -6) (undo-tree-id19041 . -6) (undo-tree-id19042 . -6) (undo-tree-id19043 . -6) (undo-tree-id19044 . -6) (undo-tree-id19045 . -6) (undo-tree-id19046 . -6) (undo-tree-id19047 . -6) (undo-tree-id19048 . -6) (undo-tree-id19049 . -6) (undo-tree-id19050 . -6) (undo-tree-id19051 . -6) (undo-tree-id19052 . -6) (undo-tree-id19053 . -6) (undo-tree-id19054 . -6) (undo-tree-id19055 . -6) (undo-tree-id19056 . -6) (undo-tree-id19057 . -6) (undo-tree-id19058 . -6) (undo-tree-id19059 . -6) (undo-tree-id19060 . -6) (undo-tree-id19061 . -6) (undo-tree-id19062 . -6) (undo-tree-id19063 . -6) (undo-tree-id19064 . -6) (undo-tree-id19065 . -6) (undo-tree-id19066 . -6) (undo-tree-id19067 . -6) (undo-tree-id19068 . -6) (undo-tree-id19069 . -6) (undo-tree-id19070 . -6) (undo-tree-id19071 . -6) (undo-tree-id19072 . -6) (undo-tree-id19073 . -6) (undo-tree-id19074 . -6) (undo-tree-id19075 . -6) (undo-tree-id19076 . -6) (undo-tree-id19077 . -6) (undo-tree-id19078 . -6) (undo-tree-id19079 . -6) (undo-tree-id19080 . -6) (undo-tree-id19081 . -6) (undo-tree-id19082 . -6) (undo-tree-id19083 . -6) (undo-tree-id19084 . -6) (undo-tree-id19085 . -6) (undo-tree-id19086 . -6) (undo-tree-id19087 . -6) (undo-tree-id19088 . -6) (undo-tree-id19089 . -6) (undo-tree-id19090 . -6) (undo-tree-id19091 . -6) (undo-tree-id19092 . -6) (undo-tree-id19093 . -6) (undo-tree-id19094 . -6) (undo-tree-id19095 . -6) (undo-tree-id19096 . -6) (undo-tree-id19097 . -6) (undo-tree-id19098 . -6) (undo-tree-id19099 . -6) (undo-tree-id19100 . -6) (undo-tree-id19101 . -6) (undo-tree-id19102 . -6) (undo-tree-id19103 . -6) (undo-tree-id19104 . -6) (undo-tree-id19105 . -6) (undo-tree-id19106 . -6) (undo-tree-id19107 . -6) (undo-tree-id19108 . -6) (undo-tree-id19109 . -6) (undo-tree-id19110 . -6) (undo-tree-id19111 . -6) (undo-tree-id19112 . -6) (undo-tree-id19113 . -6) (undo-tree-id19114 . -6) (undo-tree-id19115 . -6) (undo-tree-id19116 . -6) (undo-tree-id19117 . -6) (undo-tree-id19118 . -6) (undo-tree-id19119 . -6) (undo-tree-id19120 . -6) (undo-tree-id19121 . -6) (undo-tree-id19122 . -6) (undo-tree-id19123 . -6) (undo-tree-id19124 . -6) (undo-tree-id19125 . -6) (undo-tree-id19126 . -6) (undo-tree-id19127 . -6) (undo-tree-id19128 . -6) (undo-tree-id19129 . -6) (undo-tree-id19130 . -6) (undo-tree-id19131 . -6) (undo-tree-id19132 . -6) (undo-tree-id19133 . -6) (undo-tree-id19134 . -6) (undo-tree-id19135 . -6) (undo-tree-id19136 . -6) (undo-tree-id19137 . -6) (undo-tree-id19138 . -6) (undo-tree-id19139 . -6) (undo-tree-id19140 . -6) (undo-tree-id19141 . -6) (undo-tree-id19142 . -6) (undo-tree-id19143 . -6) (undo-tree-id19144 . -6) (undo-tree-id19145 . -6) (undo-tree-id19146 . -6) (undo-tree-id19147 . -6) (undo-tree-id19148 . -6) (undo-tree-id19149 . -6) (undo-tree-id19150 . -6) (undo-tree-id19151 . -6) (undo-tree-id19152 . -6) (undo-tree-id19153 . -6) (undo-tree-id19154 . -6) (undo-tree-id19155 . -6) (undo-tree-id19156 . -6) (undo-tree-id19157 . -6) (undo-tree-id19158 . -6) (undo-tree-id19159 . -6) (undo-tree-id19160 . -6) (undo-tree-id19161 . -6) (undo-tree-id19162 . -6) (undo-tree-id19163 . -6) (undo-tree-id19164 . -6) (undo-tree-id19165 . -6) (undo-tree-id19166 . -6) (undo-tree-id19167 . -6) (undo-tree-id19168 . -6) (undo-tree-id19169 . -6) (undo-tree-id19170 . -6) (undo-tree-id19171 . -6) (undo-tree-id19172 . -6) (undo-tree-id19173 . -6) (undo-tree-id19174 . -6) (undo-tree-id19175 . -6) (undo-tree-id19176 . -6) (undo-tree-id19177 . -6) (undo-tree-id19178 . -6) (undo-tree-id19179 . -6) (undo-tree-id19180 . -6) (undo-tree-id19181 . -6) (undo-tree-id19182 . -6) (undo-tree-id19183 . -6) (undo-tree-id19184 . -6) (undo-tree-id19185 . -6) (undo-tree-id19186 . -6) (undo-tree-id19187 . -6) (undo-tree-id19188 . -6) (undo-tree-id19189 . -6) (undo-tree-id19190 . -6) (undo-tree-id19191 . -6) (undo-tree-id19192 . -6) (undo-tree-id19193 . -6) (undo-tree-id19194 . -6) (undo-tree-id19195 . -6) 4351) nil (26715 34586 147913 567000) 0 nil])
([nil nil ((4365 . 4368) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 4357) (4355 . 4357) (4355 . 4356) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 4355) (undo-tree-id18949 . -1) (undo-tree-id18950 . -1) (undo-tree-id18951 . -1) (undo-tree-id18952 . -1) (undo-tree-id18953 . -1) (undo-tree-id18954 . -1) (undo-tree-id18955 . -1) (undo-tree-id18956 . -1) (undo-tree-id18957 . -1) (undo-tree-id18958 . -1) (undo-tree-id18959 . -1) (4354 . 4355) (4345 . 4363)) nil (26715 34586 147600 654000) 0 nil])
([nil nil ((4368 . 4371)) nil (26715 34586 147570 541000) 0 nil])
([nil nil ((4345 . 4347) (t 26715 34586 167785 773000)) nil (26715 34591 942865 271000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t)) . -4346) (undo-tree-id19651 . -1) (undo-tree-id19652 . -1) (undo-tree-id19653 . -1) (undo-tree-id19654 . -1) (undo-tree-id19655 . -1) (undo-tree-id19656 . -1) 4347) nil (26715 34591 942864 185000) 0 nil])
([nil nil ((4352 . 4354) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 4352) (undo-tree-id19645 . -1) (undo-tree-id19646 . -1) (undo-tree-id19647 . -1) (undo-tree-id19648 . -1) (undo-tree-id19649 . -1) (undo-tree-id19650 . -1) (4351 . 4352) (4346 . 4360)) nil (26715 34591 942845 754000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -4371) (undo-tree-id19632 . -1) (undo-tree-id19633 . -1) (undo-tree-id19634 . -1) (undo-tree-id19635 . -1) (undo-tree-id19636 . -1) (undo-tree-id19637 . -1) (undo-tree-id19638 . -1) (undo-tree-id19639 . -1) (undo-tree-id19640 . -1) (undo-tree-id19641 . -1) (undo-tree-id19642 . -1) (undo-tree-id19643 . -1) (undo-tree-id19644 . -1) 4372) nil (26715 34591 942836 970000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t)) . 4371)) nil (26715 34591 942814 578000) 0 nil])
([nil nil ((1437 . 1438) (t 26715 34591 961957 664000)) nil (26715 34743 205331 783000) 0 nil])
([nil nil ((1438 . 1439)) nil (26715 34743 205330 711000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1629 . 1630) (nil fontified nil 1438 . 1630) (1438 . 1630)) nil (26715 34743 205327 254000) 0 nil])
([nil nil ((#("# Convert integer from 0 to 255 to an array of its binary
# representation - LSB first.
def int_to_array(n):
    arr = numpy.array([], dtype=int)
    foo = n
    for _ in range(8):
        arr = numpy.append(arr, [foo & 1])
        foo >>= 1
    return arr

# Binary array to int - LSB first.
def array_to_int(A):
    return sum([A[i] << i for i in range(8)])

# hexlify an array A of binary digits whose length is a multiple of
# 8. Remember we are using LSB-first.
def hexlify_array(A):
    sums = [sum(A[i] << (i%8) for i in range(8*j, 8*(j+1))) \\
            for j in range(len(A) // 8)]
    return bytearray(sums).hex()

# Convert a string to an array of its binary representation.
def str_to_array(S):
    A = numpy.array([], dtype=int)
    for c in S:
        A = numpy.append(A, int_to_array(ord(c)))
    return A

# Convert a binary array into a string.
def array_to_str(A):
    S = \"\"
    for block in range(len(A) // 8):
        S += chr(array_to_int(A[8*block : 8*(block+1)]))
    return S

def flip_bits_per_byte(bits):
    assert len(bits) % 8 == 0
    flipped = np.zeros_like(bits)
    for i in range(0, len(bits), 8):
        flipped[i:i+8] = bits[i:i+8][::-1]
    return flipped

" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 58 (face font-lock-comment-face fontified t) 58 60 (face font-lock-comment-delimiter-face fontified t) 60 87 (face font-lock-comment-face fontified t) 87 88 (face font-lock-comment-face fontified t) 88 91 (face font-lock-keyword-face fontified t) 91 92 (fontified t) 92 98 (face font-lock-function-name-face fontified t) 98 104 (face font-lock-function-name-face fontified t) 104 109 (fontified t) 109 113 (fontified t) 113 116 (face font-lock-variable-name-face fontified t) 116 117 (fontified t) 117 118 (face font-lock-operator-face fontified t) 118 140 (fontified t) 140 141 (face font-lock-operator-face fontified t) 141 144 (face font-lock-builtin-face fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 150 (fontified t) 150 153 (face font-lock-variable-name-face fontified t) 153 154 (fontified t) 154 155 (face font-lock-operator-face fontified t) 155 158 (fontified t) 158 162 (fontified t) 162 165 (face font-lock-keyword-face fontified t) 165 168 (fontified t) 168 170 (face font-lock-keyword-face fontified t) 170 171 (fontified t) 171 176 (face font-lock-builtin-face fontified t) 176 179 (fontified t) 179 181 (fontified t) 181 189 (fontified t) 189 192 (face font-lock-variable-name-face fontified t) 192 193 (fontified t) 193 194 (face font-lock-operator-face fontified t) 194 208 (fontified t) 208 218 (fontified t) 218 219 (face font-lock-operator-face fontified t) 219 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 232 (fontified t) 232 235 (face font-lock-variable-name-face fontified t) 235 236 (fontified t) 236 238 (face font-lock-operator-face fontified t) 238 239 (face font-lock-operator-face fontified t) 239 242 (fontified t) 242 246 (fontified t) 246 252 (face font-lock-keyword-face fontified t) 252 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 260 (face font-lock-comment-delimiter-face fontified t) 260 292 (face font-lock-comment-face fontified t) 292 293 (face font-lock-comment-face fontified t) 293 296 (face font-lock-keyword-face fontified t) 296 297 (fontified t) 297 309 (face font-lock-function-name-face fontified t) 309 314 (fontified t) 314 318 (fontified t) 318 324 (face font-lock-keyword-face fontified t) 324 325 (fontified t) 325 328 (face font-lock-builtin-face fontified t) 328 335 (fontified t) 335 337 (face font-lock-operator-face fontified t) 337 339 (fontified t) 339 340 (fontified t) 340 343 (face font-lock-keyword-face fontified t) 343 346 (fontified t) 346 348 (face font-lock-keyword-face fontified t) 348 349 (fontified t) 349 354 (face font-lock-builtin-face fontified t) 354 359 (fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 363 (face font-lock-comment-delimiter-face fontified t) 363 429 (face font-lock-comment-face fontified t) 429 431 (face font-lock-comment-delimiter-face fontified t) 431 466 (face font-lock-comment-face fontified t) 466 467 (face font-lock-comment-face fontified t) 467 470 (face font-lock-keyword-face fontified t) 470 471 (fontified t) 471 484 (face font-lock-function-name-face fontified t) 484 489 (fontified t) 489 493 (fontified t) 493 497 (face font-lock-variable-name-face fontified t) 497 498 (fontified t) 498 499 (face font-lock-operator-face fontified t) 499 501 (fontified t) 501 504 (face font-lock-builtin-face fontified t) 504 505 (fontified t) 505 510 (fontified t) 510 512 (face font-lock-operator-face fontified t) 512 515 (fontified t) 515 516 (face font-lock-operator-face fontified t) 516 518 (fontified t) 518 519 (fontified t) 519 522 (face font-lock-keyword-face fontified t) 522 525 (fontified t) 525 527 (face font-lock-keyword-face fontified t) 527 528 (fontified t) 528 533 (face font-lock-builtin-face fontified t) 533 535 (fontified t) 535 536 (face font-lock-operator-face fontified t) 536 540 (fontified t) 540 541 (face font-lock-operator-face fontified t) 541 543 (fontified t) 543 544 (face font-lock-operator-face fontified t) 544 551 (fontified t) 551 563 (fontified t) 563 566 (face font-lock-keyword-face fontified t) 566 569 (fontified t) 569 571 (face font-lock-keyword-face fontified t) 571 572 (fontified t) 572 577 (face font-lock-builtin-face fontified t) 577 578 (fontified t) 578 581 (face font-lock-builtin-face fontified t) 581 585 (fontified t) 585 587 (face font-lock-operator-face fontified t) 587 592 (fontified t) 592 596 (fontified t) 596 602 (face font-lock-keyword-face fontified t) 602 603 (fontified t) 603 612 (face font-lock-builtin-face fontified t) 612 613 (fontified t) 613 617 (fontified t) 617 619 (fontified t) 619 622 (face font-lock-builtin-face fontified t) 622 624 (fontified t) 624 625 (fontified t) 625 626 (fontified t) 626 628 (face font-lock-comment-delimiter-face fontified t) 628 686 (face font-lock-comment-face fontified t) 686 687 (face font-lock-comment-face fontified t) 687 690 (face font-lock-keyword-face fontified t) 690 691 (fontified t) 691 703 (face font-lock-function-name-face fontified t) 703 708 (fontified t) 708 712 (fontified t) 712 713 (face font-lock-variable-name-face fontified t) 713 714 (fontified t) 714 715 (face font-lock-operator-face fontified t) 715 737 (fontified t) 737 738 (face font-lock-operator-face fontified t) 738 741 (face font-lock-builtin-face fontified t) 741 742 (fontified t) 742 743 (fontified t) 743 747 (fontified t) 747 750 (face font-lock-keyword-face fontified t) 750 753 (fontified t) 753 755 (face font-lock-keyword-face fontified t) 755 759 (fontified t) 759 767 (fontified t) 767 768 (face font-lock-variable-name-face fontified t) 768 769 (fontified t) 769 770 (face font-lock-operator-face fontified t) 770 793 (fontified t) 793 800 (fontified t) 800 803 (face font-lock-builtin-face fontified t) 803 806 (fontified t) 806 808 (fontified t) 808 809 (fontified t) 809 813 (fontified t) 813 819 (face font-lock-keyword-face fontified t) 819 821 (fontified t) 821 822 (fontified t) 822 823 (fontified t) 823 825 (face font-lock-comment-delimiter-face fontified t) 825 862 (face font-lock-comment-face fontified t) 862 863 (face font-lock-comment-face fontified t) 863 866 (face font-lock-keyword-face fontified t) 866 867 (fontified t) 867 879 (face font-lock-function-name-face fontified t) 879 884 (fontified t) 884 888 (fontified t) 888 889 (face font-lock-variable-name-face fontified t) 889 890 (fontified t) 890 891 (face font-lock-operator-face fontified t) 891 892 (fontified t) 892 894 (face font-lock-string-face fontified t) 894 895 (fontified t) 895 899 (fontified t) 899 902 (face font-lock-keyword-face fontified t) 902 909 (fontified t) 909 911 (face font-lock-keyword-face fontified t) 911 912 (fontified t) 912 917 (face font-lock-builtin-face fontified t) 917 918 (fontified t) 918 921 (face font-lock-builtin-face fontified t) 921 925 (fontified t) 925 927 (face font-lock-operator-face fontified t) 927 932 (fontified t) 932 940 (fontified t) 940 941 (face font-lock-variable-name-face fontified t) 941 942 (fontified t) 942 943 (face font-lock-operator-face fontified t) 943 944 (face font-lock-operator-face fontified t) 944 945 (fontified t) 945 948 (face font-lock-builtin-face fontified t) 948 965 (fontified t) 965 966 (face font-lock-operator-face fontified t) 966 971 (fontified t) 971 975 (fontified t) 975 976 (face font-lock-operator-face fontified t) 976 982 (fontified t) 982 983 (face font-lock-operator-face fontified t) 983 989 (fontified t) 989 993 (fontified t) 993 999 (face font-lock-keyword-face fontified t) 999 1001 (fontified t) 1001 1002 (fontified t) 1002 1003 (fontified t) 1003 1006 (face font-lock-keyword-face fontified t) 1006 1007 (fontified t) 1007 1025 (face font-lock-function-name-face fontified t) 1025 1037 (fontified t) 1037 1043 (face font-lock-keyword-face fontified t) 1043 1044 (fontified t) 1044 1047 (face font-lock-builtin-face fontified t) 1047 1054 (fontified t) 1054 1055 (face font-lock-operator-face fontified t) 1055 1058 (fontified t) 1058 1060 (face font-lock-operator-face fontified t) 1060 1067 (fontified t) 1067 1074 (face font-lock-variable-name-face fontified t) 1074 1075 (fontified t) 1075 1076 (face font-lock-operator-face fontified t) 1076 1101 (fontified t) 1101 1104 (face font-lock-keyword-face fontified t) 1104 1107 (fontified t) 1107 1109 (face font-lock-keyword-face fontified t) 1109 1110 (fontified t) 1110 1115 (face font-lock-builtin-face fontified t) 1115 1119 (fontified t) 1119 1122 (face font-lock-builtin-face fontified t) 1122 1142 (fontified t) 1142 1149 (face font-lock-variable-name-face fontified t) 1149 1153 (fontified t) 1153 1154 (face font-lock-operator-face fontified t) 1154 1157 (fontified t) 1157 1158 (face font-lock-operator-face fontified t) 1158 1167 (fontified t) 1167 1168 (face font-lock-operator-face fontified t) 1168 1173 (fontified t) 1173 1174 (face font-lock-operator-face fontified t) 1174 1181 (fontified t) 1181 1187 (face font-lock-keyword-face fontified t) 1187 1194 (fontified t) 1194 1195 (rear-nonsticky t fontified t) 1195 1196 (fontified t) 1196 1197 (fontified t)) . 435) (undo-tree-id19661 . -1003) (undo-tree-id19662 . -1197) 1632 (t 26715 34743 223467 377000)) nil (26715 34836 127089 616000) 0 nil])
([nil nil ((434 . 455)) nil (26715 34836 127087 959000) 0 nil])
([nil nil ((455 . 467)) nil (26715 34836 127087 578000) 0 nil])
([nil nil ((467 . 468)) nil (26715 34836 127087 257000) 0 nil])
([nil nil ((nil rear-nonsticky nil 478 . 479) (nil fontified nil 473 . 479) (nil fontified nil 467 . 473) (467 . 479)) nil (26715 34836 127086 810000) 0 nil])
([nil nil ((479 . 481)) nil (26715 34836 127086 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 492 . 493) (nil fontified nil 481 . 493) (481 . 493)) nil (26715 34836 127085 979000) 0 nil])
([nil nil ((493 . 495)) nil (26715 34836 127085 562000) 0 nil])
([nil nil ((nil rear-nonsticky nil 507 . 508) (nil fontified nil 495 . 508) (495 . 508)) nil (26715 34836 127085 193000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 495) (undo-tree-id19657 . -1) (undo-tree-id19658 . -1) (undo-tree-id19659 . -1) (undo-tree-id19660 . -1) (494 . 495) (508 . 510)) nil (26715 34836 127084 501000) 0 nil])
([nil nil ((nil rear-nonsticky nil 521 . 522) (nil fontified nil 510 . 522) (510 . 522)) nil (26715 34836 127074 668000) 0 nil])
([nil nil ((522 . 524)) nil (26715 34836 127074 159000) 0 nil])
([nil nil ((nil rear-nonsticky nil 535 . 536) (nil fontified nil 524 . 536) (524 . 536)) nil (26715 34836 127073 641000) 0 nil])
([nil nil ((nil rear-nonsticky nil 553 . 554) (nil fontified nil 536 . 554) (536 . 554)) nil (26715 34836 127072 815000) 0 nil])
([nil nil ((536 . 538)) nil (26715 34836 127069 242000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -494) (undo-tree-id19674 . -1) (undo-tree-id19675 . -1) (undo-tree-id19676 . -1) (undo-tree-id19677 . -1) 495 (t 26715 34836 146255 964000)) nil (26715 34841 311354 77000) 0 nil])
([nil nil ((494 . 497)) nil (26715 34887 777027 407000) 0 nil])
([nil nil ((497 . 501) (#(" " 0 1 (fontified nil)) . 497) (496 . 497) (558 . 559)) ((#(" " 0 1 (fontified nil)) . 558) (undo-tree-id19769 . -1) (#("
" 0 1 (fontified t)) . 496) (497 . 498) (#("    " 0 4 (fontified t)) . 497)) (26715 34888 802533 778000) 0 nil])
([nil nil ((5314 . 5319)) ((#("flips" 0 4 (fontified t) 4 5 (fontified t)) . 5314) (undo-tree-id19748 . -4) (undo-tree-id19749 . -4) (undo-tree-id19750 . -4) (undo-tree-id19751 . -4) (undo-tree-id19752 . -4) (undo-tree-id19753 . -4) (undo-tree-id19754 . -4) (undo-tree-id19755 . -4) (undo-tree-id19756 . -4) (undo-tree-id19757 . -4) (undo-tree-id19758 . -4) (undo-tree-id19759 . -4) (undo-tree-id19760 . -4) (undo-tree-id19761 . -4) (undo-tree-id19762 . -4) (undo-tree-id19763 . -5) (undo-tree-id19764 . -5) (undo-tree-id19765 . -5) (undo-tree-id19766 . -5) (undo-tree-id19767 . -5) (undo-tree-id19768 . -5)) (26715 34890 345951 853000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5313) (undo-tree-id19793 . -1) (undo-tree-id19794 . -1) (undo-tree-id19795 . -1) (undo-tree-id19796 . -1) (undo-tree-id19797 . -1) (undo-tree-id19798 . -1) (undo-tree-id19799 . -1) (undo-tree-id19800 . -1) (undo-tree-id19801 . -1) (undo-tree-id19802 . -1) (undo-tree-id19803 . -1) (undo-tree-id19804 . -1) (undo-tree-id19805 . -1) (undo-tree-id19806 . -1) (undo-tree-id19807 . -1) (undo-tree-id19808 . -1) (undo-tree-id19809 . -1) (undo-tree-id19810 . -1) 5314) nil (26715 34892 360317 906000) 0 nil] [nil nil ((#("s" 0 1 (fontified t)) . -5318) (undo-tree-id19685 . -1) (undo-tree-id19687 . -1) (undo-tree-id19689 . -1) 5319) ((5318 . 5319)) (26715 34886 928211 916000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 5313) (#("p" 0 1 (fontified t)) . 5313) (#("i" 0 1 (fontified t)) . 5313) (#("l" 0 1 (fontified t)) . 5313) (#("f" 0 1 (fontified t)) . 5313)) nil (26715 35174 402224 844000) 0 nil] [nil nil ((#("return" 0 6 (fontified t)) . -5307) (undo-tree-id19770 . -6) (undo-tree-id19771 . -6) (undo-tree-id19772 . -6) (undo-tree-id19773 . -6) (undo-tree-id19774 . -6) (undo-tree-id19775 . -6) (undo-tree-id19776 . -6) (undo-tree-id19777 . -6) (undo-tree-id19778 . -6) (undo-tree-id19779 . -6) (undo-tree-id19780 . -6) (undo-tree-id19781 . -6) (undo-tree-id19782 . -6) (undo-tree-id19783 . -6) (undo-tree-id19784 . -6) (undo-tree-id19785 . -6) (undo-tree-id19786 . -6) (undo-tree-id19787 . -6) (undo-tree-id19788 . -6) (undo-tree-id19789 . -6) (undo-tree-id19790 . -6) (undo-tree-id19791 . -6) (undo-tree-id19792 . -6) 5313) ((5307 . 5313)) (26715 34892 360251 796000) 0 nil])
([nil nil ((5318 . 5323)) ((#("_bite" 0 4 (fontified t) 4 5 (fontified t)) . 5318) (undo-tree-id19737 . -4) (undo-tree-id19738 . -4) (undo-tree-id19739 . -4) (undo-tree-id19740 . -4) (undo-tree-id19741 . -4) (undo-tree-id19742 . -5) (undo-tree-id19743 . -5) (undo-tree-id19744 . -5) (undo-tree-id19745 . -5) (undo-tree-id19746 . -5) (undo-tree-id19747 . -5)) (26715 34886 621806 321000) 0 nil])
([nil nil ((5313 . 5314)) nil (26715 35174 402223 88000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t)) . -5322) (undo-tree-id19679 . -1) (undo-tree-id19681 . -1) (undo-tree-id19683 . -1) 5323) ((5322 . 5323)) (26715 34886 406319 133000) 0 nil])
([nil nil ((3769 . 3786)) nil (26715 35174 402222 607000) 0 nil])
([nil nil ((5322 . 5333)) ((#("s_per_byte(" 0 11 (fontified t)) . 5322)) (26715 34886 115423 279000) 0 nil])
([nil nil ((3786 . 3798)) nil (26715 35174 402221 966000) 0 nil])
([nil nil ((5338 . 5339)) ((#(")" 0 1 (fontified t)) . 5338) (undo-tree-id19690 . -1) (undo-tree-id19691 . -1) (undo-tree-id19692 . -1) (undo-tree-id19693 . -1) (undo-tree-id19694 . -1) (undo-tree-id19695 . -1) (undo-tree-id19696 . -1) (undo-tree-id19697 . -1) (undo-tree-id19698 . -1) (undo-tree-id19699 . -1) (undo-tree-id19700 . -1) (undo-tree-id19701 . -1) (undo-tree-id19702 . -1) (undo-tree-id19703 . -1) (undo-tree-id19704 . -1) (undo-tree-id19705 . -1) (undo-tree-id19706 . -1) (undo-tree-id19707 . -1) (undo-tree-id19708 . -1) (undo-tree-id19709 . -1) (undo-tree-id19710 . -1) (undo-tree-id19711 . -1) (undo-tree-id19712 . -1) (undo-tree-id19713 . -1) (undo-tree-id19714 . -1) (undo-tree-id19715 . -1) (undo-tree-id19716 . -1) (undo-tree-id19717 . -1) (undo-tree-id19718 . -1) (undo-tree-id19719 . -1) (undo-tree-id19720 . -1) (undo-tree-id19721 . -1) (undo-tree-id19722 . -1) (undo-tree-id19723 . -1) (undo-tree-id19724 . -1) (undo-tree-id19725 . -1) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) (undo-tree-id19730 . -1) (undo-tree-id19731 . -1) (undo-tree-id19732 . -1) (undo-tree-id19733 . -1) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (t 26715 34871 412181 421000)) (26715 34871 376511 611000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -3797) (undo-tree-id19863 . -1) (undo-tree-id19864 . -1) (undo-tree-id19865 . -1) (undo-tree-id19866 . -1) (undo-tree-id19867 . -1) (undo-tree-id19868 . -1) 3798) nil (26715 35174 402221 48000) 0 nil])
nil
([nil nil ((3797 . 3802)) nil (26715 35174 402215 334000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -3801) (undo-tree-id19852 . -1) (undo-tree-id19853 . -1) (undo-tree-id19854 . -1) (undo-tree-id19855 . -1) (undo-tree-id19856 . -1) (undo-tree-id19857 . -1) (undo-tree-id19858 . -1) (undo-tree-id19859 . -1) (undo-tree-id19860 . -1) (undo-tree-id19861 . -1) (undo-tree-id19862 . -1) 3802) nil (26715 35174 402214 507000) 0 nil])
([nil nil ((3801 . 3808)) nil (26715 35174 402202 224000) 0 nil])
([nil nil ((3808 . 3809)) nil (26715 35174 402201 805000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3807) (undo-tree-id19825 . -1) (undo-tree-id19826 . -1) (undo-tree-id19827 . -1) (undo-tree-id19828 . -1) (undo-tree-id19829 . -1) (undo-tree-id19830 . -1) (undo-tree-id19831 . -1) (undo-tree-id19832 . -1) (undo-tree-id19833 . -1) (undo-tree-id19834 . -1) (undo-tree-id19835 . -1) (undo-tree-id19836 . -1) (undo-tree-id19837 . -1) (undo-tree-id19838 . -1) (undo-tree-id19839 . -1) (undo-tree-id19840 . -1) (undo-tree-id19841 . -1) (undo-tree-id19842 . -1) (undo-tree-id19843 . -1) (undo-tree-id19844 . -1) (undo-tree-id19845 . -1) (#("6" 0 1 (fontified t)) . -3808) (undo-tree-id19846 . -1) (undo-tree-id19847 . -1) (undo-tree-id19848 . -1) (undo-tree-id19849 . -1) (undo-tree-id19850 . -1) (undo-tree-id19851 . -1) 3809) nil (26715 35174 402198 947000) 0 nil])
([nil nil ((3807 . 3813)) nil (26715 35174 402176 761000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3812) (undo-tree-id19818 . -1) (undo-tree-id19819 . -1) (undo-tree-id19820 . -1) (undo-tree-id19821 . -1) (undo-tree-id19822 . -1) (undo-tree-id19823 . -1) (undo-tree-id19824 . -1) 3813) nil (26715 35174 402175 888000) 0 nil])
([nil nil ((3812 . 3818)) nil (26715 35174 402169 604000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3817) (undo-tree-id19811 . -1) (undo-tree-id19812 . -1) (undo-tree-id19813 . -1) (undo-tree-id19814 . -1) (undo-tree-id19815 . -1) (undo-tree-id19816 . -1) (undo-tree-id19817 . -1) 3818) nil (26715 35174 402168 184000) 0 nil])
([nil nil ((3817 . 3820)) nil (26715 35304 166728 876000) 0 nil])
([nil nil ((apply -2 4972 4998 undo--wrap-and-run-primitive-undo 4972 4998 ((4980 . 4982) 4972 (t 26715 35304 911063 236000)))) nil (26715 35306 984239 843000) 0 nil] [nil nil ((#("        S = keccak_f(S)" 0 8 (fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 23 (fontified t)) . 4972) (undo-tree-id19870 . -20) (undo-tree-id19871 . -20) (undo-tree-id19872 . -20) (undo-tree-id19873 . -20) (undo-tree-id19874 . -20) (undo-tree-id19875 . -20) (undo-tree-id19876 . -20) (undo-tree-id19877 . -20) (undo-tree-id19878 . -20) (undo-tree-id19879 . -20) (undo-tree-id19880 . -20) (undo-tree-id19881 . -20) (undo-tree-id19882 . -20) (undo-tree-id19883 . -20) (undo-tree-id19884 . -20) (undo-tree-id19885 . -20) (undo-tree-id19886 . -20) (undo-tree-id19887 . -20) (undo-tree-id19888 . -20) (undo-tree-id19889 . -20) (undo-tree-id19890 . -20) (undo-tree-id19891 . -20) (undo-tree-id19892 . -20) (undo-tree-id19893 . -20) (undo-tree-id19894 . -20) (undo-tree-id19895 . -20) (undo-tree-id19896 . -20) (undo-tree-id19897 . -20) (undo-tree-id19898 . -20) (undo-tree-id19899 . -23) (undo-tree-id19900 . -23) (undo-tree-id19901 . -23) (undo-tree-id19902 . -23) (undo-tree-id19903 . -23) (undo-tree-id19904 . -23) (undo-tree-id19905 . -23) (undo-tree-id19906 . -23) (undo-tree-id19907 . -23) (undo-tree-id19908 . -23) (undo-tree-id19909 . -23) (undo-tree-id19910 . -23) (undo-tree-id19911 . -23) (undo-tree-id19912 . -23) (undo-tree-id19913 . -23) (undo-tree-id19914 . -23) (undo-tree-id19915 . -23) (undo-tree-id19916 . -23) (undo-tree-id19917 . -23) (undo-tree-id19918 . -23) (undo-tree-id19919 . -23) (undo-tree-id19920 . -23) (undo-tree-id19921 . -23) (undo-tree-id19922 . -23) (undo-tree-id19923 . -23) (undo-tree-id19924 . -23) (undo-tree-id19925 . -23) (undo-tree-id19926 . -23) (undo-tree-id19927 . -23) (undo-tree-id19928 . -23) (undo-tree-id19929 . -23) (undo-tree-id19930 . -23) (undo-tree-id19931 . -23) (undo-tree-id19932 . -23) (undo-tree-id19933 . -23) (undo-tree-id19934 . -23) (undo-tree-id19935 . -23) (undo-tree-id19936 . -23) (undo-tree-id19937 . -23) (undo-tree-id19938 . -23) (undo-tree-id19939 . -23) (undo-tree-id19940 . -23) (undo-tree-id19941 . -23) (undo-tree-id19942 . -23) (undo-tree-id19943 . -23) (undo-tree-id19944 . -23) (undo-tree-id19945 . -23) (undo-tree-id19946 . -23) (undo-tree-id19947 . -23) (undo-tree-id19948 . -23) (undo-tree-id19949 . -23) (undo-tree-id19950 . -23) (undo-tree-id19951 . -23) (undo-tree-id19952 . -23) (undo-tree-id19953 . -23) (undo-tree-id19954 . -23) (undo-tree-id19955 . -23) (undo-tree-id19956 . -23) (undo-tree-id19957 . -23) (undo-tree-id19958 . -23) (undo-tree-id19959 . -23) (undo-tree-id19960 . -23) (undo-tree-id19961 . -23) (undo-tree-id19962 . -23) (undo-tree-id19963 . -23) (undo-tree-id19964 . -23) (undo-tree-id19965 . -23) (undo-tree-id19966 . -23) (undo-tree-id19967 . -23) (undo-tree-id19968 . -23) (undo-tree-id19969 . -23) (undo-tree-id19970 . -23) (undo-tree-id19971 . -23) (undo-tree-id19972 . -23) (undo-tree-id19973 . -23) (undo-tree-id19974 . -23) (undo-tree-id19975 . -23) (undo-tree-id19976 . -23) (undo-tree-id19977 . -23) (undo-tree-id19978 . -23) (undo-tree-id19979 . -23) (undo-tree-id19980 . -23) (undo-tree-id19981 . -23) (undo-tree-id19982 . -23) (undo-tree-id19983 . -23) (undo-tree-id19984 . -23) (undo-tree-id19985 . -23) (undo-tree-id19986 . -23) (undo-tree-id19987 . -23) (undo-tree-id19988 . -23) (undo-tree-id19989 . -23) (undo-tree-id19990 . -23) (undo-tree-id19991 . -23) (undo-tree-id19992 . -23) (t 26715 35174 422528 568000)) ((4972 . 4995)) (26715 35303 754905 752000) 0 nil])
([nil nil ((#("                print(x, y, z, \"\\t\", 64*(x+5*y)+z)" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t) 21 31 (fontified t) 31 32 (face font-lock-string-face fontified t) 32 34 (face font-lock-constant-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 42 (fontified t) 42 43 (face font-lock-operator-face fontified t) 43 44 (fontified t) 44 45 (face font-lock-operator-face fontified t) 45 47 (fontified t) 47 48 (face font-lock-operator-face fontified t) 48 50 (fontified t)) . 3770) (undo-tree-id19999 . -50) (undo-tree-id20000 . -50) (undo-tree-id20001 . -50) (undo-tree-id20002 . -50) (undo-tree-id20003 . -50) (undo-tree-id20004 . -50) (undo-tree-id20005 . -50) (t 26715 35307 4032 985000)) nil (26715 35330 130097 189000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4972) (undo-tree-id19869 . -1)) ((4972 . 4973) (t 26715 35296 397189 70000)) (26715 35296 376059 996000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3770) (undo-tree-id19993 . -1) (undo-tree-id19994 . -1) (undo-tree-id19995 . -1) (undo-tree-id19996 . -1) (undo-tree-id19997 . -1) (undo-tree-id19998 . -1)) nil (26715 35330 130087 910000) 0 nil])
nil
([nil nil ((apply 2 4921 4944 undo--wrap-and-run-primitive-undo 4921 4944 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4929) 4946 (t 26715 35330 149716 141000)))) nil (26715 35350 946200 891000) 0 nil])
([nil nil ((#("        S = keccak_f(S)" 0 8 (fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 23 (fontified t)) . 4921) (undo-tree-id20007 . -23) (undo-tree-id20008 . -8) (undo-tree-id20009 . -8) (undo-tree-id20010 . -8) (undo-tree-id20011 . -8) (undo-tree-id20012 . -8) (undo-tree-id20013 . -8) (undo-tree-id20014 . -23) (undo-tree-id20015 . -23) (undo-tree-id20016 . -23) (undo-tree-id20017 . -23) (undo-tree-id20018 . -23) (undo-tree-id20019 . -23) (t 26715 35350 965458 12000)) nil (26715 35451 317735 241000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4921) (undo-tree-id20006 . -1)) nil (26715 35451 317724 831000) 0 nil])
([nil nil ((4971 . 4973) (t 26715 35451 335538 361000)) nil (26715 35474 290948 779000) 0 nil])
([nil nil ((4974 . 5012) (#(" " 0 1 (fontified nil)) . 4974) (4973 . 4974)) nil (26715 35474 290948 324000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5030) (undo-tree-id20258 . -1) (undo-tree-id20259 . -1) (undo-tree-id20260 . -1) (undo-tree-id20261 . -1) (undo-tree-id20262 . -1) (undo-tree-id20263 . -1) (undo-tree-id20264 . -1) 5031) nil (26715 35474 290947 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5030) (#(" " 0 1 (fontified t)) . 5030)) nil (26715 35474 290943 836000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -5029) (undo-tree-id20232 . -1) (undo-tree-id20233 . -1) (undo-tree-id20234 . -1) (undo-tree-id20235 . -1) (undo-tree-id20236 . -1) (undo-tree-id20237 . -1) (undo-tree-id20238 . -1) (undo-tree-id20239 . -1) (undo-tree-id20240 . -1) (undo-tree-id20241 . -1) (undo-tree-id20242 . -1) (undo-tree-id20243 . -1) (undo-tree-id20244 . -1) (undo-tree-id20245 . -1) (undo-tree-id20246 . -1) (undo-tree-id20247 . -1) (undo-tree-id20248 . -1) (undo-tree-id20249 . -1) (undo-tree-id20250 . -1) (undo-tree-id20251 . -1) (undo-tree-id20252 . -1) (undo-tree-id20253 . -1) (undo-tree-id20254 . -1) (undo-tree-id20255 . -1) (undo-tree-id20256 . -1) (undo-tree-id20257 . -1) 5030) nil (26715 35474 290943 76000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5029) (#(" " 0 1 (fontified t)) . 5029)) nil (26715 35474 290929 750000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5028) (undo-tree-id20191 . -1) (undo-tree-id20192 . -1) (undo-tree-id20193 . -1) (undo-tree-id20194 . -1) (undo-tree-id20195 . -1) (undo-tree-id20196 . -1) (undo-tree-id20197 . -1) (undo-tree-id20198 . -1) (undo-tree-id20199 . -1) (undo-tree-id20200 . -1) (undo-tree-id20201 . -1) (undo-tree-id20202 . -1) (undo-tree-id20203 . -1) (undo-tree-id20204 . -1) (undo-tree-id20205 . -1) (undo-tree-id20206 . -1) (undo-tree-id20207 . -1) (undo-tree-id20208 . -1) (undo-tree-id20209 . -1) (undo-tree-id20210 . -1) (undo-tree-id20211 . -1) (undo-tree-id20212 . -1) (undo-tree-id20213 . -1) (undo-tree-id20214 . -1) (undo-tree-id20215 . -1) (undo-tree-id20216 . -1) (undo-tree-id20217 . -1) (undo-tree-id20218 . -1) (undo-tree-id20219 . -1) (undo-tree-id20220 . -1) (undo-tree-id20221 . -1) (undo-tree-id20222 . -1) (undo-tree-id20223 . -1) (undo-tree-id20224 . -1) (undo-tree-id20225 . -1) (undo-tree-id20226 . -1) (undo-tree-id20227 . -1) (undo-tree-id20228 . -1) (undo-tree-id20229 . -1) (undo-tree-id20230 . -1) (undo-tree-id20231 . -1) 5029) nil (26715 35474 290928 792000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028) (#(" " 0 1 (fontified t)) . 5028)) nil (26715 35474 290905 925000) 0 nil])
([nil nil ((5028 . 5029)) nil (26715 35474 290904 772000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5039) (undo-tree-id20127 . -1) (undo-tree-id20128 . -1) (undo-tree-id20129 . -1) (undo-tree-id20130 . -1) (undo-tree-id20131 . -1) (undo-tree-id20132 . -1) (undo-tree-id20133 . -1) (undo-tree-id20134 . -1) (undo-tree-id20135 . -1) (undo-tree-id20136 . -1) (undo-tree-id20137 . -1) (undo-tree-id20138 . -1) (undo-tree-id20139 . -1) (undo-tree-id20140 . -1) (undo-tree-id20141 . -1) (undo-tree-id20142 . -1) (undo-tree-id20143 . -1) (undo-tree-id20144 . -1) (undo-tree-id20145 . -1) (undo-tree-id20146 . -1) (undo-tree-id20147 . -1) (undo-tree-id20148 . -1) (undo-tree-id20149 . -1) (undo-tree-id20150 . -1) (undo-tree-id20151 . -1) (undo-tree-id20152 . -1) (undo-tree-id20153 . -1) (undo-tree-id20154 . -1) (undo-tree-id20155 . -1) (undo-tree-id20156 . -1) (undo-tree-id20157 . -1) (undo-tree-id20158 . -1) (undo-tree-id20159 . -1) (undo-tree-id20160 . -1) (undo-tree-id20161 . -1) (undo-tree-id20162 . -1) (undo-tree-id20163 . -1) (undo-tree-id20164 . -1) (undo-tree-id20165 . -1) (undo-tree-id20166 . -1) (undo-tree-id20167 . -1) (undo-tree-id20168 . -1) (#(")" 0 1 (fontified t)) . -5040) (undo-tree-id20169 . -1) (undo-tree-id20170 . -1) (undo-tree-id20171 . -1) (undo-tree-id20172 . -1) (undo-tree-id20173 . -1) (undo-tree-id20174 . -1) (undo-tree-id20175 . -1) (undo-tree-id20176 . -1) (undo-tree-id20177 . -1) (undo-tree-id20178 . -1) (undo-tree-id20179 . -1) (undo-tree-id20180 . -1) (undo-tree-id20181 . -1) (undo-tree-id20182 . -1) (undo-tree-id20183 . -1) (undo-tree-id20184 . -1) (undo-tree-id20185 . -1) (undo-tree-id20186 . -1) (undo-tree-id20187 . -1) (undo-tree-id20188 . -1) (undo-tree-id20189 . -1) (undo-tree-id20190 . -1) 5041) nil (26715 35474 290903 243000) 0 nil])
([nil nil ((5039 . 5040)) nil (26715 35474 290847 124000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5038) (undo-tree-id20020 . -1) (undo-tree-id20021 . -1) (undo-tree-id20022 . -1) (undo-tree-id20023 . -1) (undo-tree-id20024 . -1) (undo-tree-id20025 . -1) (undo-tree-id20026 . -1) (undo-tree-id20027 . -1) (undo-tree-id20028 . -1) (undo-tree-id20029 . -1) (undo-tree-id20030 . -1) (undo-tree-id20031 . -1) (undo-tree-id20032 . -1) (undo-tree-id20033 . -1) (undo-tree-id20034 . -1) (undo-tree-id20035 . -1) (undo-tree-id20036 . -1) (undo-tree-id20037 . -1) (undo-tree-id20038 . -1) (undo-tree-id20039 . -1) (undo-tree-id20040 . -1) (undo-tree-id20041 . -1) (undo-tree-id20042 . -1) (undo-tree-id20043 . -1) (undo-tree-id20044 . -1) (undo-tree-id20045 . -1) (undo-tree-id20046 . -1) (undo-tree-id20047 . -1) (undo-tree-id20048 . -1) (undo-tree-id20049 . -1) (undo-tree-id20050 . -1) (undo-tree-id20051 . -1) (undo-tree-id20052 . -1) (undo-tree-id20053 . -1) (undo-tree-id20054 . -1) (undo-tree-id20055 . -1) (undo-tree-id20056 . -1) (undo-tree-id20057 . -1) (undo-tree-id20058 . -1) (undo-tree-id20059 . -1) (undo-tree-id20060 . -1) (undo-tree-id20061 . -1) (undo-tree-id20062 . -1) (undo-tree-id20063 . -1) (undo-tree-id20064 . -1) (undo-tree-id20065 . -1) (undo-tree-id20066 . -1) (undo-tree-id20067 . -1) (undo-tree-id20068 . -1) (undo-tree-id20069 . -1) (undo-tree-id20070 . -1) (undo-tree-id20071 . -1) (undo-tree-id20072 . -1) (undo-tree-id20073 . -1) (undo-tree-id20074 . -1) (undo-tree-id20075 . -1) (undo-tree-id20076 . -1) (undo-tree-id20077 . -1) (undo-tree-id20078 . -1) (undo-tree-id20079 . -1) (undo-tree-id20080 . -1) (undo-tree-id20081 . -1) (undo-tree-id20082 . -1) (undo-tree-id20083 . -1) (undo-tree-id20084 . -1) (undo-tree-id20085 . -1) (undo-tree-id20086 . -1) (undo-tree-id20087 . -1) (undo-tree-id20088 . -1) (undo-tree-id20089 . -1) (undo-tree-id20090 . -1) (undo-tree-id20091 . -1) (undo-tree-id20092 . -1) (undo-tree-id20093 . -1) (undo-tree-id20094 . -1) (undo-tree-id20095 . -1) (undo-tree-id20096 . -1) (undo-tree-id20097 . -1) (undo-tree-id20098 . -1) (undo-tree-id20099 . -1) (undo-tree-id20100 . -1) (undo-tree-id20101 . -1) (undo-tree-id20102 . -1) (undo-tree-id20103 . -1) (#(")" 0 1 (fontified t)) . -5039) (undo-tree-id20104 . -1) (undo-tree-id20105 . -1) (undo-tree-id20106 . -1) (undo-tree-id20107 . -1) (undo-tree-id20108 . -1) (undo-tree-id20109 . -1) (undo-tree-id20110 . -1) (undo-tree-id20111 . -1) (undo-tree-id20112 . -1) (undo-tree-id20113 . -1) (undo-tree-id20114 . -1) (undo-tree-id20115 . -1) (undo-tree-id20116 . -1) (undo-tree-id20117 . -1) (undo-tree-id20118 . -1) (undo-tree-id20119 . -1) (undo-tree-id20120 . -1) (undo-tree-id20121 . -1) (undo-tree-id20122 . -1) (undo-tree-id20123 . -1) (undo-tree-id20124 . -1) (undo-tree-id20125 . -1) (undo-tree-id20126 . -1) 5040) nil (26715 35474 290844 602000) 0 nil])
([nil nil ((5038 . 5041)) nil (26715 35474 290777 467000) 0 nil])
([nil nil ((6713 . 6716) (t 26715 35474 309396 784000)) nil (26715 35502 836566 55000) 0 nil])
([nil nil ((#("    print(\"First 64 bits of S:\", S[:64])
    print(\"Lane 0 hex:\", hexlify_array(S[:64]))
" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 31 (face font-lock-string-face fontified t) 31 41 (fontified t) 41 45 (fontified t) 45 50 (face font-lock-builtin-face fontified t) 50 51 (fontified t) 51 64 (face font-lock-string-face fontified t) 64 88 (fontified t) 88 89 (fontified t rear-nonsticky t)) . -5067) (undo-tree-id20366 . -56) (undo-tree-id20367 . -56) (undo-tree-id20368 . -56) (undo-tree-id20369 . -56) (undo-tree-id20370 . -56) (undo-tree-id20371 . -56) (undo-tree-id20372 . -56) (undo-tree-id20373 . -56) (undo-tree-id20374 . -56) (undo-tree-id20375 . -56) (undo-tree-id20376 . -56) (undo-tree-id20377 . -56) (undo-tree-id20378 . -56) (undo-tree-id20379 . -56) (undo-tree-id20380 . -56) (undo-tree-id20381 . -56) (undo-tree-id20382 . -56) (undo-tree-id20383 . -56) (undo-tree-id20384 . -56) (undo-tree-id20385 . -56) (undo-tree-id20386 . -56) (undo-tree-id20387 . -56) (undo-tree-id20388 . -56) (undo-tree-id20389 . -56) (undo-tree-id20390 . -56) (undo-tree-id20391 . -56) (undo-tree-id20392 . -56) (undo-tree-id20393 . -56) (undo-tree-id20394 . -56) (undo-tree-id20395 . -56) (undo-tree-id20396 . -56) (undo-tree-id20397 . -56) (undo-tree-id20398 . -56) (undo-tree-id20399 . -56) (undo-tree-id20400 . -56) (undo-tree-id20401 . -56) (undo-tree-id20402 . -56) (undo-tree-id20403 . -56) (undo-tree-id20404 . -56) (undo-tree-id20405 . -56) (undo-tree-id20406 . -56) (undo-tree-id20407 . -56) (undo-tree-id20408 . -56) (undo-tree-id20409 . -56) (undo-tree-id20410 . -56) (undo-tree-id20411 . -56) (undo-tree-id20412 . -56) (undo-tree-id20413 . -56) (undo-tree-id20414 . -56) (undo-tree-id20415 . -15) (undo-tree-id20416 . -15) (undo-tree-id20417 . -15) (undo-tree-id20418 . -15) (undo-tree-id20419 . -15) (undo-tree-id20420 . -15) (undo-tree-id20421 . -41) (undo-tree-id20422 . -41) (undo-tree-id20423 . -41) (undo-tree-id20424 . -41) (undo-tree-id20425 . -41) (undo-tree-id20426 . -41) (undo-tree-id20427 . -41) (undo-tree-id20428 . -89) (undo-tree-id20429 . -89) (undo-tree-id20430 . -89) (undo-tree-id20431 . -89) (undo-tree-id20432 . -89) (undo-tree-id20433 . -89) (undo-tree-id20434 . -89) 5156 (t 26715 35502 855253 234000)) nil (26715 35524 569644 766000) 0 nil])
([nil nil ((#("        # print(\"S:\", S)
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 15 (face font-lock-comment-face fontified t) 15 16 (face font-lock-comment-face fontified t) 16 20 (face font-lock-comment-face fontified t) 20 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t rear-nonsticky t)) . -5042) (undo-tree-id20265 . -25) (undo-tree-id20266 . -25) (undo-tree-id20267 . -25) (undo-tree-id20268 . -25) (undo-tree-id20269 . -25) (undo-tree-id20270 . -25) (undo-tree-id20271 . -25) (undo-tree-id20272 . -25) (undo-tree-id20273 . -25) (undo-tree-id20274 . -25) (undo-tree-id20275 . -25) (undo-tree-id20276 . -25) (undo-tree-id20277 . -25) (undo-tree-id20278 . -25) (undo-tree-id20279 . -25) (undo-tree-id20280 . -25) (undo-tree-id20281 . -25) (undo-tree-id20282 . -25) (undo-tree-id20283 . -25) (undo-tree-id20284 . -25) (undo-tree-id20285 . -25) (undo-tree-id20286 . -25) (undo-tree-id20287 . -25) (undo-tree-id20288 . -25) (undo-tree-id20289 . -25) (undo-tree-id20290 . -25) (undo-tree-id20291 . -25) (undo-tree-id20292 . -25) (undo-tree-id20293 . -25) (undo-tree-id20294 . -25) (undo-tree-id20295 . -25) (undo-tree-id20296 . -25) (undo-tree-id20297 . -25) (undo-tree-id20298 . -25) (undo-tree-id20299 . -25) (undo-tree-id20300 . -25) (undo-tree-id20301 . -25) (undo-tree-id20302 . -25) (undo-tree-id20303 . -25) (undo-tree-id20304 . -25) (undo-tree-id20305 . -25) (undo-tree-id20306 . -25) (undo-tree-id20307 . -25) (undo-tree-id20308 . -25) (undo-tree-id20309 . -25) (undo-tree-id20310 . -25) (undo-tree-id20311 . -25) (undo-tree-id20312 . -25) (undo-tree-id20313 . -25) (undo-tree-id20314 . -25) (undo-tree-id20315 . -25) (undo-tree-id20316 . -25) (undo-tree-id20317 . -25) (undo-tree-id20318 . -25) (undo-tree-id20319 . -25) (undo-tree-id20320 . -25) (undo-tree-id20321 . -25) (undo-tree-id20322 . -25) (undo-tree-id20323 . -25) (undo-tree-id20324 . -25) (undo-tree-id20325 . -25) (undo-tree-id20326 . -25) (undo-tree-id20327 . -25) (undo-tree-id20328 . -25) (undo-tree-id20329 . -25) (undo-tree-id20330 . -25) (undo-tree-id20331 . -25) (undo-tree-id20332 . -25) (undo-tree-id20333 . -25) (undo-tree-id20334 . -25) (undo-tree-id20335 . -25) (undo-tree-id20336 . -25) (undo-tree-id20337 . -25) (undo-tree-id20338 . -25) (undo-tree-id20339 . -25) (undo-tree-id20340 . -25) (undo-tree-id20341 . -25) (undo-tree-id20342 . -25) (undo-tree-id20343 . -25) (undo-tree-id20344 . -25) (undo-tree-id20345 . -25) (undo-tree-id20346 . -25) (undo-tree-id20347 . -25) (undo-tree-id20348 . -25) (undo-tree-id20349 . -25) (undo-tree-id20350 . -25) (undo-tree-id20351 . -25) (undo-tree-id20352 . -25) (undo-tree-id20353 . -25) (undo-tree-id20354 . -25) (undo-tree-id20355 . -25) (undo-tree-id20356 . -25) (undo-tree-id20357 . -25) (undo-tree-id20358 . -25) (undo-tree-id20359 . -25) (undo-tree-id20360 . -25) (undo-tree-id20361 . -25) (undo-tree-id20362 . -25) (undo-tree-id20363 . -25) (undo-tree-id20364 . -25) (undo-tree-id20365 . -25) 5067) nil (26715 35524 569601 272000) 0 nil])
([nil nil ((6652 . 6656) (t 26715 35524 592166 857000)) nil (26715 35549 966699 184000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -6655) (undo-tree-id20435 . -1) (undo-tree-id20436 . -1) (undo-tree-id20437 . -1) (undo-tree-id20438 . -1) (undo-tree-id20439 . -1) (undo-tree-id20440 . -1) 6656) nil (26715 35549 966698 233000) 0 nil])
([nil nil ((6655 . 6660)) nil (26715 35549 966687 137000) 0 nil])
([nil nil ((6719 . 6727)) nil (26715 35549 966683 872000) 0 nil])
([nil nil ((3830 . 3837) (t 26715 35549 986089 843000)) nil (26715 35583 674435 71000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -3836) (undo-tree-id20442 . -1) (undo-tree-id20443 . -1) (undo-tree-id20444 . -1) (undo-tree-id20445 . -1) (undo-tree-id20446 . -1) (undo-tree-id20447 . -1) 3837) nil (26715 35583 674434 402000) 0 nil])
([nil nil ((3836 . 3838)) nil (26715 35583 674488 469000) 0 nil])
([nil nil ((3838 . 3841)) nil (26715 35587 821154 819000) 0 nil] [nil nil ((3819 . 3835) (#("    " 0 4 (fontified t)) . 3819) (undo-tree-id20441 . -4) 3838) ((3819 . 3823) (#("                " 0 16 (fontified t)) . 3819)) (26715 35583 674427 478000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -3840) (undo-tree-id20448 . -1) (undo-tree-id20449 . -1) (undo-tree-id20450 . -1) (undo-tree-id20451 . -1) (undo-tree-id20452 . -1) (undo-tree-id20453 . -1) 3841) nil (26715 35587 821153 778000) 0 nil])
nil
([nil nil ((3840 . 3848)) nil (26715 35587 821141 6000) 0 nil])
([nil nil ((3848 . 3849)) nil (26715 35587 821139 919000) 0 nil])
([nil nil ((3850 . 3851)) nil (26715 35587 821136 47000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3850) (undo-tree-id20946 . -1) (undo-tree-id20947 . -1) (undo-tree-id20948 . -1) (undo-tree-id20949 . -1) (undo-tree-id20950 . -1) (undo-tree-id20951 . -1) (undo-tree-id20952 . -1) (undo-tree-id20953 . -1) (undo-tree-id20954 . -1) (undo-tree-id20955 . -1) (undo-tree-id20956 . -1) (undo-tree-id20957 . -1) (undo-tree-id20958 . -1) (undo-tree-id20959 . -1) (undo-tree-id20960 . -1) (undo-tree-id20961 . -1) (undo-tree-id20962 . -1) (undo-tree-id20963 . -1) (undo-tree-id20964 . -1) (undo-tree-id20965 . -1) (undo-tree-id20966 . -1) (undo-tree-id20967 . -1) (undo-tree-id20968 . -1) (undo-tree-id20969 . -1) (undo-tree-id20970 . -1) (undo-tree-id20971 . -1) (undo-tree-id20972 . -1) (undo-tree-id20973 . -1) (undo-tree-id20974 . -1) (undo-tree-id20975 . -1) (undo-tree-id20976 . -1) (undo-tree-id20977 . -1) 3851 (t 26715 35587 841020 291000)) nil (26715 35665 647151 32000) 0 nil])
([nil nil ((#("byte(" 0 5 (fontified t)) . -3844) (undo-tree-id20940 . -5) (undo-tree-id20941 . -5) (undo-tree-id20942 . -5) (undo-tree-id20943 . -5) (undo-tree-id20944 . -5) (undo-tree-id20945 . -5) 3849) nil (26715 35665 647097 981000) 0 nil])
([nil nil ((#("per_" 0 4 (fontified t)) . -3840) (undo-tree-id20929 . -4) (undo-tree-id20930 . -4) (undo-tree-id20931 . -4) (undo-tree-id20932 . -4) (undo-tree-id20933 . -4) (undo-tree-id20934 . -4) (undo-tree-id20935 . -4) (undo-tree-id20936 . -4) (undo-tree-id20937 . -4) (undo-tree-id20938 . -4) (undo-tree-id20939 . -4) 3844) nil (26715 35665 647086 809000) 0 nil])
([nil nil ((#("bits_" 0 5 (fontified t)) . -3835) (undo-tree-id20913 . -5) (undo-tree-id20914 . -5) (undo-tree-id20915 . -5) (undo-tree-id20916 . -5) (undo-tree-id20917 . -5) (undo-tree-id20918 . -5) (undo-tree-id20919 . -5) (undo-tree-id20920 . -5) (undo-tree-id20921 . -5) (undo-tree-id20922 . -5) (undo-tree-id20923 . -5) (undo-tree-id20924 . -5) (undo-tree-id20925 . -5) (undo-tree-id20926 . -5) (undo-tree-id20927 . -5) (undo-tree-id20928 . -5) 3840) nil (26715 35665 647067 783000) 0 nil])
([nil nil ((#("flip_" 0 5 (fontified t)) . -3830) (undo-tree-id20892 . -5) (undo-tree-id20893 . -5) (undo-tree-id20894 . -5) (undo-tree-id20895 . -5) (undo-tree-id20896 . -5) (undo-tree-id20897 . -5) (undo-tree-id20898 . -5) (undo-tree-id20899 . -5) (undo-tree-id20900 . -5) (undo-tree-id20901 . -5) (undo-tree-id20902 . -5) (undo-tree-id20903 . -5) (undo-tree-id20904 . -5) (undo-tree-id20905 . -5) (undo-tree-id20906 . -5) (undo-tree-id20907 . -5) (undo-tree-id20908 . -5) (undo-tree-id20909 . -5) (undo-tree-id20910 . -5) (undo-tree-id20911 . -5) (undo-tree-id20912 . -5) 3835) nil (26715 35665 647040 537000) 0 nil])
([nil nil ((3687 . 3692)) nil (26715 35665 647006 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3730 . 3731) (nil fontified nil 3692 . 3731) (3692 . 3731)) nil (26715 35665 647005 798000) 0 nil])
([nil nil ((#("    return flip_bits_per_byte(A.flatten())" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 42 (fontified t)) . 3688) (undo-tree-id20873 . -4) (undo-tree-id20874 . -4) (undo-tree-id20875 . -4) (undo-tree-id20876 . -4) (undo-tree-id20877 . -4) (undo-tree-id20878 . -4) (undo-tree-id20879 . -4) (undo-tree-id20880 . -4) (undo-tree-id20881 . -4) (undo-tree-id20882 . -4) (undo-tree-id20883 . -4) (undo-tree-id20884 . -4) (undo-tree-id20885 . -4) (undo-tree-id20886 . -42) (undo-tree-id20887 . -42) (undo-tree-id20888 . -42) (undo-tree-id20889 . -42) (undo-tree-id20890 . -42) (undo-tree-id20891 . -42)) nil (26715 35665 647002 525000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3690 . 3691) (nil fontified nil 3659 . 3691) (nil fontified nil 3653 . 3659) (nil fontified nil 3649 . 3653) (3649 . 3691)) nil (26715 35665 646973 41000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -3692) (undo-tree-id20872 . -4) (3691 . 3692)) nil (26715 35665 646970 817000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3691) (undo-tree-id20845 . 1) (undo-tree-id20846 . -1) (undo-tree-id20847 . -1) (undo-tree-id20848 . -1) (undo-tree-id20849 . -1) (undo-tree-id20850 . -1) (undo-tree-id20851 . -1) (undo-tree-id20852 . -1) (undo-tree-id20853 . -1) (undo-tree-id20854 . -1) (undo-tree-id20855 . -1) (undo-tree-id20856 . -1) (undo-tree-id20857 . -1) (undo-tree-id20858 . -1) (undo-tree-id20859 . -1) (undo-tree-id20860 . -1) (undo-tree-id20861 . -1) (undo-tree-id20862 . -1) (undo-tree-id20863 . -1) (undo-tree-id20864 . -1) (undo-tree-id20865 . -1) (undo-tree-id20866 . -1) (undo-tree-id20867 . -1) (undo-tree-id20868 . -1) (undo-tree-id20869 . -1) (undo-tree-id20870 . -1) (undo-tree-id20871 . -1) 3692) nil (26715 35665 646965 716000) 0 nil])
([nil nil ((3649 . 3650)) nil (26715 35665 646924 837000) 0 nil])
([nil nil ((3692 . 3694)) nil (26715 35665 646923 813000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3693) (undo-tree-id20826 . 1) (undo-tree-id20827 . -1) (undo-tree-id20828 . -1) (undo-tree-id20829 . -1) (undo-tree-id20830 . -1) (undo-tree-id20831 . -1) (undo-tree-id20832 . -1) (undo-tree-id20833 . -1) (undo-tree-id20834 . -1) (undo-tree-id20835 . -1) (undo-tree-id20836 . -1) (undo-tree-id20837 . -1) (undo-tree-id20838 . -1) (undo-tree-id20839 . -1) (undo-tree-id20840 . -1) (undo-tree-id20841 . -1) (undo-tree-id20842 . -1) (undo-tree-id20843 . -1) (undo-tree-id20844 . -1) 3694) nil (26715 35665 646921 124000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -3692) (undo-tree-id20773 . 1) (undo-tree-id20774 . -1) (undo-tree-id20775 . -1) (undo-tree-id20776 . -1) (undo-tree-id20777 . -1) (undo-tree-id20778 . -1) (undo-tree-id20779 . -1) (undo-tree-id20780 . -1) (undo-tree-id20781 . -1) (undo-tree-id20782 . -1) (undo-tree-id20783 . -1) (undo-tree-id20784 . -1) (undo-tree-id20785 . -1) (undo-tree-id20786 . -1) (undo-tree-id20787 . -1) (undo-tree-id20788 . -1) (undo-tree-id20789 . -1) (undo-tree-id20790 . -1) (undo-tree-id20791 . -1) (undo-tree-id20792 . -1) (undo-tree-id20793 . -1) (undo-tree-id20794 . -1) (undo-tree-id20795 . -1) (undo-tree-id20796 . -1) (undo-tree-id20797 . -1) (undo-tree-id20798 . -1) (undo-tree-id20799 . -1) (undo-tree-id20800 . -1) (undo-tree-id20801 . -1) (undo-tree-id20802 . -1) (undo-tree-id20803 . -1) (undo-tree-id20804 . -1) (undo-tree-id20805 . -1) (undo-tree-id20806 . -1) (undo-tree-id20807 . -1) (undo-tree-id20808 . -1) (undo-tree-id20809 . -1) (undo-tree-id20810 . -1) (undo-tree-id20811 . -1) (undo-tree-id20812 . -1) (undo-tree-id20813 . -1) (undo-tree-id20814 . -1) (undo-tree-id20815 . -1) (undo-tree-id20816 . -1) (undo-tree-id20817 . -1) (undo-tree-id20818 . -1) (undo-tree-id20819 . -1) (undo-tree-id20820 . -1) (undo-tree-id20821 . -1) (undo-tree-id20822 . -1) (undo-tree-id20823 . -1) (undo-tree-id20824 . -1) (undo-tree-id20825 . -1) 3693) nil (26715 35665 646887 283000) 0 nil])
([nil nil ((3692 . 3693)) nil (26715 35665 646792 532000) 0 nil])
([nil nil ((#("#    return flip_bits_per_byte(A.flatten())" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 5 (face font-lock-comment-delimiter-face fontified t) 5 11 (face font-lock-comment-face fontified t) 11 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face rear-nonsticky t fontified t)) . 3649) (undo-tree-id20650 . -43) (undo-tree-id20651 . -43) (undo-tree-id20652 . -43) (undo-tree-id20653 . -43) (undo-tree-id20654 . -43) (undo-tree-id20655 . -43) (undo-tree-id20656 . -5) (undo-tree-id20657 . -5) (undo-tree-id20658 . -43) (undo-tree-id20659 . -43) (undo-tree-id20660 . -43) (undo-tree-id20661 . -43) (undo-tree-id20662 . -43) (undo-tree-id20663 . -43) (undo-tree-id20664 . -43) (undo-tree-id20665 . -43) (undo-tree-id20666 . -43) (undo-tree-id20667 . -43) (undo-tree-id20668 . -43) (undo-tree-id20669 . -43) (undo-tree-id20670 . -43) (undo-tree-id20671 . -43) (undo-tree-id20672 . -43) (undo-tree-id20673 . -43) (undo-tree-id20674 . -43) (undo-tree-id20675 . -43) (undo-tree-id20676 . -5) (undo-tree-id20677 . -5) (undo-tree-id20678 . -43) (undo-tree-id20679 . -43) (undo-tree-id20680 . -5) (undo-tree-id20681 . -5) (undo-tree-id20682 . -43) (undo-tree-id20683 . -43) (undo-tree-id20684 . -5) (undo-tree-id20685 . -5) (undo-tree-id20686 . -43) (undo-tree-id20687 . -43) (undo-tree-id20688 . -43) (undo-tree-id20689 . -43) (undo-tree-id20690 . -43) (undo-tree-id20691 . -43) (undo-tree-id20692 . -43) (undo-tree-id20693 . -43) (undo-tree-id20694 . -43) (undo-tree-id20695 . -43) (undo-tree-id20696 . -43) (undo-tree-id20697 . -1) (undo-tree-id20698 . -1) (undo-tree-id20699 . -1) (undo-tree-id20700 . -1) (undo-tree-id20701 . -1) (undo-tree-id20702 . -1) (undo-tree-id20703 . -1) (undo-tree-id20704 . -1) (undo-tree-id20705 . -1) (undo-tree-id20706 . -1) (undo-tree-id20707 . -43) (undo-tree-id20708 . -43) (undo-tree-id20709 . -43) (undo-tree-id20710 . -43) (undo-tree-id20711 . -43) (undo-tree-id20712 . -43) (undo-tree-id20713 . -43) (undo-tree-id20714 . -43) (undo-tree-id20715 . -43) (undo-tree-id20716 . -43) (undo-tree-id20717 . -43) (undo-tree-id20718 . -43) (undo-tree-id20719 . -43) (undo-tree-id20720 . -43) (undo-tree-id20721 . -43) (undo-tree-id20722 . -43) (undo-tree-id20723 . -43) (undo-tree-id20724 . -43) (undo-tree-id20725 . -43) (undo-tree-id20726 . -43) (undo-tree-id20727 . -43) (undo-tree-id20728 . -43) (undo-tree-id20729 . -43) (undo-tree-id20730 . -43) (undo-tree-id20731 . -43) (undo-tree-id20732 . -43) (undo-tree-id20733 . -43) (undo-tree-id20734 . -43) (undo-tree-id20735 . -43) (undo-tree-id20736 . -43) (undo-tree-id20737 . -43) (undo-tree-id20738 . -43) (undo-tree-id20739 . -43) (undo-tree-id20740 . -43) (undo-tree-id20741 . -43) (undo-tree-id20742 . -43) (undo-tree-id20743 . -43) (undo-tree-id20744 . -43) (undo-tree-id20745 . -43) (undo-tree-id20746 . -43) (undo-tree-id20747 . -43) (undo-tree-id20748 . -43) (undo-tree-id20749 . -43) (undo-tree-id20750 . -43) (undo-tree-id20751 . -43) (undo-tree-id20752 . -43) (undo-tree-id20753 . -43) (undo-tree-id20754 . -43) (undo-tree-id20755 . -43) (undo-tree-id20756 . -43) (undo-tree-id20757 . -43) (undo-tree-id20758 . -43) (undo-tree-id20759 . -43) (undo-tree-id20760 . -43) (undo-tree-id20761 . -43) (undo-tree-id20762 . -43) (undo-tree-id20763 . -43) (undo-tree-id20764 . -43) (undo-tree-id20765 . -43) (undo-tree-id20766 . -43) (undo-tree-id20767 . -43) (undo-tree-id20768 . -43) (undo-tree-id20769 . -43) (undo-tree-id20770 . -43) (undo-tree-id20771 . -43) (undo-tree-id20772 . -43)) nil (26715 35665 646782 39000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3648) (undo-tree-id20484 . -1) (undo-tree-id20485 . -1) (undo-tree-id20486 . -1) (undo-tree-id20487 . -1) (undo-tree-id20488 . -1) (undo-tree-id20489 . -1) (undo-tree-id20490 . -1) (undo-tree-id20491 . -1) (undo-tree-id20492 . -1) (undo-tree-id20493 . -1) (undo-tree-id20494 . -1) (undo-tree-id20495 . -1) (undo-tree-id20496 . -1) (undo-tree-id20497 . -1) (undo-tree-id20498 . -1) (undo-tree-id20499 . -1) (undo-tree-id20500 . -1) (undo-tree-id20501 . -1) (undo-tree-id20502 . -1) (undo-tree-id20503 . -1) (undo-tree-id20504 . -1) (undo-tree-id20505 . -1) (undo-tree-id20506 . -1) (undo-tree-id20507 . -1) (undo-tree-id20508 . -1) (undo-tree-id20509 . -1) (undo-tree-id20510 . -1) (undo-tree-id20511 . -1) (undo-tree-id20512 . -1) (undo-tree-id20513 . -1) (undo-tree-id20514 . -1) (undo-tree-id20515 . -1) (undo-tree-id20516 . -1) (undo-tree-id20517 . -1) (undo-tree-id20518 . -1) (undo-tree-id20519 . -1) (undo-tree-id20520 . -1) (undo-tree-id20521 . -1) (undo-tree-id20522 . -1) (undo-tree-id20523 . -1) (undo-tree-id20524 . -1) (undo-tree-id20525 . -1) (undo-tree-id20526 . -1) (undo-tree-id20527 . -1) (undo-tree-id20528 . -1) (undo-tree-id20529 . -1) (undo-tree-id20530 . -1) (undo-tree-id20531 . -1) (undo-tree-id20532 . -1) (undo-tree-id20533 . -1) (undo-tree-id20534 . -1) (undo-tree-id20535 . -1) (undo-tree-id20536 . -1) (undo-tree-id20537 . -1) (undo-tree-id20538 . -1) (undo-tree-id20539 . -1) (undo-tree-id20540 . -1) (undo-tree-id20541 . -1) (undo-tree-id20542 . -1) (undo-tree-id20543 . -1) (undo-tree-id20544 . -1) (undo-tree-id20545 . -1) (undo-tree-id20546 . -1) (undo-tree-id20547 . -1) (undo-tree-id20548 . -1) (undo-tree-id20549 . -1) (undo-tree-id20550 . -1) (undo-tree-id20551 . -1) (undo-tree-id20552 . -1) (undo-tree-id20553 . -1) (undo-tree-id20554 . -1) (undo-tree-id20555 . -1) (undo-tree-id20556 . -1) (undo-tree-id20557 . -1) (undo-tree-id20558 . -1) (undo-tree-id20559 . -1) (undo-tree-id20560 . -1) (undo-tree-id20561 . -1) (undo-tree-id20562 . -1) (undo-tree-id20563 . -1) (undo-tree-id20564 . -1) (undo-tree-id20565 . -1) (undo-tree-id20566 . -1) (undo-tree-id20567 . -1) (undo-tree-id20568 . -1) (undo-tree-id20569 . -1) (undo-tree-id20570 . -1) (undo-tree-id20571 . -1) (undo-tree-id20572 . -1) (undo-tree-id20573 . -1) (undo-tree-id20574 . -1) (undo-tree-id20575 . -1) (undo-tree-id20576 . -1) (undo-tree-id20577 . -1) (undo-tree-id20578 . -1) (undo-tree-id20579 . -1) (undo-tree-id20580 . -1) (undo-tree-id20581 . -1) (undo-tree-id20582 . -1) (undo-tree-id20583 . -1) (undo-tree-id20584 . -1) (undo-tree-id20585 . -1) (undo-tree-id20586 . -1) (undo-tree-id20587 . -1) (undo-tree-id20588 . -1) (undo-tree-id20589 . -1) (undo-tree-id20590 . -1) (undo-tree-id20591 . -1) (undo-tree-id20592 . -1) (undo-tree-id20593 . -1) (undo-tree-id20594 . -1) (undo-tree-id20595 . -1) (undo-tree-id20596 . -1) (undo-tree-id20597 . -1) (undo-tree-id20598 . -1) (undo-tree-id20599 . -1) (undo-tree-id20600 . -1) (undo-tree-id20601 . -1) (undo-tree-id20602 . -1) (undo-tree-id20603 . -1) (undo-tree-id20604 . -1) (undo-tree-id20605 . -1) (undo-tree-id20606 . -1) (undo-tree-id20607 . -1) (undo-tree-id20608 . -1) (undo-tree-id20609 . -1) (undo-tree-id20610 . -1) (undo-tree-id20611 . -1) (undo-tree-id20612 . -1) (undo-tree-id20613 . -1) (undo-tree-id20614 . -1) (undo-tree-id20615 . -1) (undo-tree-id20616 . -1) (undo-tree-id20617 . -1) (undo-tree-id20618 . -1) (undo-tree-id20619 . -1) (undo-tree-id20620 . -1) (undo-tree-id20621 . -1) (undo-tree-id20622 . -1) (undo-tree-id20623 . -1) (undo-tree-id20624 . -1) (undo-tree-id20625 . -1) (undo-tree-id20626 . -1) (undo-tree-id20627 . -1) (undo-tree-id20628 . -1) (undo-tree-id20629 . -1) (undo-tree-id20630 . -1) (undo-tree-id20631 . -1) (undo-tree-id20632 . -1) (undo-tree-id20633 . -1) (undo-tree-id20634 . -1) (undo-tree-id20635 . -1) (undo-tree-id20636 . -1) (undo-tree-id20637 . -1) (undo-tree-id20638 . -1) (undo-tree-id20639 . -1) (undo-tree-id20640 . -1) (undo-tree-id20641 . -1) (undo-tree-id20642 . -1) (undo-tree-id20643 . -1) (undo-tree-id20644 . -1) (undo-tree-id20645 . -1) (undo-tree-id20646 . -1) (undo-tree-id20647 . -1) (undo-tree-id20648 . -1) (undo-tree-id20649 . -1) 3649) nil (26715 35665 646585 797000) 0 nil])
([nil nil ((3648 . 3657)) nil (26715 35665 646323 426000) 0 nil])
([nil nil ((nil fontified nil 3699 . 3700) (nil fontified nil 3668 . 3699) (nil fontified nil 3662 . 3668) (nil fontified nil 3658 . 3662) (nil fontified nil 3657 . 3658) (3657 . 3700)) nil (26715 35665 646322 88000) 0 nil])
([nil nil ((3701 . 3709) 3735) nil (26715 35665 646319 883000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3705) (undo-tree-id20482 . -4) (undo-tree-id20483 . -4) 3743) nil (26715 35665 646318 224000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 3740) (undo-tree-id20481 . -1)) nil (26715 35665 646313 763000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3740) (undo-tree-id20480 . -1)) nil (26715 35665 646310 489000) 0 nil])
([nil nil ((apply -12 3701 3897 undo--wrap-and-run-primitive-undo 3701 3897 ((3885 . 3887) (3834 . 3836) (3800 . 3802) (3771 . 3773) (3746 . 3748) (3705 . 3707) 3884))) nil (26715 35665 646307 783000) 0 nil])
([nil nil ((apply 2 3649 3698 undo--wrap-and-run-primitive-undo 3649 3698 ((#("# " 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . -3657) 3649))) nil (26715 35665 646306 704000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -3657) (undo-tree-id20479 . -3) 3653) nil (26715 35665 646305 90000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3653) (undo-tree-id20454 . -4) (undo-tree-id20455 . -4) (undo-tree-id20456 . -4) (undo-tree-id20457 . -4) (undo-tree-id20458 . -4) (undo-tree-id20459 . -4) (undo-tree-id20460 . -4) (undo-tree-id20461 . -4) (undo-tree-id20462 . -4) (undo-tree-id20463 . -4) (undo-tree-id20464 . -4) (undo-tree-id20465 . -4) (undo-tree-id20466 . -4) (undo-tree-id20467 . -4) (undo-tree-id20468 . -4) (undo-tree-id20469 . -4) (undo-tree-id20470 . -4) (undo-tree-id20471 . -4) (undo-tree-id20472 . -4) (undo-tree-id20473 . -4) (undo-tree-id20474 . -4) (undo-tree-id20475 . -4) (undo-tree-id20476 . -4) (undo-tree-id20477 . -4) (undo-tree-id20478 . -4) 3657) nil (26715 35665 646297 996000) 0 nil])
([nil nil ((apply 2 4492 4520 undo--wrap-and-run-primitive-undo 4492 4520 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4496) 4512 (t 26715 35665 668032 587000)))) nil (26715 35816 191965 893000) 0 nil])
([nil nil ((apply -2 4492 4523 undo--wrap-and-run-primitive-undo 4492 4523 ((4496 . 4498) 4492 (t 26715 35816 211556 544000)))) nil (26715 36081 830542 438000) 0 nil])
([nil nil ((#("    # print(\"N:\", N)
    # print(\"len(N):\", len(N))
    # print(\"d:\", d)
    # print(\"c:\", c)
    # print(\"pad101:\", pad101(1600 - c, len(N)))
    # print(\"P: \", P)
    # print(\"len(P):\", len(P))           # should be 1088
    # print(\"n:\", n)                     # should be 1
    # print(\"P_blocks: \", P_blocks)
    # print(\"P_blocks.shape:\", P_blocks.shape)  # should be (1, 1088)
" 0 4 (fontified t) 4 6 (face font-lock-comment-delimiter-face fontified t) 6 11 (face font-lock-comment-face fontified t) 11 12 (face font-lock-comment-face fontified t) 12 16 (face font-lock-comment-face fontified t) 16 18 (face font-lock-comment-face fontified t) 18 21 (face font-lock-comment-face fontified t) 21 25 (fontified t) 25 27 (face font-lock-comment-delimiter-face fontified t) 27 32 (face font-lock-comment-face fontified t) 32 33 (face font-lock-comment-face fontified t) 33 42 (face font-lock-comment-face fontified t) 42 44 (face font-lock-comment-face fontified t) 44 47 (face font-lock-comment-face fontified t) 47 52 (face font-lock-comment-face fontified t) 52 56 (fontified t) 56 58 (face font-lock-comment-delimiter-face fontified t) 58 63 (face font-lock-comment-face fontified t) 63 64 (face font-lock-comment-face fontified t) 64 68 (face font-lock-comment-face fontified t) 68 73 (face font-lock-comment-face fontified t) 73 77 (fontified t) 77 79 (face font-lock-comment-delimiter-face fontified t) 79 84 (face font-lock-comment-face fontified t) 84 85 (face font-lock-comment-face fontified t) 85 89 (face font-lock-comment-face fontified t) 89 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 98 (fontified t) 98 100 (face font-lock-comment-delimiter-face fontified t) 100 105 (face font-lock-comment-face fontified t) 105 106 (face font-lock-comment-face fontified t) 106 115 (face font-lock-comment-face fontified t) 115 117 (face font-lock-comment-face fontified t) 117 129 (face font-lock-comment-face fontified t) 129 130 (face font-lock-comment-face fontified t) 130 134 (face font-lock-comment-face fontified t) 134 137 (face font-lock-comment-face fontified t) 137 142 (face font-lock-comment-face fontified t) 142 143 (face font-lock-comment-face fontified t rear-nonsticky t) 143 147 (fontified t) 147 149 (face font-lock-comment-delimiter-face fontified t) 149 154 (face font-lock-comment-face fontified t) 154 155 (face font-lock-comment-face fontified t) 155 160 (face font-lock-comment-face fontified t) 160 163 (face font-lock-comment-face fontified t) 163 164 (face font-lock-comment-face fontified t) 164 165 (face font-lock-comment-face fontified t rear-nonsticky t) 165 169 (fontified t) 169 171 (face font-lock-comment-delimiter-face fontified t) 171 176 (face font-lock-comment-face fontified t) 176 177 (face font-lock-comment-face fontified t) 177 186 (face font-lock-comment-face fontified t) 186 188 (face font-lock-comment-face fontified t) 188 191 (face font-lock-comment-face fontified t) 191 206 (face font-lock-comment-face fontified t) 206 208 (face font-lock-comment-face fontified t) 208 223 (face font-lock-comment-face fontified t) 223 227 (fontified t) 227 229 (face font-lock-comment-delimiter-face fontified t) 229 234 (face font-lock-comment-face fontified t) 234 235 (face font-lock-comment-face fontified t) 235 239 (face font-lock-comment-face fontified t) 239 264 (face font-lock-comment-face fontified t) 264 266 (face font-lock-comment-face fontified t) 266 278 (face font-lock-comment-face fontified t) 278 282 (fontified t) 282 284 (face font-lock-comment-delimiter-face fontified t) 284 289 (face font-lock-comment-face fontified t) 289 290 (face font-lock-comment-face fontified t) 290 302 (face font-lock-comment-face fontified t) 302 313 (face font-lock-comment-face fontified t) 313 314 (face font-lock-comment-face fontified t rear-nonsticky t) 314 318 (fontified t) 318 320 (face font-lock-comment-delimiter-face fontified t) 320 325 (face font-lock-comment-face fontified t) 325 326 (face font-lock-comment-face fontified t) 326 343 (face font-lock-comment-face fontified t) 343 362 (face font-lock-comment-face fontified t) 362 364 (face font-lock-comment-face fontified t) 364 384 (face font-lock-comment-face fontified t)) . 4471) (undo-tree-id20982 . -384) 4855) nil (26715 36081 830541 917000) 0 nil])
([nil nil ((#("    # print(\"n:\", n)" 0 4 (fontified t) 4 6 (face font-lock-comment-delimiter-face fontified t) 6 11 (face font-lock-comment-face fontified t) 11 12 (face font-lock-comment-face fontified t) 12 16 (face font-lock-comment-face fontified t) 16 20 (face font-lock-comment-face fontified t)) . 4510)) nil (26715 36081 830540 449000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4510)) nil (26715 36081 830539 881000) 0 nil])
([nil nil ((#("        print(\"HEY!!!!\")" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 23 (face font-lock-string-face fontified t) 23 24 (fontified t)) . 4744)) nil (26715 36081 830539 503000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4744)) nil (26715 36081 830631 578000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . -4054) (undo-tree-id20989 . -1) (undo-tree-id20990 . -1) (undo-tree-id20991 . -1) (undo-tree-id20992 . -1) (undo-tree-id20993 . -1) (undo-tree-id20994 . -1) (undo-tree-id20995 . -1) (undo-tree-id20996 . -1) (undo-tree-id20997 . -1) (undo-tree-id20998 . -1) (undo-tree-id20999 . -1) (undo-tree-id21000 . -1) (undo-tree-id21001 . -1) (undo-tree-id21002 . -1) (undo-tree-id21003 . -1) (undo-tree-id21004 . -1) (undo-tree-id21005 . -1) (undo-tree-id21006 . -1) (undo-tree-id21007 . -1) (undo-tree-id21008 . -1) (undo-tree-id21009 . -1) (undo-tree-id21010 . -1) (undo-tree-id21011 . -1) (undo-tree-id21012 . -1) (undo-tree-id21013 . -1) (undo-tree-id21014 . -1) (undo-tree-id21015 . -1) (undo-tree-id21016 . -1) (undo-tree-id21017 . -1) (#(" " 0 1 (fontified t)) . -4055) (undo-tree-id21018 . -1) (undo-tree-id21019 . -1) (undo-tree-id21020 . -1) (undo-tree-id21021 . -1) (undo-tree-id21022 . -1) (undo-tree-id21023 . -1) (undo-tree-id21024 . -1) (undo-tree-id21025 . -1) (undo-tree-id21026 . -1) (undo-tree-id21027 . -1) (undo-tree-id21028 . -1) (undo-tree-id21029 . -1) (undo-tree-id21030 . -1) (undo-tree-id21031 . -1) (undo-tree-id21032 . -1) (undo-tree-id21033 . -1) (undo-tree-id21034 . -1) (undo-tree-id21035 . -1) (undo-tree-id21036 . -1) (undo-tree-id21037 . -1) (undo-tree-id21038 . -1) (undo-tree-id21039 . -1) (undo-tree-id21040 . -1) (undo-tree-id21041 . -1) (#("2" 0 1 (fontified t)) . -4056) (undo-tree-id21042 . -1) (undo-tree-id21043 . -1) (undo-tree-id21044 . -1) (undo-tree-id21045 . -1) (undo-tree-id21046 . -1) (undo-tree-id21047 . -1) (undo-tree-id21048 . -1) (undo-tree-id21049 . -1) (undo-tree-id21050 . -1) (undo-tree-id21051 . -1) (undo-tree-id21052 . -1) (undo-tree-id21053 . -1) (undo-tree-id21054 . -1) (undo-tree-id21055 . -1) (undo-tree-id21056 . -1) (undo-tree-id21057 . -1) (undo-tree-id21058 . -1) (undo-tree-id21059 . -1) 4057 (t 26715 36082 736666 967000)) nil (26715 36093 165222 739000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -4053) (undo-tree-id20978 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -4054) (undo-tree-id20979 . -1) (#(" " 0 1 (fontified t)) . -4055) (undo-tree-id20980 . -1) (#("2" 0 1 (fontified t)) . -4056) (undo-tree-id20981 . -1) 4057) ((4053 . 4057)) (26715 36081 830535 691000) 0 nil])
([nil nil ((4054 . 4055)) nil (26715 36093 165165 742000) 0 nil])
nil
([nil nil ((4055 . 4056)) nil (26715 36093 165165 227000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -4055) (undo-tree-id20983 . -1) (undo-tree-id20984 . -1) (undo-tree-id20985 . -1) (undo-tree-id20986 . -1) (undo-tree-id20987 . -1) (undo-tree-id20988 . -1) 4056) nil (26715 36093 165164 48000) 0 nil])
([nil nil ((4055 . 4057)) nil (26715 36093 165147 448000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -4054) (undo-tree-id21152 . -1) (undo-tree-id21153 . -1) (undo-tree-id21154 . -1) (undo-tree-id21155 . -1) (undo-tree-id21156 . -1) (undo-tree-id21157 . -1) (undo-tree-id21158 . -1) (undo-tree-id21159 . -1) (undo-tree-id21160 . -1) (undo-tree-id21161 . -1) (undo-tree-id21162 . -1) (undo-tree-id21163 . -1) (undo-tree-id21164 . -1) (undo-tree-id21165 . -1) (undo-tree-id21166 . -1) (undo-tree-id21167 . -1) (undo-tree-id21168 . -1) (undo-tree-id21169 . -1) (undo-tree-id21170 . -1) (undo-tree-id21171 . -1) (undo-tree-id21172 . -1) (undo-tree-id21173 . -1) (undo-tree-id21174 . -1) (undo-tree-id21175 . -1) (undo-tree-id21176 . -1) (undo-tree-id21177 . -1) (undo-tree-id21178 . -1) (undo-tree-id21179 . -1) (undo-tree-id21180 . -1) (undo-tree-id21181 . -1) (undo-tree-id21182 . -1) (undo-tree-id21183 . -1) (undo-tree-id21184 . -1) (undo-tree-id21185 . -1) (undo-tree-id21186 . -1) (undo-tree-id21187 . -1) (undo-tree-id21188 . -1) (undo-tree-id21189 . -1) (undo-tree-id21190 . -1) (undo-tree-id21191 . -1) (undo-tree-id21192 . -1) (undo-tree-id21193 . -1) (undo-tree-id21194 . -1) (undo-tree-id21195 . -1) (undo-tree-id21196 . -1) (undo-tree-id21197 . -1) (undo-tree-id21198 . -1) (undo-tree-id21199 . -1) (undo-tree-id21200 . -1) (undo-tree-id21201 . -1) (undo-tree-id21202 . -1) (undo-tree-id21203 . -1) (undo-tree-id21204 . -1) (undo-tree-id21205 . -1) (undo-tree-id21206 . -1) (undo-tree-id21207 . -1) (undo-tree-id21208 . -1) (undo-tree-id21209 . -1) (undo-tree-id21210 . -1) (undo-tree-id21211 . -1) (undo-tree-id21212 . -1) (undo-tree-id21213 . -1) (undo-tree-id21214 . -1) (undo-tree-id21215 . -1) (undo-tree-id21216 . -1) (undo-tree-id21217 . -1) (undo-tree-id21218 . -1) (undo-tree-id21219 . -1) (undo-tree-id21220 . -1) (undo-tree-id21221 . -1) (undo-tree-id21222 . -1) (undo-tree-id21223 . -1) (undo-tree-id21224 . -1) (undo-tree-id21225 . -1) (undo-tree-id21226 . -1) (undo-tree-id21227 . -1) (undo-tree-id21228 . -1) (undo-tree-id21229 . -1) (undo-tree-id21230 . -1) (undo-tree-id21231 . -1) (undo-tree-id21232 . -1) (undo-tree-id21233 . -1) (undo-tree-id21234 . -1) (undo-tree-id21235 . -1) (undo-tree-id21236 . -1) (undo-tree-id21237 . -1) (undo-tree-id21238 . -1) (undo-tree-id21239 . -1) (undo-tree-id21240 . -1) (undo-tree-id21241 . -1) (undo-tree-id21242 . -1) (undo-tree-id21243 . -1) (undo-tree-id21244 . -1) (undo-tree-id21245 . -1) (undo-tree-id21246 . -1) (undo-tree-id21247 . -1) (undo-tree-id21248 . -1) (undo-tree-id21249 . -1) (undo-tree-id21250 . -1) (undo-tree-id21251 . -1) (undo-tree-id21252 . -1) (undo-tree-id21253 . -1) (undo-tree-id21254 . -1) (undo-tree-id21255 . -1) (undo-tree-id21256 . -1) (undo-tree-id21257 . -1) (undo-tree-id21258 . -1) (undo-tree-id21259 . -1) (undo-tree-id21260 . -1) (undo-tree-id21261 . -1) (undo-tree-id21262 . -1) (undo-tree-id21263 . -1) (undo-tree-id21264 . -1) (undo-tree-id21265 . -1) (undo-tree-id21266 . -1) (#(" " 0 1 (fontified t)) . -4055) (undo-tree-id21267 . -1) (undo-tree-id21268 . -1) (undo-tree-id21269 . -1) (undo-tree-id21270 . -1) (undo-tree-id21271 . -1) (undo-tree-id21272 . -1) (undo-tree-id21273 . -1) (undo-tree-id21274 . -1) (undo-tree-id21275 . -1) (undo-tree-id21276 . -1) (undo-tree-id21277 . -1) (undo-tree-id21278 . -1) (undo-tree-id21279 . -1) (undo-tree-id21280 . -1) (undo-tree-id21281 . -1) (undo-tree-id21282 . -1) (undo-tree-id21283 . -1) (undo-tree-id21284 . -1) (undo-tree-id21285 . -1) (undo-tree-id21286 . -1) (undo-tree-id21287 . -1) (undo-tree-id21288 . -1) (undo-tree-id21289 . -1) (undo-tree-id21290 . -1) (undo-tree-id21291 . -1) (undo-tree-id21292 . -1) (undo-tree-id21293 . -1) (undo-tree-id21294 . -1) (undo-tree-id21295 . -1) (undo-tree-id21296 . -1) (undo-tree-id21297 . -1) (undo-tree-id21298 . -1) (undo-tree-id21299 . -1) (undo-tree-id21300 . -1) (undo-tree-id21301 . -1) (undo-tree-id21302 . -1) (undo-tree-id21303 . -1) (undo-tree-id21304 . -1) (undo-tree-id21305 . -1) (undo-tree-id21306 . -1) (undo-tree-id21307 . -1) (undo-tree-id21308 . -1) (undo-tree-id21309 . -1) (undo-tree-id21310 . -1) (undo-tree-id21311 . -1) (undo-tree-id21312 . -1) (undo-tree-id21313 . -1) (undo-tree-id21314 . -1) (undo-tree-id21315 . -1) (undo-tree-id21316 . -1) (undo-tree-id21317 . -1) (undo-tree-id21318 . -1) (undo-tree-id21319 . -1) (undo-tree-id21320 . -1) (undo-tree-id21321 . -1) (undo-tree-id21322 . -1) (undo-tree-id21323 . -1) (undo-tree-id21324 . -1) (undo-tree-id21325 . -1) (undo-tree-id21326 . -1) (undo-tree-id21327 . -1) (undo-tree-id21328 . -1) (undo-tree-id21329 . -1) (undo-tree-id21330 . -1) (undo-tree-id21331 . -1) (undo-tree-id21332 . -1) (undo-tree-id21333 . -1) (undo-tree-id21334 . -1) (undo-tree-id21335 . -1) (undo-tree-id21336 . -1) (undo-tree-id21337 . -1) (undo-tree-id21338 . -1) (undo-tree-id21339 . -1) (undo-tree-id21340 . -1) (undo-tree-id21341 . -1) (undo-tree-id21342 . -1) (undo-tree-id21343 . -1) (undo-tree-id21344 . -1) (undo-tree-id21345 . -1) (undo-tree-id21346 . -1) (undo-tree-id21347 . -1) (undo-tree-id21348 . -1) (undo-tree-id21349 . -1) (undo-tree-id21350 . -1) (undo-tree-id21351 . -1) (undo-tree-id21352 . -1) (undo-tree-id21353 . -1) (undo-tree-id21354 . -1) (undo-tree-id21355 . -1) (undo-tree-id21356 . -1) (undo-tree-id21357 . -1) (undo-tree-id21358 . -1) (undo-tree-id21359 . -1) (undo-tree-id21360 . -1) (undo-tree-id21361 . -1) (undo-tree-id21362 . -1) (undo-tree-id21363 . -1) (undo-tree-id21364 . -1) (undo-tree-id21365 . -1) (undo-tree-id21366 . -1) (undo-tree-id21367 . -1) (undo-tree-id21368 . -1) (undo-tree-id21369 . -1) (undo-tree-id21370 . -1) (undo-tree-id21371 . -1) (#("2" 0 1 (fontified t)) . -4056) (undo-tree-id21372 . -1) (undo-tree-id21373 . -1) (undo-tree-id21374 . -1) (undo-tree-id21375 . -1) (undo-tree-id21376 . -1) (undo-tree-id21377 . -1) (undo-tree-id21378 . -1) (undo-tree-id21379 . -1) (undo-tree-id21380 . -1) (undo-tree-id21381 . -1) (undo-tree-id21382 . -1) (undo-tree-id21383 . -1) (undo-tree-id21384 . -1) (undo-tree-id21385 . -1) (undo-tree-id21386 . -1) (undo-tree-id21387 . -1) (undo-tree-id21388 . -1) (undo-tree-id21389 . -1) (undo-tree-id21390 . -1) (undo-tree-id21391 . -1) (undo-tree-id21392 . -1) (undo-tree-id21393 . -1) (undo-tree-id21394 . -1) (undo-tree-id21395 . -1) (undo-tree-id21396 . -1) (undo-tree-id21397 . -1) (undo-tree-id21398 . -1) (undo-tree-id21399 . -1) (undo-tree-id21400 . -1) (undo-tree-id21401 . -1) (undo-tree-id21402 . -1) (undo-tree-id21403 . -1) (undo-tree-id21404 . -1) (undo-tree-id21405 . -1) (undo-tree-id21406 . -1) (undo-tree-id21407 . -1) (undo-tree-id21408 . -1) (undo-tree-id21409 . -1) (undo-tree-id21410 . -1) (undo-tree-id21411 . -1) (undo-tree-id21412 . -1) (undo-tree-id21413 . -1) (undo-tree-id21414 . -1) (undo-tree-id21415 . -1) (undo-tree-id21416 . -1) (undo-tree-id21417 . -1) (undo-tree-id21418 . -1) (undo-tree-id21419 . -1) (undo-tree-id21420 . -1) (undo-tree-id21421 . -1) (undo-tree-id21422 . -1) (undo-tree-id21423 . -1) (undo-tree-id21424 . -1) (undo-tree-id21425 . -1) (undo-tree-id21426 . -1) (undo-tree-id21427 . -1) (undo-tree-id21428 . -1) (undo-tree-id21429 . -1) (undo-tree-id21430 . -1) (undo-tree-id21431 . -1) (undo-tree-id21432 . -1) (undo-tree-id21433 . -1) (undo-tree-id21434 . -1) (undo-tree-id21435 . -1) (undo-tree-id21436 . -1) (undo-tree-id21437 . -1) (undo-tree-id21438 . -1) (undo-tree-id21439 . -1) (undo-tree-id21440 . -1) (undo-tree-id21441 . -1) (undo-tree-id21442 . -1) (undo-tree-id21443 . -1) (undo-tree-id21444 . -1) (undo-tree-id21445 . -1) (undo-tree-id21446 . -1) (undo-tree-id21447 . -1) (undo-tree-id21448 . -1) (undo-tree-id21449 . -1) (undo-tree-id21450 . -1) (undo-tree-id21451 . -1) (undo-tree-id21452 . -1) (undo-tree-id21453 . -1) (undo-tree-id21454 . -1) (undo-tree-id21455 . -1) (undo-tree-id21456 . -1) (undo-tree-id21457 . -1) (undo-tree-id21458 . -1) (undo-tree-id21459 . -1) (undo-tree-id21460 . -1) (undo-tree-id21461 . -1) (undo-tree-id21462 . -1) (undo-tree-id21463 . -1) (undo-tree-id21464 . -1) (undo-tree-id21465 . -1) (undo-tree-id21466 . -1) (undo-tree-id21467 . -1) (undo-tree-id21468 . -1) (undo-tree-id21469 . -1) (undo-tree-id21470 . -1) 4057 (t 26715 36093 186772 885000)) nil (26715 36151 48071 717000) 0 nil])
([nil nil ((4054 . 4057)) nil (26715 36151 47805 301000) 0 nil])
([nil nil ((4052 . 4055)) nil (26715 36151 47804 808000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4052) (undo-tree-id21100 . -1) (undo-tree-id21101 . -1) (undo-tree-id21102 . -1) (undo-tree-id21103 . -1) (undo-tree-id21104 . -1) (undo-tree-id21105 . -1) (undo-tree-id21106 . -1) (undo-tree-id21107 . -1) (undo-tree-id21108 . -1) (undo-tree-id21109 . -1) (undo-tree-id21110 . -1) (undo-tree-id21111 . -1) (undo-tree-id21112 . -1) (undo-tree-id21113 . -1) (undo-tree-id21114 . -1) (undo-tree-id21115 . -1) (undo-tree-id21116 . -1) (undo-tree-id21117 . -1) (undo-tree-id21118 . -1) (undo-tree-id21119 . -1) (undo-tree-id21120 . -1) (undo-tree-id21121 . -1) (undo-tree-id21122 . -1) (undo-tree-id21123 . -1) (undo-tree-id21124 . -1) (undo-tree-id21125 . -1) (undo-tree-id21126 . -1) (undo-tree-id21127 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -4053) (undo-tree-id21128 . -1) (undo-tree-id21129 . -1) (undo-tree-id21130 . -1) (undo-tree-id21131 . -1) (undo-tree-id21132 . -1) (undo-tree-id21133 . -1) (undo-tree-id21134 . -1) (undo-tree-id21135 . -1) (undo-tree-id21136 . -1) (undo-tree-id21137 . -1) (undo-tree-id21138 . -1) (undo-tree-id21139 . -1) (undo-tree-id21140 . -1) (undo-tree-id21141 . -1) (undo-tree-id21142 . -1) (undo-tree-id21143 . -1) (undo-tree-id21144 . -1) (#(" " 0 1 (fontified t)) . -4054) (undo-tree-id21145 . -1) (undo-tree-id21146 . -1) (undo-tree-id21147 . -1) (undo-tree-id21148 . -1) (undo-tree-id21149 . -1) (undo-tree-id21150 . -1) (undo-tree-id21151 . -1) 4055) nil (26715 36160 984177 443000) 0 nil])
([nil nil ((3648 . 3657) (t 26715 36162 48505 468000)) nil (26715 36813 519688 480000) 0 nil] [nil nil ((4052 . 4054)) ((#("- " 0 1 (face font-lock-operator-face fontified t) 1 2 (fontified t)) . 4052)) (26715 36160 684111 261000) 0 nil])
([nil nil ((3657 . 3665)) nil (26715 36813 519687 960000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . -4056) (undo-tree-id21094 . -1) (undo-tree-id21095 . -1) (undo-tree-id21096 . -1) (undo-tree-id21097 . -1) (undo-tree-id21098 . -1) (undo-tree-id21099 . -1) 4057) ((4056 . 4057)) (26715 36160 341486 869000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3663) (undo-tree-id21512 . -1) (undo-tree-id21513 . -1) (undo-tree-id21514 . -1) (undo-tree-id21515 . -1) (undo-tree-id21516 . -1) (undo-tree-id21517 . -1) (undo-tree-id21518 . -1) (undo-tree-id21519 . -1) (undo-tree-id21520 . -1) (undo-tree-id21521 . -1) (undo-tree-id21522 . -1) (undo-tree-id21523 . -1) (undo-tree-id21524 . -1) (undo-tree-id21525 . -1) (undo-tree-id21526 . -1) (undo-tree-id21527 . -1) (undo-tree-id21528 . -1) (undo-tree-id21529 . -1) (undo-tree-id21530 . -1) (undo-tree-id21531 . -1) (undo-tree-id21532 . -1) (undo-tree-id21533 . -1) (undo-tree-id21534 . -1) (#(")" 0 1 (fontified t)) . -3664) (undo-tree-id21535 . -1) (undo-tree-id21536 . -1) (undo-tree-id21537 . -1) (undo-tree-id21538 . -1) (undo-tree-id21539 . -1) (undo-tree-id21540 . -1) (undo-tree-id21541 . -1) (undo-tree-id21542 . -1) (undo-tree-id21543 . -1) (undo-tree-id21544 . -1) (undo-tree-id21545 . -1) (undo-tree-id21546 . -1) (undo-tree-id21547 . -1) 3665) nil (26715 36813 519686 346000) 0 nil])
([nil nil ((4056 . 4057)) ((#("-" 0 1 (face font-lock-operator-face fontified t)) . 4056)) (26715 36160 14954 967000) 0 nil])
([nil nil ((3663 . 3665)) nil (26715 36813 519657 752000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -4047) (undo-tree-id21060 . -1) (undo-tree-id21061 . -1) (undo-tree-id21062 . -1) (undo-tree-id21063 . -1) (undo-tree-id21064 . -1) (undo-tree-id21065 . -1) (undo-tree-id21066 . -1) (undo-tree-id21067 . -1) (undo-tree-id21068 . -1) (undo-tree-id21069 . -1) (undo-tree-id21070 . -1) (undo-tree-id21071 . -1) (undo-tree-id21072 . -1) (undo-tree-id21073 . -1) (undo-tree-id21074 . -1) (undo-tree-id21075 . -1) (#(" " 0 1 (fontified t)) . -4048) (undo-tree-id21076 . -1) (undo-tree-id21077 . -1) (undo-tree-id21078 . -1) (undo-tree-id21079 . -1) (undo-tree-id21080 . -1) (undo-tree-id21081 . -1) (undo-tree-id21082 . -1) (undo-tree-id21083 . -1) (undo-tree-id21084 . -1) (undo-tree-id21085 . -1) (undo-tree-id21086 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -4049) (undo-tree-id21087 . -1) (undo-tree-id21088 . -1) (undo-tree-id21089 . -1) (undo-tree-id21090 . -1) (undo-tree-id21091 . -1) (undo-tree-id21092 . -1) (#(" " 0 1 (fontified t)) . -4050) (undo-tree-id21093 . -1) 4051) ((4047 . 4051) (t 26715 36151 70384 823000)) (26715 36151 47745 643000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3653) (undo-tree-id21502 . -4) (undo-tree-id21503 . -4) (undo-tree-id21504 . -4) (undo-tree-id21505 . -4) (undo-tree-id21506 . -4) (undo-tree-id21507 . -4) (undo-tree-id21508 . -4) (undo-tree-id21509 . -4) (undo-tree-id21510 . -4) (undo-tree-id21511 . -4) 3665) nil (26715 36813 519656 977000) 0 nil])
nil
([nil nil ((#("    return flip_bits_per_byte(A.flatten())" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 41 (fontified t) 41 42 (fontified t rear-nonsticky t)) . 3662) (undo-tree-id21473 . -4) (undo-tree-id21474 . -40) (undo-tree-id21475 . -40) (undo-tree-id21476 . -40) (undo-tree-id21477 . -40) (undo-tree-id21478 . -40) (undo-tree-id21479 . -40) (undo-tree-id21480 . -40) (undo-tree-id21481 . -40) (undo-tree-id21482 . -40) (undo-tree-id21483 . -40) (undo-tree-id21484 . -40) (undo-tree-id21485 . -12) (undo-tree-id21486 . -12) (undo-tree-id21487 . -12) (undo-tree-id21488 . -12) (undo-tree-id21489 . -12) (undo-tree-id21490 . -12) (undo-tree-id21491 . -12) (undo-tree-id21492 . -12) (undo-tree-id21493 . -12) (undo-tree-id21494 . -12) (undo-tree-id21495 . -12) (undo-tree-id21496 . -42) (undo-tree-id21497 . -42) (undo-tree-id21498 . -42) (undo-tree-id21499 . -42) (undo-tree-id21500 . -42) (undo-tree-id21501 . -42)) nil (26715 36813 519646 915000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3662) (undo-tree-id21471 . -1) (undo-tree-id21472 . -1)) nil (26715 36813 519625 195000) 0 nil])
([nil nil ((apply 12 3662 3845 undo--wrap-and-run-primitive-undo 3662 3845 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3836) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3787) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3755) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3728) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3705) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3666) 3857))) nil (26715 36813 519611 993000) 0 nil])
([nil nil ((3660 . 3666) (t 26715 36813 544373 553000)) nil (26715 36875 822731 621000) 0 nil])
([nil nil ((3659 . 3670) (t 26715 36875 842332 321000)) nil (26715 36899 985650 516000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3669) (undo-tree-id21549 . -1) 3670) nil (26715 36899 985649 973000) 0 nil])
([nil nil ((3669 . 3672)) nil (26715 36899 985648 853000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3671) (undo-tree-id21548 . -1) 3672) nil (26715 36899 985647 724000) 0 nil])
([nil nil ((3679 . 3684)) nil (26715 36899 985640 145000) 0 nil])
([nil nil ((3684 . 3697)) nil (26715 36899 985636 113000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3692) (undo-tree-id21556 . -1) (undo-tree-id21557 . -1) (undo-tree-id21558 . -1) (undo-tree-id21559 . -1) (undo-tree-id21560 . -1) (undo-tree-id21561 . -1) (undo-tree-id21562 . -1) (#(":" 0 1 (fontified t)) . -3693) (undo-tree-id21563 . -1) 3694 (t 26715 36900 6707 267000)) nil (26715 36909 113554 923000) 0 nil])
([nil nil ((3692 . 3693)) nil (26715 36909 113548 647000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3692) (undo-tree-id21550 . -1) (undo-tree-id21551 . -1) (undo-tree-id21552 . -1) (undo-tree-id21553 . -1) (undo-tree-id21554 . -1) (undo-tree-id21555 . -1) 3693) nil (26715 36909 113547 304000) 0 nil])
([nil nil ((3692 . 3696)) nil (26715 36909 113530 12000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3695) (undo-tree-id21564 . -1) (undo-tree-id21565 . -1) (undo-tree-id21566 . -1) (undo-tree-id21567 . -1) (undo-tree-id21568 . -1) (undo-tree-id21569 . -1) (undo-tree-id21570 . -1) (undo-tree-id21571 . -1) 3696 (t 26715 36909 134849 318000)) nil (26715 36909 831922 90000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3587) (undo-tree-id21572 . -1) (undo-tree-id21573 . -1) (undo-tree-id21574 . -1) (undo-tree-id21575 . -1) (undo-tree-id21576 . -1) (undo-tree-id21577 . -1) (undo-tree-id21578 . -1) (undo-tree-id21579 . -1) (undo-tree-id21580 . -1) (undo-tree-id21581 . -1) (undo-tree-id21582 . -1) (undo-tree-id21583 . -1) (undo-tree-id21584 . -1) (undo-tree-id21585 . -1) (undo-tree-id21586 . -1) (undo-tree-id21587 . -1) (undo-tree-id21588 . -1) (undo-tree-id21589 . -1) (undo-tree-id21590 . -1) (undo-tree-id21591 . -1) (undo-tree-id21592 . -1) (undo-tree-id21593 . -1) (undo-tree-id21594 . -1) (undo-tree-id21595 . -1) (undo-tree-id21596 . -1) (undo-tree-id21597 . -1) (undo-tree-id21598 . -1) (undo-tree-id21599 . -1) (undo-tree-id21600 . -1) (undo-tree-id21601 . -1) (undo-tree-id21602 . -1) (undo-tree-id21603 . -1) (undo-tree-id21604 . -1) (undo-tree-id21605 . -1) (undo-tree-id21606 . -1) (undo-tree-id21607 . -1) (#("," 0 1 (fontified t)) . -3588) (undo-tree-id21608 . -1) (undo-tree-id21609 . -1) (undo-tree-id21610 . -1) (undo-tree-id21611 . -1) (undo-tree-id21612 . -1) (undo-tree-id21613 . -1) (undo-tree-id21614 . -1) (undo-tree-id21615 . -1) (undo-tree-id21616 . -1) (undo-tree-id21617 . -1) (undo-tree-id21618 . -1) (undo-tree-id21619 . -1) (undo-tree-id21620 . -1) (undo-tree-id21621 . -1) (undo-tree-id21622 . -1) (undo-tree-id21623 . -1) (undo-tree-id21624 . -1) (undo-tree-id21625 . -1) (undo-tree-id21626 . -1) (undo-tree-id21627 . -1) (undo-tree-id21628 . -1) (undo-tree-id21629 . -1) (undo-tree-id21630 . -1) (undo-tree-id21631 . -1) (undo-tree-id21632 . -1) (undo-tree-id21633 . -1) (undo-tree-id21634 . -1) (undo-tree-id21635 . -1) (undo-tree-id21636 . -1) (undo-tree-id21637 . -1) (undo-tree-id21638 . -1) (#(" " 0 1 (fontified t)) . -3589) (undo-tree-id21639 . -1) (undo-tree-id21640 . -1) (undo-tree-id21641 . -1) (undo-tree-id21642 . -1) (undo-tree-id21643 . -1) (undo-tree-id21644 . -1) (undo-tree-id21645 . -1) (undo-tree-id21646 . -1) (undo-tree-id21647 . -1) (undo-tree-id21648 . -1) (undo-tree-id21649 . -1) (undo-tree-id21650 . -1) (undo-tree-id21651 . -1) (undo-tree-id21652 . -1) (undo-tree-id21653 . -1) (undo-tree-id21654 . -1) (undo-tree-id21655 . -1) (undo-tree-id21656 . -1) (undo-tree-id21657 . -1) (undo-tree-id21658 . -1) (undo-tree-id21659 . -1) (undo-tree-id21660 . -1) (undo-tree-id21661 . -1) (undo-tree-id21662 . -1) (undo-tree-id21663 . -1) 3590 (t 26715 36909 853860 517000)) nil (26715 37636 630075 787000) 0 nil])
([nil nil ((#("    print(\"A[0][0]:\", A[0][0])
    print(\"A:\", A)
" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 20 (face font-lock-string-face fontified t) 20 22 (fontified t) 22 31 (fontified t) 31 35 (fontified t) 35 40 (face font-lock-builtin-face fontified t) 40 41 (fontified t) 41 45 (face font-lock-string-face fontified t) 45 46 (fontified t) 46 49 (fontified t) 49 50 (fontified t)) . -3646) (undo-tree-id21664 . -50) (undo-tree-id21665 . -50) (undo-tree-id21666 . -50) (undo-tree-id21667 . -49) (undo-tree-id21668 . -49) (undo-tree-id21669 . -49) (undo-tree-id21670 . -49) (undo-tree-id21671 . -49) (undo-tree-id21672 . -49) (undo-tree-id21673 . -49) (undo-tree-id21674 . -49) (undo-tree-id21675 . -49) (undo-tree-id21676 . -49) (undo-tree-id21677 . -49) (undo-tree-id21678 . -49) (undo-tree-id21679 . -49) (undo-tree-id21680 . -49) (undo-tree-id21681 . -49) (undo-tree-id21682 . -49) (undo-tree-id21683 . -49) (undo-tree-id21684 . -49) (undo-tree-id21685 . -49) (undo-tree-id21686 . -49) (undo-tree-id21687 . -49) (undo-tree-id21688 . -49) (undo-tree-id21689 . -49) (undo-tree-id21690 . -49) (undo-tree-id21691 . -49) (undo-tree-id21692 . -49) (undo-tree-id21693 . -49) (undo-tree-id21694 . -49) (undo-tree-id21695 . -49) (undo-tree-id21696 . -49) (undo-tree-id21697 . -49) (undo-tree-id21698 . -49) (undo-tree-id21699 . -49) (undo-tree-id21700 . -49) (undo-tree-id21701 . -49) (undo-tree-id21702 . -49) (undo-tree-id21703 . -49) (undo-tree-id21704 . -49) (undo-tree-id21705 . -49) (undo-tree-id21706 . -49) (undo-tree-id21707 . -49) (undo-tree-id21708 . -49) (undo-tree-id21709 . -49) (undo-tree-id21710 . -49) (undo-tree-id21711 . -49) (undo-tree-id21712 . -49) (undo-tree-id21713 . -49) (undo-tree-id21714 . -49) (undo-tree-id21715 . -49) (undo-tree-id21716 . -49) (undo-tree-id21717 . -49) (undo-tree-id21718 . -49) (undo-tree-id21719 . -49) (undo-tree-id21720 . -49) (undo-tree-id21721 . -49) (undo-tree-id21722 . -49) (undo-tree-id21723 . -49) (undo-tree-id21724 . -49) (undo-tree-id21725 . -49) (undo-tree-id21726 . -49) (undo-tree-id21727 . -49) (undo-tree-id21728 . -49) (undo-tree-id21729 . -49) (undo-tree-id21730 . -49) (undo-tree-id21731 . -49) (undo-tree-id21732 . -49) (undo-tree-id21733 . -49) (undo-tree-id21734 . -49) (undo-tree-id21735 . -49) (undo-tree-id21736 . -49) (undo-tree-id21737 . -49) (undo-tree-id21738 . -49) (undo-tree-id21739 . -49) (undo-tree-id21740 . -49) (undo-tree-id21741 . -49) (undo-tree-id21742 . -49) (undo-tree-id21743 . -49) (undo-tree-id21744 . -49) (undo-tree-id21745 . -49) (undo-tree-id21746 . -49) (undo-tree-id21747 . -49) (undo-tree-id21748 . -49) (undo-tree-id21749 . -49) (undo-tree-id21750 . -49) (undo-tree-id21751 . -49) (undo-tree-id21752 . -49) (undo-tree-id21753 . -49) (undo-tree-id21754 . -49) (undo-tree-id21755 . -49) (undo-tree-id21756 . -49) (undo-tree-id21757 . -49) (undo-tree-id21758 . -49) (undo-tree-id21759 . -49) (undo-tree-id21760 . -49) (undo-tree-id21761 . -49) (undo-tree-id21762 . -49) (undo-tree-id21763 . -49) (undo-tree-id21764 . -49) (undo-tree-id21765 . -49) (undo-tree-id21766 . -49) (undo-tree-id21767 . -18) (undo-tree-id21768 . -18) (undo-tree-id21769 . -18) (undo-tree-id21770 . -18) (undo-tree-id21771 . -18) (undo-tree-id21772 . -18) (undo-tree-id21773 . -18) (undo-tree-id21774 . -18) (undo-tree-id21775 . -18) (undo-tree-id21776 . -18) (undo-tree-id21777 . -18) (undo-tree-id21778 . -31) (undo-tree-id21779 . -31) (undo-tree-id21780 . -31) (undo-tree-id21781 . -31) (undo-tree-id21782 . -31) (undo-tree-id21783 . -31) (undo-tree-id21784 . -31) (undo-tree-id21785 . -50) (undo-tree-id21786 . -50) (undo-tree-id21787 . -50) (undo-tree-id21788 . -50) (undo-tree-id21789 . -50) (undo-tree-id21790 . -50) (undo-tree-id21791 . -50) 3696 (t 26715 37636 649205 34000)) nil (26715 37715 318946 474000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3857 . 3858) (nil fontified nil 3685 . 3858) (3685 . 3858) (t 26715 37715 339025 800000)) nil (26715 38252 476976 588000) 0 nil])
([nil nil ((apply -10 3858 4013 undo--wrap-and-run-primitive-undo 3858 4013 ((4001 . 4003) (3950 . 3952) (3916 . 3918) (3887 . 3889) (3862 . 3864) 4002))) nil (26715 38252 476975 613000) 0 nil])
([nil nil ((3835 . 3839) (3809 . 3813) (#("    " 0 4 (fontified nil)) . -3787) (3779 . 3787) (#("    " 0 4 (fontified nil)) . -3756) (3748 . 3756) (#("    " 0 4 (fontified nil)) . -3727) (3719 . 3727) (3685 . 3689) 3858) nil (26715 38252 476970 377000) 0 nil])
([nil nil ((#("vector" 0 6 (fontified t)) . -3874) (undo-tree-id21819 . -2) (undo-tree-id21820 . -2) (undo-tree-id21821 . -2) (undo-tree-id21822 . -2) (undo-tree-id21823 . -2) (undo-tree-id21824 . -2) (undo-tree-id21825 . -2) (undo-tree-id21826 . -2) (undo-tree-id21827 . -2) (undo-tree-id21828 . -2) (undo-tree-id21829 . -2) (undo-tree-id21830 . -2) (undo-tree-id21831 . -2) (undo-tree-id21832 . -2) (undo-tree-id21833 . -2) (undo-tree-id21834 . -6) (undo-tree-id21835 . -6) (undo-tree-id21836 . -6) (undo-tree-id21837 . -6) (undo-tree-id21838 . -6) (undo-tree-id21839 . -6) 3880 (t 26715 38252 498650 202000)) nil (26715 38265 412067 474000) 0 nil])
([nil nil ((#("state_" 0 6 (fontified t)) . -3868) (undo-tree-id21792 . -6) (undo-tree-id21793 . -6) (undo-tree-id21794 . -6) (undo-tree-id21795 . -6) (undo-tree-id21796 . -6) (undo-tree-id21797 . -6) (undo-tree-id21798 . -6) (undo-tree-id21799 . -6) (undo-tree-id21800 . -6) (undo-tree-id21801 . -6) (undo-tree-id21802 . -6) (undo-tree-id21803 . -6) (undo-tree-id21804 . -6) (undo-tree-id21805 . -6) (undo-tree-id21806 . -6) (undo-tree-id21807 . -6) (undo-tree-id21808 . -6) (undo-tree-id21809 . -6) (undo-tree-id21810 . -6) (undo-tree-id21811 . -6) (undo-tree-id21812 . -6) (undo-tree-id21813 . -6) (undo-tree-id21814 . -6) (undo-tree-id21815 . -6) (undo-tree-id21816 . -6) (undo-tree-id21817 . -6) (undo-tree-id21818 . -6) 3874) nil (26715 38265 412055 806000) 0 nil])
([nil nil ((3868 . 3869)) nil (26715 38265 412029 514000) 0 nil])
([nil nil ((#("    S = numpy.zeros((1600), dtype=int)" 0 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 33 (fontified t) 33 34 (face font-lock-operator-face fontified t) 34 37 (face font-lock-builtin-face fontified t) 37 38 (fontified t)) . 3646) (undo-tree-id21841 . -26) (undo-tree-id21842 . -34) (undo-tree-id21843 . -34) (undo-tree-id21844 . -34) (undo-tree-id21845 . -34) (undo-tree-id21846 . -34) (undo-tree-id21847 . -34) (undo-tree-id21848 . -34) (undo-tree-id21849 . -34) (undo-tree-id21850 . -34) (undo-tree-id21851 . -34) (undo-tree-id21852 . -38) (undo-tree-id21853 . -38) (undo-tree-id21854 . -38) (undo-tree-id21855 . -26) (undo-tree-id21856 . -38) (undo-tree-id21857 . -38) (undo-tree-id21858 . -38) (t 26715 38265 433729 932000)) nil (26715 38293 386551 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3870 . 3871) (nil fontified nil 3870 . 3871) (nil fontified nil 3867 . 3870) (nil fontified nil 3866 . 3867) (nil fontified nil 3840 . 3866) (nil fontified nil 3839 . 3840) (nil fontified nil 3838 . 3839) (nil fontified nil 3837 . 3838) (nil fontified nil 3833 . 3837) (3833 . 3871)) nil (26715 38293 386521 818000) 0 nil])
([nil nil ((3871 . 3872)) nil (26715 38293 386519 747000) 0 nil])
([nil nil ((3837 . 3839)) nil (26715 38293 386518 786000) 0 nil])
([nil nil ((3874 . 3875)) nil (26715 38293 386517 975000) 0 nil])
([nil nil ((3874 . 3875)) nil (26715 38293 386517 135000) 0 nil])
([nil nil ((3874 . 3878) 3875) nil (26715 38293 386515 963000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -3834) (undo-tree-id21840 . -4) (3833 . 3834)) nil (26715 38293 386512 293000) 0 nil])
([nil nil ((#("np" 0 2 (fontified t)) . -3722) (undo-tree-id21859 . -2) (undo-tree-id21860 . -2) (undo-tree-id21861 . -2) (undo-tree-id21862 . -2) (undo-tree-id21863 . -2) (undo-tree-id21864 . -2) (undo-tree-id21865 . -2) 3724 (t 26715 38293 406906 691000)) nil (26715 38299 627440 197000) 0 nil])
([nil nil ((3722 . 3727)) nil (26715 38299 627423 550000) 0 nil])
([nil nil ((#("
    def reverse_bits_in_bytes(A):
        A = A.reshape(-1, 8)
        A = numpy.flip(A, axis=1)
        return A.reshape(-1)

    # At end of keccak_f:
    return reverse_bits_in_bytes(A)" 0 1 (fontified t) 1 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 30 (face font-lock-function-name-face fontified t) 30 43 (fontified t) 43 44 (face font-lock-variable-name-face fontified t) 44 45 (fontified t) 45 46 (face font-lock-operator-face fontified t) 46 57 (fontified t) 57 58 (face font-lock-operator-face fontified t) 58 64 (fontified t) 64 72 (fontified t) 72 73 (face font-lock-variable-name-face fontified t) 73 74 (fontified t) 74 75 (face font-lock-operator-face fontified t) 75 94 (fontified t) 94 95 (face font-lock-operator-face fontified t) 95 98 (fontified t) 98 106 (fontified t) 106 112 (face font-lock-keyword-face fontified t) 112 123 (fontified t) 123 124 (face font-lock-operator-face fontified t) 124 127 (fontified t) 127 128 (fontified t) 128 132 (fontified t) 132 134 (face font-lock-comment-delimiter-face fontified t) 134 154 (face font-lock-comment-face fontified t) 154 158 (fontified t) 158 164 (face font-lock-keyword-face fontified t) 164 189 (fontified t)) . 3646) (undo-tree-id21867 . -189) (undo-tree-id21868 . -1) (undo-tree-id21869 . -1) (undo-tree-id21870 . -127) (t 26715 38299 646946 905000)) nil (26715 39200 984865 203000) 0 nil])
([nil nil ((3648 . 3656)) nil (26715 39200 984851 395000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3652) (undo-tree-id21866 . -4) 3656) nil (26715 39200 984850 67000) 0 nil])
([nil nil ((apply 13 3648 3836 undo--wrap-and-run-primitive-undo 3648 3836 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3827) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3778) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3746) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3719) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3696) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3691) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3652) 3849))) nil (26715 39200 984838 269000) 0 nil])
([nil nil ((1175 . 1176) (t 26715 39201 6166 385000)) nil (26715 39853 122100 625000) 0 nil])
([nil nil ((1176 . 1177)) nil (26715 39853 122100 129000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1176) (undo-tree-id21971 . -1) 1177) nil (26715 39853 122099 508000) 0 nil])
([nil nil ((1176 . 1177)) nil (26715 39853 122098 478000) 0 nil])
([nil nil ((1177 . 1185)) nil (26715 39853 122098 95000) 0 nil])
([nil nil ((#("gen_" 0 4 (face font-lock-function-name-face fontified t)) . -1181) (undo-tree-id21970 . -4) 1185) nil (26715 39853 122097 228000) 0 nil])
([nil nil ((1181 . 1202)) nil (26715 39853 122094 998000) 0 nil])
([nil nil ((1202 . 1204)) nil (26715 39853 122094 647000) 0 nil])
([nil nil ((1204 . 1209)) nil (26715 39853 122094 227000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1338 . 1339) (nil fontified nil 1336 . 1339) (nil fontified nil 1328 . 1336) (nil fontified nil 1327 . 1328) (nil fontified nil 1325 . 1327) (nil fontified nil 1323 . 1325) (nil fontified nil 1322 . 1323) (nil fontified nil 1319 . 1322) (nil fontified nil 1318 . 1319) (nil fontified nil 1316 . 1318) (nil fontified nil 1315 . 1316) (nil fontified nil 1312 . 1315) (nil fontified nil 1311 . 1312) (nil fontified nil 1310 . 1311) (nil fontified nil 1308 . 1310) (nil fontified nil 1307 . 1308) (nil fontified nil 1295 . 1307) (nil fontified nil 1291 . 1295) (nil fontified nil 1285 . 1291) (nil fontified nil 1280 . 1285) (nil fontified nil 1279 . 1280) (nil fontified nil 1277 . 1279) (nil fontified nil 1274 . 1277) (nil fontified nil 1271 . 1274) (nil fontified nil 1263 . 1271) (nil fontified nil 1259 . 1263) (nil fontified nil 1254 . 1259) (nil fontified nil 1249 . 1254) (nil fontified nil 1248 . 1249) (nil fontified nil 1246 . 1248) (nil fontified nil 1243 . 1246) (nil fontified nil 1240 . 1243) (nil fontified nil 1236 . 1240) (nil fontified nil 1232 . 1236) (nil fontified nil 1228 . 1232) (nil fontified nil 1227 . 1228) (nil fontified nil 1222 . 1227) (nil fontified nil 1221 . 1222) (nil fontified nil 1219 . 1221) (nil fontified nil 1216 . 1219) (nil fontified nil 1213 . 1216) (nil fontified nil 1209 . 1213) (1209 . 1339)) nil (26715 39853 122092 907000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1209) 1205) nil (26715 39853 122088 966000) 0 nil])
([nil nil ((1204 . 1209)) nil (26715 39853 122088 498000) 0 nil])
([nil nil ((1209 . 1217)) nil (26715 39853 122088 8000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1216) (undo-tree-id21969 . -1) 1217) nil (26715 39853 122087 442000) 0 nil])
([nil nil ((1216 . 1219)) nil (26715 39853 122086 150000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1218) (undo-tree-id21968 . -1) 1219) nil (26715 39853 122085 519000) 0 nil])
([nil nil ((1218 . 1220)) nil (26715 39853 122084 364000) 0 nil])
([nil nil ((1220 . 1227)) nil (26715 39853 122083 788000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1225) (undo-tree-id21966 . -1) (#("(" 0 1 (fontified t)) . -1226) (undo-tree-id21967 . -1) 1227) nil (26715 39853 122083 149000) 0 nil])
([nil nil ((1225 . 1237)) nil (26715 39853 122081 194000) 0 nil])
([nil nil ((1237 . 1242)) nil (26715 39853 122080 773000) 0 nil])
([nil nil ((1242 . 1246)) nil (26715 39853 122080 342000) 0 nil])
([nil nil ((1246 . 1253)) nil (26715 39853 122079 816000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1251) (undo-tree-id21964 . -1) (#("s" 0 1 (fontified t)) . -1252) (undo-tree-id21965 . -1) 1253) nil (26715 39853 122079 174000) 0 nil])
([nil nil ((1251 . 1267)) nil (26715 39853 122077 26000) 0 nil])
([nil nil ((#("shep" 0 4 (fontified t)) . -1263) (undo-tree-id21943 . -1) (undo-tree-id21944 . -1) (undo-tree-id21945 . -1) (undo-tree-id21946 . -1) (undo-tree-id21947 . -1) (undo-tree-id21948 . -2) (undo-tree-id21949 . -2) (undo-tree-id21950 . -2) (undo-tree-id21951 . -2) (undo-tree-id21952 . -2) (undo-tree-id21953 . -3) (undo-tree-id21954 . -3) (undo-tree-id21955 . -3) (undo-tree-id21956 . -3) (undo-tree-id21957 . -3) (undo-tree-id21958 . -4) (undo-tree-id21959 . -4) (undo-tree-id21960 . -4) (undo-tree-id21961 . -4) (undo-tree-id21962 . -4) (undo-tree-id21963 . -4) 1267) nil (26715 39853 122075 518000) 0 nil])
([nil nil ((1263 . 1269)) nil (26715 39853 122059 136000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . -1268) (undo-tree-id21937 . -1) (undo-tree-id21938 . -1) (undo-tree-id21939 . -1) (undo-tree-id21940 . -1) (undo-tree-id21941 . -1) (undo-tree-id21942 . -1) 1269) nil (26715 39853 122058 82000) 0 nil])
([nil nil ((1268 . 1273)) nil (26715 39853 122052 625000) 0 nil])
([nil nil ((1404 . 1421)) nil (26715 39853 122051 953000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1417) (undo-tree-id21922 . -4) (undo-tree-id21923 . -4) (undo-tree-id21924 . -4) (undo-tree-id21925 . -4) (undo-tree-id21926 . -4) (undo-tree-id21927 . -4) (undo-tree-id21928 . -4) (undo-tree-id21929 . -4) (undo-tree-id21930 . -4) (undo-tree-id21931 . -4) (undo-tree-id21932 . -4) (undo-tree-id21933 . -4) (undo-tree-id21934 . -4) (undo-tree-id21935 . -4) (undo-tree-id21936 . -4) 1421) nil (26715 39853 122050 983000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1413) (undo-tree-id21900 . -4) (undo-tree-id21901 . -4) (undo-tree-id21902 . -4) (undo-tree-id21903 . -4) (undo-tree-id21904 . -4) (undo-tree-id21905 . -4) (undo-tree-id21906 . -4) (undo-tree-id21907 . -4) (undo-tree-id21908 . -4) (undo-tree-id21909 . -4) (undo-tree-id21910 . -4) (undo-tree-id21911 . -4) (undo-tree-id21912 . -4) (undo-tree-id21913 . -4) (undo-tree-id21914 . -4) (undo-tree-id21915 . -4) (undo-tree-id21916 . -4) (undo-tree-id21917 . -4) (undo-tree-id21918 . -4) (undo-tree-id21919 . -4) (undo-tree-id21920 . -4) (undo-tree-id21921 . -4) 1417) nil (26715 39853 122039 211000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1409) (undo-tree-id21871 . -4) (undo-tree-id21872 . -4) (undo-tree-id21873 . -4) (undo-tree-id21874 . -4) (undo-tree-id21875 . -4) (undo-tree-id21876 . -4) (undo-tree-id21877 . -4) (undo-tree-id21878 . -4) (undo-tree-id21879 . -4) (undo-tree-id21880 . -4) (undo-tree-id21881 . -4) (undo-tree-id21882 . -4) (undo-tree-id21883 . -4) (undo-tree-id21884 . -4) (undo-tree-id21885 . -4) (undo-tree-id21886 . -4) (undo-tree-id21887 . -4) (undo-tree-id21888 . -4) (undo-tree-id21889 . -4) (undo-tree-id21890 . -4) (undo-tree-id21891 . -4) (undo-tree-id21892 . -4) (undo-tree-id21893 . -4) (undo-tree-id21894 . -4) (undo-tree-id21895 . -4) (undo-tree-id21896 . -4) (undo-tree-id21897 . -4) (undo-tree-id21898 . -4) (undo-tree-id21899 . -4) 1413) nil (26715 39853 122017 967000) 0 nil])
([nil nil ((1409 . 1417)) nil (26715 39853 121982 800000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -4076) (undo-tree-id22154 . -1) 4077 (t 26715 39853 144213 51000)) nil (26715 39879 419239 688000) 0 nil])
([nil nil ((4076 . 4088)) nil (26715 39879 419236 592000) 0 nil])
([nil nil ((#("return " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -4069) (undo-tree-id22147 . -7) (undo-tree-id22148 . -7) (undo-tree-id22149 . -7) (undo-tree-id22150 . -7) (undo-tree-id22151 . -7) (undo-tree-id22152 . -7) (undo-tree-id22153 . -7) 4076) nil (26715 39879 419234 710000) 0 nil])
([nil nil ((4069 . 4073)) nil (26715 39879 419223 738000) 0 nil])
([nil nil ((4085 . 4095)) nil (26715 39879 419222 848000) 0 nil])
([nil nil ((4095 . 4100)) nil (26715 39879 419221 995000) 0 nil])
([nil nil ((4100 . 4108)) nil (26715 39879 419221 106000) 0 nil])
([nil nil ((#("    for y in range(5):
        for x in range(5):
            for z in range(64):
                S[64*(x + 5*y) + z] = A[x][y][z]
" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 10 (fontified t) 10 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 18 (face font-lock-builtin-face fontified t) 18 19 (fontified t) 19 23 (fontified t) 23 27 (fontified t) 27 31 (fontified t) 31 34 (face font-lock-keyword-face fontified t) 34 37 (fontified t) 37 39 (face font-lock-keyword-face fontified t) 39 40 (fontified t) 40 45 (face font-lock-builtin-face fontified t) 45 50 (fontified t) 50 54 (fontified t) 54 62 (fontified t) 62 65 (face font-lock-keyword-face fontified t) 65 68 (fontified t) 68 70 (face font-lock-keyword-face fontified t) 70 71 (fontified t) 71 76 (face font-lock-builtin-face fontified t) 76 82 (fontified t) 82 86 (fontified t) 86 98 (fontified t) 98 99 (face font-lock-variable-name-face fontified t) 99 101 (fontified t) 101 102 (fontified t) 102 103 (face font-lock-operator-face fontified t) 103 106 (fontified t) 106 107 (face font-lock-operator-face fontified t) 107 109 (fontified t) 109 110 (face font-lock-operator-face fontified t) 110 113 (fontified t) 113 114 (face font-lock-operator-face fontified t) 114 116 (fontified t) 116 118 (fontified t) 118 119 (face font-lock-operator-face fontified t) 119 127 (fontified t) 127 130 (fontified t) 130 131 (fontified t)) . 3934) (undo-tree-id22075 . -131) (undo-tree-id22076 . -130) (undo-tree-id22077 . -23) (undo-tree-id22078 . -23) (undo-tree-id22079 . -23) (undo-tree-id22080 . -23) (undo-tree-id22081 . -23) (undo-tree-id22082 . -50) (undo-tree-id22083 . -50) (undo-tree-id22084 . -50) (undo-tree-id22085 . -50) (undo-tree-id22086 . -50) (undo-tree-id22087 . -82) (undo-tree-id22088 . -82) (undo-tree-id22089 . -82) (undo-tree-id22090 . -82) (undo-tree-id22091 . -82) (undo-tree-id22092 . -131) (undo-tree-id22093 . -131) (undo-tree-id22094 . -131) (undo-tree-id22095 . -131) (undo-tree-id22096 . -131) (undo-tree-id22097 . -94) (undo-tree-id22098 . -94) (undo-tree-id22099 . -94) (undo-tree-id22100 . -94) (undo-tree-id22101 . -94) (undo-tree-id22102 . -82) (undo-tree-id22103 . -82) (undo-tree-id22104 . -82) (undo-tree-id22105 . -82) (undo-tree-id22106 . -82) (undo-tree-id22107 . -131) (undo-tree-id22108 . -131) (undo-tree-id22109 . -131) (undo-tree-id22110 . -131) (undo-tree-id22111 . -131) (undo-tree-id22112 . -131) (undo-tree-id22113 . -131) (undo-tree-id22114 . -131) (undo-tree-id22115 . -131) (undo-tree-id22116 . -131) (undo-tree-id22117 . -131) (undo-tree-id22118 . -131) (undo-tree-id22119 . -131) (undo-tree-id22120 . -131) (undo-tree-id22121 . -131) (undo-tree-id22122 . -131) (undo-tree-id22123 . -131) (undo-tree-id22124 . -131) (undo-tree-id22125 . -131) (undo-tree-id22126 . -131) (undo-tree-id22127 . -131) (undo-tree-id22128 . -131) (undo-tree-id22129 . -131) (undo-tree-id22130 . -82) (undo-tree-id22131 . -82) (undo-tree-id22132 . -82) (undo-tree-id22133 . -82) (undo-tree-id22134 . -82) (undo-tree-id22135 . -82) (undo-tree-id22136 . -82) (undo-tree-id22137 . -50) (undo-tree-id22138 . -50) (undo-tree-id22139 . -50) (undo-tree-id22140 . -50) (undo-tree-id22141 . -50) (undo-tree-id22142 . -23) (undo-tree-id22143 . -23) (undo-tree-id22144 . -23) (undo-tree-id22145 . -23) (undo-tree-id22146 . -23)) nil (26715 39879 419214 696000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3933) (undo-tree-id21986 . -1) (undo-tree-id21987 . -1) (undo-tree-id21988 . -1) (undo-tree-id21989 . -1) (undo-tree-id21990 . -1) (undo-tree-id21991 . -1) (undo-tree-id21992 . -1) (undo-tree-id21993 . -1) (undo-tree-id21994 . -1) (undo-tree-id21995 . -1) (undo-tree-id21996 . -1) (undo-tree-id21997 . -1) (undo-tree-id21998 . -1) (undo-tree-id21999 . -1) (undo-tree-id22000 . -1) (undo-tree-id22001 . -1) (undo-tree-id22002 . -1) (undo-tree-id22003 . -1) (undo-tree-id22004 . -1) (undo-tree-id22005 . -1) (undo-tree-id22006 . -1) (undo-tree-id22007 . -1) (undo-tree-id22008 . -1) (undo-tree-id22009 . -1) (undo-tree-id22010 . -1) (undo-tree-id22011 . -1) (undo-tree-id22012 . -1) (undo-tree-id22013 . -1) (undo-tree-id22014 . -1) (undo-tree-id22015 . -1) (undo-tree-id22016 . -1) (undo-tree-id22017 . -1) (undo-tree-id22018 . -1) (undo-tree-id22019 . -1) (undo-tree-id22020 . -1) (undo-tree-id22021 . -1) (undo-tree-id22022 . -1) (undo-tree-id22023 . -1) (undo-tree-id22024 . -1) (undo-tree-id22025 . -1) (undo-tree-id22026 . -1) (undo-tree-id22027 . -1) (undo-tree-id22028 . -1) (undo-tree-id22029 . -1) (undo-tree-id22030 . -1) (undo-tree-id22031 . -1) (undo-tree-id22032 . -1) (undo-tree-id22033 . -1) (undo-tree-id22034 . -1) (undo-tree-id22035 . -1) (undo-tree-id22036 . -1) (undo-tree-id22037 . -1) (undo-tree-id22038 . -1) (undo-tree-id22039 . -1) (undo-tree-id22040 . -1) (undo-tree-id22041 . -1) (undo-tree-id22042 . -1) (undo-tree-id22043 . -1) (undo-tree-id22044 . -1) (undo-tree-id22045 . -1) (undo-tree-id22046 . -1) (undo-tree-id22047 . -1) (undo-tree-id22048 . -1) (undo-tree-id22049 . -1) (undo-tree-id22050 . -1) (undo-tree-id22051 . -1) (undo-tree-id22052 . -1) (undo-tree-id22053 . -1) (undo-tree-id22054 . -1) (undo-tree-id22055 . -1) (undo-tree-id22056 . -1) (undo-tree-id22057 . -1) (undo-tree-id22058 . -1) (undo-tree-id22059 . -1) (undo-tree-id22060 . -1) (undo-tree-id22061 . -1) (undo-tree-id22062 . -1) (undo-tree-id22063 . -1) (undo-tree-id22064 . -1) (undo-tree-id22065 . -1) (undo-tree-id22066 . -1) (undo-tree-id22067 . -1) (undo-tree-id22068 . -1) (undo-tree-id22069 . -1) (undo-tree-id22070 . -1) (undo-tree-id22071 . -1) (undo-tree-id22072 . -1) (undo-tree-id22073 . -1) (undo-tree-id22074 . -1) 3934) nil (26715 39879 419149 373000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3933) (undo-tree-id21972 . -4) (undo-tree-id21973 . -4) (undo-tree-id21974 . -4) (undo-tree-id21975 . -4) (undo-tree-id21976 . -4) (undo-tree-id21977 . -4) (undo-tree-id21978 . -4) (undo-tree-id21979 . -4) (undo-tree-id21980 . -4) (undo-tree-id21981 . -4) (undo-tree-id21982 . -4) (undo-tree-id21983 . -4) (undo-tree-id21984 . -4) (undo-tree-id21985 . -4)) nil (26715 39879 419071 624000) 0 nil])
([nil nil ((#("S = numpy.zeros((1600), dtype=int)" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 29 (fontified t) 29 30 (face font-lock-operator-face fontified t) 30 33 (face font-lock-builtin-face fontified t) 33 34 (fontified t rear-nonsticky t)) . 3894) (undo-tree-id22156 . -34) (undo-tree-id22157 . -34) (undo-tree-id22158 . -34) (undo-tree-id22159 . -34) (undo-tree-id22160 . -34) (undo-tree-id22161 . -34) (t 26715 39879 443316 446000)) nil (26715 39883 747893 770000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3894) (undo-tree-id22155 . -1)) nil (26715 39883 747879 344000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3894) (undo-tree-id22172 . -4) (undo-tree-id22173 . -4) (undo-tree-id22174 . -4) (undo-tree-id22175 . -4) (undo-tree-id22176 . -4) (undo-tree-id22177 . -4) (undo-tree-id22178 . -4) (undo-tree-id22179 . -4) 3898 (t 26715 39883 769333 912000)) nil (26715 39886 91061 597000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -3888) (undo-tree-id22162 . -1) (undo-tree-id22163 . -1) (undo-tree-id22164 . -1) (undo-tree-id22165 . -1) (undo-tree-id22166 . -1) (undo-tree-id22167 . -1) (undo-tree-id22168 . -1) (undo-tree-id22169 . -1) (undo-tree-id22170 . -1) (undo-tree-id22171 . -1) 3889) nil (26715 39886 91051 191000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3887) (undo-tree-id22180 . -1) (undo-tree-id22181 . -1) (undo-tree-id22182 . -1) (undo-tree-id22183 . -1) (undo-tree-id22184 . -1) (undo-tree-id22185 . -1) (undo-tree-id22186 . -1) (undo-tree-id22187 . -1) (undo-tree-id22188 . -1) (undo-tree-id22189 . -1) (undo-tree-id22190 . -1) (undo-tree-id22191 . -1) (undo-tree-id22192 . -1) (undo-tree-id22193 . -1) (undo-tree-id22194 . -1) (undo-tree-id22195 . -1) (undo-tree-id22196 . -1) (undo-tree-id22197 . -1) (undo-tree-id22198 . -1) (undo-tree-id22199 . -1) (undo-tree-id22200 . -1) (undo-tree-id22201 . -1) (undo-tree-id22202 . -1) (undo-tree-id22203 . -1) 3888 (t 26715 39886 111343 422000)) nil (26715 39887 394884 552000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1247) (undo-tree-id22204 . -1) 1248 (t 26715 39887 415348 733000)) nil (26715 39897 426642 115000) 0 nil])
([nil nil ((1247 . 1251)) nil (26715 39897 426629 514000) 0 nil])
([nil nil ((apply 10 5645 5799 undo--wrap-and-run-primitive-undo 5645 5799 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5776) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5739) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5726) (#("# " 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . -5691) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5645) 5809 (t 26715 39897 448389 976000)))) nil (26715 39954 99396 696000) 0 nil])
([nil nil ((apply -10 5645 5810 undo--wrap-and-run-primitive-undo 5645 5810 ((5784 . 5786) (5745 . 5747) (5730 . 5732) (5693 . 5695) (5645 . 5647) 5799 (t 26715 39954 122635 64000)))) nil (26715 39964 104139 902000) 0 nil])
([nil nil ((apply 16 5810 6017 undo--wrap-and-run-primitive-undo 5810 6017 ((#("# " 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . -5997) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5971) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5958) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5939) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5893) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5870) (#("# " 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . -5839) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5810) 6033))) nil (26715 39964 104135 410000) 0 nil])
([nil nil ((#("25" 0 2 (fontified t)) . -5836) (undo-tree-id22226 . -2) 5838 (t 26715 39964 127680 364000)) nil (26715 39970 703686 224000) 0 nil])
([nil nil ((#("testing!\"*" 0 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-operator-face fontified t)) . -5826) (undo-tree-id22219 . -10) (undo-tree-id22220 . -10) (undo-tree-id22221 . -10) (undo-tree-id22222 . -10) (undo-tree-id22223 . -10) (undo-tree-id22224 . -10) (undo-tree-id22225 . -10) 5836) nil (26715 39971 721804 264000) 0 nil])
([nil nil ((5826 . 5827)) nil (26715 39972 751431 830000) 0 nil] [nil nil ((#("STRING = \"" 0 6 (face font-lock-variable-name-face fontified t) 6 7 (fontified t) 7 8 (face font-lock-operator-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-string-face fontified t)) . -5816) (undo-tree-id22227 . -9) (undo-tree-id22228 . -10) (undo-tree-id22229 . -10) (undo-tree-id22230 . -10) (undo-tree-id22231 . -10) (undo-tree-id22232 . -10) (undo-tree-id22233 . -10) (undo-tree-id22234 . -9) (undo-tree-id22235 . -10) (undo-tree-id22236 . -10) (undo-tree-id22237 . -10) (undo-tree-id22238 . -10) (undo-tree-id22239 . -10) (undo-tree-id22240 . -9) (undo-tree-id22241 . -10) (undo-tree-id22242 . -10) (undo-tree-id22243 . -10) (undo-tree-id22244 . -10) (undo-tree-id22245 . -10) (undo-tree-id22246 . -10) 5826) ((5816 . 5826)) (26715 39971 721704 327000) 0 nil] [nil nil ((#("STRING = \"" 0 6 (face font-lock-variable-name-face fontified t) 6 7 (fontified t) 7 8 (face font-lock-operator-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-string-face fontified t)) . -5816) (undo-tree-id22205 . -9) (undo-tree-id22206 . -10) (undo-tree-id22207 . -10) (undo-tree-id22208 . -10) (undo-tree-id22209 . -10) (undo-tree-id22210 . -10) (undo-tree-id22211 . -10) (undo-tree-id22212 . -9) (undo-tree-id22213 . -10) (undo-tree-id22214 . -10) (undo-tree-id22215 . -10) (undo-tree-id22216 . -10) (undo-tree-id22217 . -10) (undo-tree-id22218 . -10) 5826) ((5816 . 5826)) (26715 39970 703677 530000) 0 nil])
([nil nil ((5826 . 5830) (t 26715 39972 773719 982000)) nil (26715 40139 730697 369000) 0 nil])
nil
nil
([nil nil ((5831 . 5833) (t 26715 40139 752560 663000)) nil (26715 40151 173097 422000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5832) (undo-tree-id22321 . -1) (undo-tree-id22322 . -1) (undo-tree-id22323 . -1) (undo-tree-id22324 . -1) (undo-tree-id22325 . -1) (undo-tree-id22326 . -1) (undo-tree-id22327 . -1) 5833) nil (26715 40151 173096 617000) 0 nil])
([nil nil ((5832 . 5837)) nil (26715 40151 173090 676000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -5834) (undo-tree-id22273 . -1) (undo-tree-id22274 . -1) (undo-tree-id22275 . -1) (undo-tree-id22276 . -1) (undo-tree-id22277 . -1) (undo-tree-id22278 . -1) (undo-tree-id22279 . -1) (undo-tree-id22280 . -1) (undo-tree-id22281 . -1) (undo-tree-id22282 . -1) (undo-tree-id22283 . -1) (undo-tree-id22284 . -1) (undo-tree-id22285 . -1) (undo-tree-id22286 . -1) (undo-tree-id22287 . -1) (undo-tree-id22288 . -1) (undo-tree-id22289 . -1) (undo-tree-id22290 . -1) (undo-tree-id22291 . -1) (undo-tree-id22292 . -1) (undo-tree-id22293 . -1) (undo-tree-id22294 . -1) (undo-tree-id22295 . -1) (undo-tree-id22296 . -1) (undo-tree-id22297 . -1) (undo-tree-id22298 . -1) (#("1" 0 1 (fontified t)) . -5835) (undo-tree-id22299 . -1) (undo-tree-id22300 . -1) (undo-tree-id22301 . -1) (undo-tree-id22302 . -1) (undo-tree-id22303 . -1) (undo-tree-id22304 . -1) (undo-tree-id22305 . -1) (undo-tree-id22306 . -1) (undo-tree-id22307 . -1) (undo-tree-id22308 . -1) (undo-tree-id22309 . -1) (undo-tree-id22310 . -1) (undo-tree-id22311 . -1) (undo-tree-id22312 . -1) (undo-tree-id22313 . -1) (undo-tree-id22314 . -1) (#("6" 0 1 (fontified t)) . -5836) (undo-tree-id22315 . -1) (undo-tree-id22316 . -1) (undo-tree-id22317 . -1) (undo-tree-id22318 . -1) (undo-tree-id22319 . -1) (undo-tree-id22320 . -1) 5837) nil (26715 40151 173088 855000) 0 nil])
([nil nil ((5834 . 5838)) nil (26715 40151 173050 749000) 0 nil])
([nil nil ((#("1600" 0 4 (fontified t)) . -5834) (undo-tree-id22247 . -1) (undo-tree-id22248 . -1) (undo-tree-id22249 . -1) (undo-tree-id22250 . -1) (undo-tree-id22251 . -1) (undo-tree-id22252 . -2) (undo-tree-id22253 . -2) (undo-tree-id22254 . -2) (undo-tree-id22255 . -2) (undo-tree-id22256 . -2) (undo-tree-id22257 . -3) (undo-tree-id22258 . -3) (undo-tree-id22259 . -3) (undo-tree-id22260 . -3) (undo-tree-id22261 . -3) (undo-tree-id22262 . -4) (undo-tree-id22263 . -4) (undo-tree-id22264 . -4) (undo-tree-id22265 . -4) (undo-tree-id22266 . -4) (undo-tree-id22267 . -4) (undo-tree-id22268 . -4) (undo-tree-id22269 . -4) (undo-tree-id22270 . -4) (undo-tree-id22271 . -4) (undo-tree-id22272 . -4) 5838) nil (26715 40151 173049 283000) 0 nil])
([nil nil ((5834 . 5838)) nil (26715 40151 173017 499000) 0 nil])
([nil nil ((5012 . 5015) (t 26715 40151 194622 933000)) nil (26715 40778 396393 445000) 0 nil])
([nil nil ((5212 . 5215) (t 26715 40778 416597 659000)) nil (26715 40800 811295 284000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -5214) (undo-tree-id22328 . -1) (undo-tree-id22329 . -1) (undo-tree-id22330 . -1) (undo-tree-id22331 . -1) (undo-tree-id22332 . -1) (undo-tree-id22333 . -1) 5215 (t 26715 40800 836753 71000)) nil (26715 41031 94134 345000) 0 nil])
([nil nil ((5214 . 5215)) nil (26715 41031 94117 770000) 0 nil])
([nil nil ((5988 . 6004) (t 26715 41031 114885 402000)) nil (26715 41084 434436 654000) 0 nil])
([nil nil ((6012 . 6016)) nil (26715 41084 434436 53000) 0 nil])
([nil nil ((6016 . 6017)) nil (26715 41084 434435 287000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-string-face fontified t)) . -6016) (undo-tree-id22334 . -1) (undo-tree-id22335 . -1) (undo-tree-id22336 . -1) (undo-tree-id22337 . -1) (undo-tree-id22338 . -1) (undo-tree-id22339 . -1) 6017) nil (26715 41084 434434 530000) 0 nil])
([nil nil ((6016 . 6017)) nil (26715 41084 434423 570000) 0 nil])
([nil nil ((6022 . 6024)) nil (26715 41084 434422 735000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6051 . 6052) (nil fontified nil 6045 . 6052) (nil fontified nil 6042 . 6045) (nil fontified nil 6024 . 6042) (6024 . 6052)) nil (26715 41084 434418 524000) 0 nil])
([nil nil ((#("    print(theta(A))" 0 4 (fontified t) 4 8 (face font-lock-builtin-face fontified t) 8 9 (face font-lock-builtin-face fontified t) 9 19 (fontified t)) . 6054) (undo-tree-id22342 . -19) (undo-tree-id22343 . -19) (undo-tree-id22344 . -19) (undo-tree-id22345 . -19) (undo-tree-id22346 . -19) (undo-tree-id22347 . -19) (undo-tree-id22348 . -19) (undo-tree-id22349 . -19) (undo-tree-id22350 . -19) (undo-tree-id22351 . -19) (undo-tree-id22352 . -19) (undo-tree-id22353 . -19) (undo-tree-id22354 . -19) (undo-tree-id22355 . -19) (undo-tree-id22356 . -19) (undo-tree-id22357 . -19) (undo-tree-id22358 . -19) (undo-tree-id22359 . -19) (t 26715 41084 455684 142000)) nil (26715 41086 613014 732000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6054) (undo-tree-id22340 . -1) (undo-tree-id22341 . -1)) nil (26715 41096 92247 807000) 0 nil])
([nil nil ((6015 . 6018) (t 26715 41086 636871 943000)) nil (26715 41100 564381 691000) 0 nil] [nil nil ((#("A)))))" 0 6 (face font-lock-string-face fontified t)) . -6010) (undo-tree-id22595 . -6) (undo-tree-id22596 . -1) (undo-tree-id22597 . -1) (undo-tree-id22598 . -1) (undo-tree-id22599 . -1) (undo-tree-id22600 . -1) (undo-tree-id22601 . -6) (undo-tree-id22602 . -6) (undo-tree-id22603 . -6) (undo-tree-id22604 . -6) (undo-tree-id22605 . -6) (undo-tree-id22606 . -6) (undo-tree-id22607 . -6) (undo-tree-id22608 . -6) (undo-tree-id22609 . -6) (undo-tree-id22610 . -6) (undo-tree-id22611 . -6) 6016 (t 26715 41086 636871 943000)) ((6010 . 6016)) (26715 41095 940204 391000) 0 nil])
([nil nil ((6067 . 6068) (6027 . 6037) (#(" " 0 1 (fontified nil)) . 6027) (undo-tree-id22612 . -1) (6026 . 6027) (6055 . 6057)) nil (26715 41100 564378 588000) 0 nil])
([nil nil ((#("theta(" 0 2 (face font-lock-string-face fontified t) 2 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t)) . -6004) (undo-tree-id22567 . -6) (undo-tree-id22568 . -5) (undo-tree-id22569 . -5) (undo-tree-id22570 . -5) (undo-tree-id22571 . -5) (undo-tree-id22572 . -5) (undo-tree-id22573 . -6) (undo-tree-id22574 . -6) (undo-tree-id22575 . -6) (undo-tree-id22576 . -6) (undo-tree-id22577 . -6) (undo-tree-id22578 . -6) (undo-tree-id22579 . -6) (undo-tree-id22580 . -6) (undo-tree-id22581 . -6) (undo-tree-id22582 . -6) (undo-tree-id22583 . -6) (undo-tree-id22584 . -6) (undo-tree-id22585 . -6) (undo-tree-id22586 . -6) (undo-tree-id22587 . -6) (undo-tree-id22588 . -6) (undo-tree-id22589 . -6) (undo-tree-id22590 . -6) (undo-tree-id22591 . -6) (undo-tree-id22592 . -6) (undo-tree-id22593 . -6) (undo-tree-id22594 . -6) 6010) ((6004 . 6010)) (26715 41095 800254 685000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -6064) (undo-tree-id22613 . -1) (undo-tree-id22614 . -1) (undo-tree-id22615 . -1) (undo-tree-id22616 . -1) (undo-tree-id22617 . -1) (undo-tree-id22618 . -1) (undo-tree-id22619 . -1) (undo-tree-id22620 . -1) (undo-tree-id22621 . -1) (undo-tree-id22622 . -1) (undo-tree-id22623 . -1) (undo-tree-id22624 . -1) (undo-tree-id22625 . -1) (undo-tree-id22626 . -1) (undo-tree-id22627 . -1) (undo-tree-id22628 . -1) (undo-tree-id22629 . -1) (undo-tree-id22630 . -1) (undo-tree-id22631 . -1) (undo-tree-id22632 . -1) (undo-tree-id22633 . -1) (undo-tree-id22634 . -1) (undo-tree-id22635 . -1) (undo-tree-id22636 . -1) (undo-tree-id22637 . -1) (undo-tree-id22638 . -1) (undo-tree-id22639 . -1) (undo-tree-id22640 . -1) (undo-tree-id22641 . -1) (undo-tree-id22642 . -1) (undo-tree-id22643 . -1) (undo-tree-id22644 . -1) (undo-tree-id22645 . -1) (undo-tree-id22646 . -1) (undo-tree-id22647 . -1) (undo-tree-id22648 . -1) (undo-tree-id22649 . -1) (undo-tree-id22650 . -1) (undo-tree-id22651 . -1) (undo-tree-id22652 . -1) (undo-tree-id22653 . -1) (undo-tree-id22654 . -1) (undo-tree-id22655 . -1) (undo-tree-id22656 . -1) (undo-tree-id22657 . -1) (undo-tree-id22658 . -1) (undo-tree-id22659 . -1) (undo-tree-id22660 . -1) (undo-tree-id22661 . -1) (undo-tree-id22662 . -1) (undo-tree-id22663 . -1) (undo-tree-id22664 . -1) (undo-tree-id22665 . -1) (undo-tree-id22666 . -1) (undo-tree-id22667 . -1) (undo-tree-id22668 . -1) (undo-tree-id22669 . -1) (undo-tree-id22670 . -1) (undo-tree-id22671 . -1) (undo-tree-id22672 . -1) (undo-tree-id22673 . -1) (undo-tree-id22674 . -1) (undo-tree-id22675 . -1) (undo-tree-id22676 . -1) (undo-tree-id22677 . -1) (undo-tree-id22678 . -1) (undo-tree-id22679 . -1) (undo-tree-id22680 . -1) (undo-tree-id22681 . -1) (undo-tree-id22682 . -1) (undo-tree-id22683 . -1) (undo-tree-id22684 . -1) (undo-tree-id22685 . -1) (undo-tree-id22686 . -1) (undo-tree-id22687 . -1) (undo-tree-id22688 . -1) (undo-tree-id22689 . -1) (undo-tree-id22690 . -1) (undo-tree-id22691 . -1) (undo-tree-id22692 . -1) (undo-tree-id22693 . -1) (undo-tree-id22694 . -1) (undo-tree-id22695 . -1) (undo-tree-id22696 . -1) (undo-tree-id22697 . -1) (undo-tree-id22698 . -1) (undo-tree-id22699 . -1) (undo-tree-id22700 . -1) (undo-tree-id22701 . -1) (undo-tree-id22702 . -1) (undo-tree-id22703 . -1) (undo-tree-id22704 . -1) (undo-tree-id22705 . -1) (undo-tree-id22706 . -1) (undo-tree-id22707 . -1) (undo-tree-id22708 . -1) (undo-tree-id22709 . -1) (undo-tree-id22710 . -1) (undo-tree-id22711 . -1) (undo-tree-id22712 . -1) (undo-tree-id22713 . -1) (undo-tree-id22714 . -1) (undo-tree-id22715 . -1) (undo-tree-id22716 . -1) (undo-tree-id22717 . -1) (undo-tree-id22718 . -1) (undo-tree-id22719 . -1) (undo-tree-id22720 . -1) (undo-tree-id22721 . -1) (undo-tree-id22722 . -1) (undo-tree-id22723 . -1) (undo-tree-id22724 . -1) (undo-tree-id22725 . -1) (undo-tree-id22726 . -1) (undo-tree-id22727 . -1) (undo-tree-id22728 . -1) (undo-tree-id22729 . -1) (undo-tree-id22730 . -1) (undo-tree-id22731 . -1) (undo-tree-id22732 . -1) (undo-tree-id22733 . -1) (undo-tree-id22734 . -1) (undo-tree-id22735 . -1) (undo-tree-id22736 . -1) (undo-tree-id22737 . -1) (undo-tree-id22738 . -1) (undo-tree-id22739 . -1) (undo-tree-id22740 . -1) (undo-tree-id22741 . -1) (undo-tree-id22742 . -1) (undo-tree-id22743 . -1) (undo-tree-id22744 . -1) (undo-tree-id22745 . -1) (undo-tree-id22746 . -1) (undo-tree-id22747 . -1) (undo-tree-id22748 . -1) (undo-tree-id22749 . -1) (undo-tree-id22750 . -1) (undo-tree-id22751 . -1) (undo-tree-id22752 . -1) (undo-tree-id22753 . -1) (undo-tree-id22754 . -1) (undo-tree-id22755 . -1) (undo-tree-id22756 . -1) (undo-tree-id22757 . -1) (#("," 0 1 (fontified t)) . -6065) (undo-tree-id22758 . -1) (undo-tree-id22759 . -1) (undo-tree-id22760 . -1) (undo-tree-id22761 . -1) (undo-tree-id22762 . -1) (undo-tree-id22763 . -1) (undo-tree-id22764 . -1) (undo-tree-id22765 . -1) (undo-tree-id22766 . -1) (undo-tree-id22767 . -1) (undo-tree-id22768 . -1) (undo-tree-id22769 . -1) (undo-tree-id22770 . -1) (undo-tree-id22771 . -1) (undo-tree-id22772 . -1) (undo-tree-id22773 . -1) (undo-tree-id22774 . -1) (undo-tree-id22775 . -1) (undo-tree-id22776 . -1) (undo-tree-id22777 . -1) (undo-tree-id22778 . -1) (undo-tree-id22779 . -1) (undo-tree-id22780 . -1) (undo-tree-id22781 . -1) (undo-tree-id22782 . -1) (undo-tree-id22783 . -1) (undo-tree-id22784 . -1) (undo-tree-id22785 . -1) (undo-tree-id22786 . -1) (undo-tree-id22787 . -1) (undo-tree-id22788 . -1) (undo-tree-id22789 . -1) (undo-tree-id22790 . -1) (undo-tree-id22791 . -1) (undo-tree-id22792 . -1) (undo-tree-id22793 . -1) (undo-tree-id22794 . -1) (undo-tree-id22795 . -1) (undo-tree-id22796 . -1) (undo-tree-id22797 . -1) (undo-tree-id22798 . -1) (undo-tree-id22799 . -1) (undo-tree-id22800 . -1) (undo-tree-id22801 . -1) (undo-tree-id22802 . -1) (undo-tree-id22803 . -1) (undo-tree-id22804 . -1) (undo-tree-id22805 . -1) (undo-tree-id22806 . -1) (undo-tree-id22807 . -1) (undo-tree-id22808 . -1) (undo-tree-id22809 . -1) (undo-tree-id22810 . -1) (undo-tree-id22811 . -1) (undo-tree-id22812 . -1) (undo-tree-id22813 . -1) (undo-tree-id22814 . -1) (undo-tree-id22815 . -1) (undo-tree-id22816 . -1) (undo-tree-id22817 . -1) (undo-tree-id22818 . -1) (undo-tree-id22819 . -1) (undo-tree-id22820 . -1) (undo-tree-id22821 . -1) (undo-tree-id22822 . -1) (undo-tree-id22823 . -1) (undo-tree-id22824 . -1) (undo-tree-id22825 . -1) (undo-tree-id22826 . -1) (undo-tree-id22827 . -1) (undo-tree-id22828 . -1) (undo-tree-id22829 . -1) (undo-tree-id22830 . -1) (undo-tree-id22831 . -1) (undo-tree-id22832 . -1) (undo-tree-id22833 . -1) (undo-tree-id22834 . -1) (undo-tree-id22835 . -1) (undo-tree-id22836 . -1) (undo-tree-id22837 . -1) (undo-tree-id22838 . -1) (undo-tree-id22839 . -1) (undo-tree-id22840 . -1) (undo-tree-id22841 . -1) (undo-tree-id22842 . -1) (undo-tree-id22843 . -1) (undo-tree-id22844 . -1) (undo-tree-id22845 . -1) (undo-tree-id22846 . -1) (undo-tree-id22847 . -1) (undo-tree-id22848 . -1) (undo-tree-id22849 . -1) (undo-tree-id22850 . -1) (undo-tree-id22851 . -1) (undo-tree-id22852 . -1) (undo-tree-id22853 . -1) (undo-tree-id22854 . -1) (undo-tree-id22855 . -1) (undo-tree-id22856 . -1) (undo-tree-id22857 . -1) (undo-tree-id22858 . -1) (undo-tree-id22859 . -1) (undo-tree-id22860 . -1) (undo-tree-id22861 . -1) (undo-tree-id22862 . -1) (undo-tree-id22863 . -1) (undo-tree-id22864 . -1) (undo-tree-id22865 . -1) (undo-tree-id22866 . -1) (undo-tree-id22867 . -1) (undo-tree-id22868 . -1) (undo-tree-id22869 . -1) (undo-tree-id22870 . -1) (undo-tree-id22871 . -1) (undo-tree-id22872 . -1) (undo-tree-id22873 . -1) (undo-tree-id22874 . -1) (undo-tree-id22875 . -1) (undo-tree-id22876 . -1) (undo-tree-id22877 . -1) (undo-tree-id22878 . -1) (undo-tree-id22879 . -1) (undo-tree-id22880 . -1) (undo-tree-id22881 . -1) (undo-tree-id22882 . -1) (undo-tree-id22883 . -1) (undo-tree-id22884 . -1) (undo-tree-id22885 . -1) (undo-tree-id22886 . -1) (undo-tree-id22887 . -1) (undo-tree-id22888 . -1) (undo-tree-id22889 . -1) (undo-tree-id22890 . -1) (undo-tree-id22891 . -1) (undo-tree-id22892 . -1) (undo-tree-id22893 . -1) (undo-tree-id22894 . -1) (undo-tree-id22895 . -1) (undo-tree-id22896 . -1) (undo-tree-id22897 . -1) (#(" " 0 1 (fontified t)) . -6066) (undo-tree-id22898 . -1) (undo-tree-id22899 . -1) (undo-tree-id22900 . -1) (undo-tree-id22901 . -1) (undo-tree-id22902 . -1) (undo-tree-id22903 . -1) (undo-tree-id22904 . -1) (undo-tree-id22905 . -1) (undo-tree-id22906 . -1) (undo-tree-id22907 . -1) (undo-tree-id22908 . -1) (undo-tree-id22909 . -1) (undo-tree-id22910 . -1) (undo-tree-id22911 . -1) (undo-tree-id22912 . -1) (undo-tree-id22913 . -1) (undo-tree-id22914 . -1) (undo-tree-id22915 . -1) (undo-tree-id22916 . -1) (undo-tree-id22917 . -1) (undo-tree-id22918 . -1) (undo-tree-id22919 . -1) (undo-tree-id22920 . -1) (undo-tree-id22921 . -1) (undo-tree-id22922 . -1) (undo-tree-id22923 . -1) (undo-tree-id22924 . -1) (undo-tree-id22925 . -1) (undo-tree-id22926 . -1) (undo-tree-id22927 . -1) (undo-tree-id22928 . -1) (undo-tree-id22929 . -1) (undo-tree-id22930 . -1) (undo-tree-id22931 . -1) (undo-tree-id22932 . -1) (undo-tree-id22933 . -1) (undo-tree-id22934 . -1) (undo-tree-id22935 . -1) (undo-tree-id22936 . -1) (undo-tree-id22937 . -1) (undo-tree-id22938 . -1) (undo-tree-id22939 . -1) (undo-tree-id22940 . -1) (undo-tree-id22941 . -1) (undo-tree-id22942 . -1) (undo-tree-id22943 . -1) (undo-tree-id22944 . -1) (undo-tree-id22945 . -1) (undo-tree-id22946 . -1) (undo-tree-id22947 . -1) (undo-tree-id22948 . -1) (undo-tree-id22949 . -1) (undo-tree-id22950 . -1) (undo-tree-id22951 . -1) (undo-tree-id22952 . -1) (undo-tree-id22953 . -1) (undo-tree-id22954 . -1) (undo-tree-id22955 . -1) (undo-tree-id22956 . -1) (undo-tree-id22957 . -1) (undo-tree-id22958 . -1) (undo-tree-id22959 . -1) (undo-tree-id22960 . -1) (undo-tree-id22961 . -1) (undo-tree-id22962 . -1) (undo-tree-id22963 . -1) (undo-tree-id22964 . -1) (undo-tree-id22965 . -1) (undo-tree-id22966 . -1) (undo-tree-id22967 . -1) (undo-tree-id22968 . -1) (undo-tree-id22969 . -1) (undo-tree-id22970 . -1) (undo-tree-id22971 . -1) (undo-tree-id22972 . -1) (undo-tree-id22973 . -1) (undo-tree-id22974 . -1) (undo-tree-id22975 . -1) (undo-tree-id22976 . -1) (undo-tree-id22977 . -1) (undo-tree-id22978 . -1) (undo-tree-id22979 . -1) (undo-tree-id22980 . -1) (undo-tree-id22981 . -1) (undo-tree-id22982 . -1) (undo-tree-id22983 . -1) (undo-tree-id22984 . -1) (undo-tree-id22985 . -1) (undo-tree-id22986 . -1) (undo-tree-id22987 . -1) (undo-tree-id22988 . -1) (undo-tree-id22989 . -1) (undo-tree-id22990 . -1) (undo-tree-id22991 . -1) (undo-tree-id22992 . -1) (undo-tree-id22993 . -1) (undo-tree-id22994 . -1) (undo-tree-id22995 . -1) (undo-tree-id22996 . -1) (undo-tree-id22997 . -1) (undo-tree-id22998 . -1) (undo-tree-id22999 . -1) (undo-tree-id23000 . -1) (undo-tree-id23001 . -1) (undo-tree-id23002 . -1) (undo-tree-id23003 . -1) (undo-tree-id23004 . -1) (undo-tree-id23005 . -1) (undo-tree-id23006 . -1) (undo-tree-id23007 . -1) (undo-tree-id23008 . -1) (undo-tree-id23009 . -1) (undo-tree-id23010 . -1) (undo-tree-id23011 . -1) (undo-tree-id23012 . -1) (undo-tree-id23013 . -1) (undo-tree-id23014 . -1) (undo-tree-id23015 . -1) (undo-tree-id23016 . -1) (undo-tree-id23017 . -1) (undo-tree-id23018 . -1) (undo-tree-id23019 . -1) (undo-tree-id23020 . -1) (undo-tree-id23021 . -1) (undo-tree-id23022 . -1) (undo-tree-id23023 . -1) (undo-tree-id23024 . -1) (undo-tree-id23025 . -1) (undo-tree-id23026 . -1) (undo-tree-id23027 . -1) (undo-tree-id23028 . -1) (undo-tree-id23029 . -1) (undo-tree-id23030 . -1) (undo-tree-id23031 . -1) (undo-tree-id23032 . -1) (#("0" 0 1 (fontified t)) . -6067) (undo-tree-id23033 . -1) (undo-tree-id23034 . -1) (undo-tree-id23035 . -1) (undo-tree-id23036 . -1) (undo-tree-id23037 . -1) (undo-tree-id23038 . -1) (undo-tree-id23039 . -1) (undo-tree-id23040 . -1) (undo-tree-id23041 . -1) (undo-tree-id23042 . -1) (undo-tree-id23043 . -1) (undo-tree-id23044 . -1) (undo-tree-id23045 . -1) (undo-tree-id23046 . -1) (undo-tree-id23047 . -1) (undo-tree-id23048 . -1) (undo-tree-id23049 . -1) (undo-tree-id23050 . -1) (undo-tree-id23051 . -1) (undo-tree-id23052 . -1) (undo-tree-id23053 . -1) (undo-tree-id23054 . -1) (undo-tree-id23055 . -1) (undo-tree-id23056 . -1) (undo-tree-id23057 . -1) (undo-tree-id23058 . -1) (undo-tree-id23059 . -1) (undo-tree-id23060 . -1) (undo-tree-id23061 . -1) (undo-tree-id23062 . -1) (undo-tree-id23063 . -1) (undo-tree-id23064 . -1) (undo-tree-id23065 . -1) (undo-tree-id23066 . -1) (undo-tree-id23067 . -1) (undo-tree-id23068 . -1) (undo-tree-id23069 . -1) (undo-tree-id23070 . -1) (undo-tree-id23071 . -1) (undo-tree-id23072 . -1) (undo-tree-id23073 . -1) (undo-tree-id23074 . -1) (undo-tree-id23075 . -1) (undo-tree-id23076 . -1) (undo-tree-id23077 . -1) (undo-tree-id23078 . -1) (undo-tree-id23079 . -1) (undo-tree-id23080 . -1) (undo-tree-id23081 . -1) (undo-tree-id23082 . -1) (undo-tree-id23083 . -1) (undo-tree-id23084 . -1) (undo-tree-id23085 . -1) (undo-tree-id23086 . -1) (undo-tree-id23087 . -1) (undo-tree-id23088 . -1) (undo-tree-id23089 . -1) (undo-tree-id23090 . -1) (undo-tree-id23091 . -1) (undo-tree-id23092 . -1) (undo-tree-id23093 . -1) (undo-tree-id23094 . -1) (undo-tree-id23095 . -1) (undo-tree-id23096 . -1) (undo-tree-id23097 . -1) (undo-tree-id23098 . -1) (undo-tree-id23099 . -1) (undo-tree-id23100 . -1) (undo-tree-id23101 . -1) (undo-tree-id23102 . -1) (undo-tree-id23103 . -1) (undo-tree-id23104 . -1) (undo-tree-id23105 . -1) (undo-tree-id23106 . -1) (undo-tree-id23107 . -1) (undo-tree-id23108 . -1) (undo-tree-id23109 . -1) (undo-tree-id23110 . -1) (undo-tree-id23111 . -1) (undo-tree-id23112 . -1) (undo-tree-id23113 . -1) (undo-tree-id23114 . -1) (undo-tree-id23115 . -1) (undo-tree-id23116 . -1) (undo-tree-id23117 . -1) (undo-tree-id23118 . -1) (undo-tree-id23119 . -1) (undo-tree-id23120 . -1) (undo-tree-id23121 . -1) (undo-tree-id23122 . -1) (undo-tree-id23123 . -1) (undo-tree-id23124 . -1) (undo-tree-id23125 . -1) (undo-tree-id23126 . -1) (undo-tree-id23127 . -1) (undo-tree-id23128 . -1) (undo-tree-id23129 . -1) (undo-tree-id23130 . -1) (undo-tree-id23131 . -1) (undo-tree-id23132 . -1) (undo-tree-id23133 . -1) (undo-tree-id23134 . -1) (undo-tree-id23135 . -1) (undo-tree-id23136 . -1) (undo-tree-id23137 . -1) (undo-tree-id23138 . -1) (undo-tree-id23139 . -1) (undo-tree-id23140 . -1) (undo-tree-id23141 . -1) (undo-tree-id23142 . -1) (undo-tree-id23143 . -1) (undo-tree-id23144 . -1) (undo-tree-id23145 . -1) (undo-tree-id23146 . -1) (undo-tree-id23147 . -1) (undo-tree-id23148 . -1) (undo-tree-id23149 . -1) (undo-tree-id23150 . -1) (undo-tree-id23151 . -1) (undo-tree-id23152 . -1) (undo-tree-id23153 . -1) (undo-tree-id23154 . -1) (undo-tree-id23155 . -1) (undo-tree-id23156 . -1) (undo-tree-id23157 . -1) (undo-tree-id23158 . -1) (undo-tree-id23159 . -1) (undo-tree-id23160 . -1) (undo-tree-id23161 . -1) (undo-tree-id23162 . -1) (#(")" 0 1 (fontified t)) . -6068) (undo-tree-id23163 . -1) (undo-tree-id23164 . -1) (undo-tree-id23165 . -1) (undo-tree-id23166 . -1) (undo-tree-id23167 . -1) (undo-tree-id23168 . -1) (undo-tree-id23169 . -1) (undo-tree-id23170 . -1) (undo-tree-id23171 . -1) (undo-tree-id23172 . -1) (undo-tree-id23173 . -1) (undo-tree-id23174 . -1) (undo-tree-id23175 . -1) (undo-tree-id23176 . -1) (undo-tree-id23177 . -1) (undo-tree-id23178 . -1) (undo-tree-id23179 . -1) (undo-tree-id23180 . -1) (undo-tree-id23181 . -1) (undo-tree-id23182 . -1) (undo-tree-id23183 . -1) (undo-tree-id23184 . -1) (undo-tree-id23185 . -1) (undo-tree-id23186 . -1) (undo-tree-id23187 . -1) (undo-tree-id23188 . -1) (undo-tree-id23189 . -1) (undo-tree-id23190 . -1) (undo-tree-id23191 . -1) (undo-tree-id23192 . -1) (undo-tree-id23193 . -1) (undo-tree-id23194 . -1) (undo-tree-id23195 . -1) (undo-tree-id23196 . -1) (undo-tree-id23197 . -1) (undo-tree-id23198 . -1) (undo-tree-id23199 . -1) (undo-tree-id23200 . -1) (undo-tree-id23201 . -1) (undo-tree-id23202 . -1) (undo-tree-id23203 . -1) (undo-tree-id23204 . -1) (undo-tree-id23205 . -1) (undo-tree-id23206 . -1) (undo-tree-id23207 . -1) (undo-tree-id23208 . -1) (undo-tree-id23209 . -1) (undo-tree-id23210 . -1) (undo-tree-id23211 . -1) (undo-tree-id23212 . -1) (undo-tree-id23213 . -1) (undo-tree-id23214 . -1) (undo-tree-id23215 . -1) (undo-tree-id23216 . -1) (undo-tree-id23217 . -1) (undo-tree-id23218 . -1) (undo-tree-id23219 . -1) (undo-tree-id23220 . -1) (undo-tree-id23221 . -1) (undo-tree-id23222 . -1) (undo-tree-id23223 . -1) (undo-tree-id23224 . -1) (undo-tree-id23225 . -1) (undo-tree-id23226 . -1) (undo-tree-id23227 . -1) (undo-tree-id23228 . -1) (undo-tree-id23229 . -1) (undo-tree-id23230 . -1) (undo-tree-id23231 . -1) (undo-tree-id23232 . -1) (undo-tree-id23233 . -1) (undo-tree-id23234 . -1) (undo-tree-id23235 . -1) (undo-tree-id23236 . -1) (undo-tree-id23237 . -1) (undo-tree-id23238 . -1) (undo-tree-id23239 . -1) (undo-tree-id23240 . -1) (undo-tree-id23241 . -1) (undo-tree-id23242 . -1) (undo-tree-id23243 . -1) (undo-tree-id23244 . -1) (undo-tree-id23245 . -1) (undo-tree-id23246 . -1) (undo-tree-id23247 . -1) (undo-tree-id23248 . -1) (undo-tree-id23249 . -1) (undo-tree-id23250 . -1) (undo-tree-id23251 . -1) (undo-tree-id23252 . -1) (undo-tree-id23253 . -1) (undo-tree-id23254 . -1) (undo-tree-id23255 . -1) (undo-tree-id23256 . -1) (undo-tree-id23257 . -1) (undo-tree-id23258 . -1) (undo-tree-id23259 . -1) (undo-tree-id23260 . -1) (undo-tree-id23261 . -1) (undo-tree-id23262 . -1) (undo-tree-id23263 . -1) (undo-tree-id23264 . -1) (undo-tree-id23265 . -1) (undo-tree-id23266 . -1) (undo-tree-id23267 . -1) (undo-tree-id23268 . -1) (undo-tree-id23269 . -1) 6069 (t 26715 41100 584057 827000)) nil (26715 41112 887242 818000) 0 nil])
([nil nil ((#("rho(" 0 4 (face font-lock-string-face fontified t)) . -6000) (undo-tree-id22529 . -4) (undo-tree-id22530 . -3) (undo-tree-id22531 . -3) (undo-tree-id22532 . -3) (undo-tree-id22533 . -3) (undo-tree-id22534 . -3) (undo-tree-id22535 . -4) (undo-tree-id22536 . -4) (undo-tree-id22537 . -4) (undo-tree-id22538 . -4) (undo-tree-id22539 . -4) (undo-tree-id22540 . -4) (undo-tree-id22541 . -4) (undo-tree-id22542 . -4) (undo-tree-id22543 . -4) (undo-tree-id22544 . -4) (undo-tree-id22545 . -4) (undo-tree-id22546 . -4) (undo-tree-id22547 . -4) (undo-tree-id22548 . -4) (undo-tree-id22549 . -4) (undo-tree-id22550 . -4) (undo-tree-id22551 . -4) (undo-tree-id22552 . -4) (undo-tree-id22553 . -4) (undo-tree-id22554 . -4) (undo-tree-id22555 . -4) (undo-tree-id22556 . -4) (undo-tree-id22557 . -4) (undo-tree-id22558 . -4) (undo-tree-id22559 . -4) (undo-tree-id22560 . -4) (undo-tree-id22561 . -4) (undo-tree-id22562 . -4) (undo-tree-id22563 . -4) (undo-tree-id22564 . -4) (undo-tree-id22565 . -4) (undo-tree-id22566 . -4) 6004) ((6000 . 6004)) (26715 41095 648458 116000) 0 nil])
([nil nil ((6064 . 6069)) nil (26715 41112 886920 111000) 0 nil])
([nil nil ((#("pi(" 0 3 (face font-lock-string-face fontified t)) . -5997) (undo-tree-id22481 . -3) (undo-tree-id22482 . -2) (undo-tree-id22483 . -2) (undo-tree-id22484 . -2) (undo-tree-id22485 . -2) (undo-tree-id22486 . -2) (undo-tree-id22487 . -3) (undo-tree-id22488 . -3) (undo-tree-id22489 . -3) (undo-tree-id22490 . -3) (undo-tree-id22491 . -3) (undo-tree-id22492 . -3) (undo-tree-id22493 . -3) (undo-tree-id22494 . -3) (undo-tree-id22495 . -3) (undo-tree-id22496 . -3) (undo-tree-id22497 . -3) (undo-tree-id22498 . -3) (undo-tree-id22499 . -3) (undo-tree-id22500 . -3) (undo-tree-id22501 . -3) (undo-tree-id22502 . -3) (undo-tree-id22503 . -3) (undo-tree-id22504 . -3) (undo-tree-id22505 . -3) (undo-tree-id22506 . -3) (undo-tree-id22507 . -3) (undo-tree-id22508 . -3) (undo-tree-id22509 . -3) (undo-tree-id22510 . -3) (undo-tree-id22511 . -3) (undo-tree-id22512 . -3) (undo-tree-id22513 . -3) (undo-tree-id22514 . -3) (undo-tree-id22515 . -3) (undo-tree-id22516 . -3) (undo-tree-id22517 . -3) (undo-tree-id22518 . -3) (undo-tree-id22519 . -3) (undo-tree-id22520 . -3) (undo-tree-id22521 . -3) (undo-tree-id22522 . -3) (undo-tree-id22523 . -3) (undo-tree-id22524 . -3) (undo-tree-id22525 . -3) (undo-tree-id22526 . -3) (undo-tree-id22527 . -3) (undo-tree-id22528 . -3) 6000) ((5997 . 6000)) (26715 41095 475303 834000) 0 nil])
([nil nil ((6069 . 6074) (t 26715 41112 908084 570000)) nil (26715 41229 541620 15000) 0 nil])
([nil nil ((#("chi(" 0 4 (face font-lock-string-face fontified t)) . -5993) (undo-tree-id22423 . -4) (undo-tree-id22424 . -3) (undo-tree-id22425 . -3) (undo-tree-id22426 . -3) (undo-tree-id22427 . -3) (undo-tree-id22428 . -3) (undo-tree-id22429 . -4) (undo-tree-id22430 . -4) (undo-tree-id22431 . -4) (undo-tree-id22432 . -4) (undo-tree-id22433 . -4) (undo-tree-id22434 . -4) (undo-tree-id22435 . -4) (undo-tree-id22436 . -4) (undo-tree-id22437 . -4) (undo-tree-id22438 . -4) (undo-tree-id22439 . -4) (undo-tree-id22440 . -4) (undo-tree-id22441 . -4) (undo-tree-id22442 . -4) (undo-tree-id22443 . -4) (undo-tree-id22444 . -4) (undo-tree-id22445 . -4) (undo-tree-id22446 . -4) (undo-tree-id22447 . -4) (undo-tree-id22448 . -4) (undo-tree-id22449 . -4) (undo-tree-id22450 . -4) (undo-tree-id22451 . -4) (undo-tree-id22452 . -4) (undo-tree-id22453 . -4) (undo-tree-id22454 . -4) (undo-tree-id22455 . -4) (undo-tree-id22456 . -4) (undo-tree-id22457 . -4) (undo-tree-id22458 . -4) (undo-tree-id22459 . -4) (undo-tree-id22460 . -4) (undo-tree-id22461 . -4) (undo-tree-id22462 . -4) (undo-tree-id22463 . -4) (undo-tree-id22464 . -4) (undo-tree-id22465 . -4) (undo-tree-id22466 . -4) (undo-tree-id22467 . -4) (undo-tree-id22468 . -4) (undo-tree-id22469 . -4) (undo-tree-id22470 . -4) (undo-tree-id22471 . -4) (undo-tree-id22472 . -4) (undo-tree-id22473 . -4) (undo-tree-id22474 . -4) (undo-tree-id22475 . -4) (undo-tree-id22476 . -4) (undo-tree-id22477 . -4) (undo-tree-id22478 . -4) (undo-tree-id22479 . -4) (undo-tree-id22480 . -4) 5997) ((5993 . 5997)) (26715 41095 136654 114000) 0 nil])
([nil nil ((6074 . 6079)) nil (26715 41229 541619 339000) 0 nil])
([nil nil ((#("iota(" 0 5 (face font-lock-string-face fontified t)) . -5988) (undo-tree-id22360 . -5) (undo-tree-id22361 . -5) (undo-tree-id22362 . -5) (undo-tree-id22363 . -5) (undo-tree-id22364 . -5) (undo-tree-id22365 . -5) (undo-tree-id22366 . -5) (undo-tree-id22367 . -5) (undo-tree-id22368 . -5) (undo-tree-id22369 . -5) (undo-tree-id22370 . -5) (undo-tree-id22371 . -5) (undo-tree-id22372 . -5) (undo-tree-id22373 . -5) (undo-tree-id22374 . -5) (undo-tree-id22375 . -5) (undo-tree-id22376 . -5) (undo-tree-id22377 . -5) (undo-tree-id22378 . -5) (undo-tree-id22379 . -5) (undo-tree-id22380 . -5) (undo-tree-id22381 . -5) (undo-tree-id22382 . -5) (undo-tree-id22383 . -5) (undo-tree-id22384 . -5) (undo-tree-id22385 . -5) (undo-tree-id22386 . -5) (undo-tree-id22387 . -5) (undo-tree-id22388 . -5) (undo-tree-id22389 . -5) (undo-tree-id22390 . -5) (undo-tree-id22391 . -5) (undo-tree-id22392 . -5) (undo-tree-id22393 . -5) (undo-tree-id22394 . -5) (undo-tree-id22395 . -5) (undo-tree-id22396 . -5) (undo-tree-id22397 . -5) (undo-tree-id22398 . -5) (undo-tree-id22399 . -5) (undo-tree-id22400 . -5) (undo-tree-id22401 . -5) (undo-tree-id22402 . -5) (undo-tree-id22403 . -5) (undo-tree-id22404 . -5) (undo-tree-id22405 . -5) (undo-tree-id22406 . -5) (undo-tree-id22407 . -5) (undo-tree-id22408 . -5) (undo-tree-id22409 . -5) (undo-tree-id22410 . -5) (undo-tree-id22411 . -5) (undo-tree-id22412 . -5) (undo-tree-id22413 . -5) (undo-tree-id22414 . -5) (undo-tree-id22415 . -5) (undo-tree-id22416 . -5) (undo-tree-id22417 . -5) (undo-tree-id22418 . -5) (undo-tree-id22419 . -5) (undo-tree-id22420 . -5) (undo-tree-id22421 . -5) (undo-tree-id22422 . -5) 5993) ((5988 . 5993)) (26715 41095 136320 816000) 0 nil])
([nil nil ((#("print" 0 5 (face font-lock-builtin-face fontified t)) . -6074) (undo-tree-id23291 . -5) 6079) nil (26715 41229 541618 887000) 0 nil])
nil
([nil nil ((5976 . 5981)) nil (26715 41229 541616 401000) 0 nil])
([nil nil ((5981 . 5990)) nil (26715 41229 541616 21000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -5987) (undo-tree-id23288 . -1) (#("u" 0 1 (fontified t)) . -5988) (undo-tree-id23289 . -1) (#("n" 0 1 (fontified t)) . -5989) (undo-tree-id23290 . -1) 5990) nil (26715 41229 541615 87000) 0 nil])
([nil nil ((5987 . 5999)) nil (26715 41229 541612 410000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -5998) (undo-tree-id23287 . -1) 5999) nil (26715 41229 541611 877000) 0 nil])
([nil nil ((5998 . 6019)) nil (26715 41229 541610 803000) 0 nil])
([nil nil ((6019 . 6023)) nil (26715 41229 541610 420000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -6022) (undo-tree-id23286 . -1) 6023) nil (26715 41229 541609 923000) 0 nil])
([nil nil ((6022 . 6026)) nil (26715 41229 541608 794000) 0 nil])
([nil nil ((6026 . 6031)) nil (26715 41229 541608 495000) 0 nil])
([nil nil ((6031 . 6037)) nil (26715 41229 541608 122000) 0 nil])
([nil nil ((#("foo = " 0 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-operator-face fontified t) 5 6 (fontified t)) . -6031) (undo-tree-id23285 . -6) 6037) nil (26715 41229 541607 411000) 0 nil])
([nil nil ((6031 . 6043)) nil (26715 41229 541606 232000) 0 nil])
([nil nil ((#("hexlified = " 0 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 12 (fontified t)) . -6031) (undo-tree-id23284 . -12) 6043) nil (26715 41229 541605 736000) 0 nil])
([nil nil ((6031 . 6033)) nil (26715 41229 541604 260000) 0 nil])
([nil nil ((6033 . 6054)) nil (26715 41229 541603 974000) 0 nil])
([nil nil ((6054 . 6058)) nil (26715 41229 541603 550000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6027) 6058) nil (26715 41229 541603 126000) 0 nil])
([nil nil ((6027 . 6031) 6054) nil (26715 41229 541602 508000) 0 nil])
([nil nil ((6058 . 6076)) nil (26715 41229 541602 25000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -6075) (undo-tree-id23283 . -1) 6076) nil (26715 41229 541601 141000) 0 nil])
([nil nil ((6075 . 6079)) nil (26715 41229 541599 439000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -6078) (undo-tree-id23282 . -1) 6079) nil (26715 41229 541598 381000) 0 nil])
([nil nil ((6078 . 6079)) nil (26715 41229 541596 624000) 0 nil])
([nil nil ((#("round" 0 5 (fontified t)) . -6070) (undo-tree-id23281 . -5) 6075) nil (26715 41229 541595 877000) 0 nil])
([nil nil ((#("first_" 0 6 (fontified t)) . -6064) (undo-tree-id23280 . -6) 6070) nil (26715 41229 541594 441000) 0 nil])
([nil nil ((6064 . 6065)) nil (26715 41229 541593 117000) 0 nil])
([nil nil ((6069 . 6081)) nil (26715 41229 541592 661000) 0 nil])
([nil nil ((6049 . 6050)) nil (26715 41229 541591 817000) 0 nil])
([nil nil ((6082 . 6084)) nil (26715 41229 541591 471000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -6082) (undo-tree-id23278 . -1) (#(" " 0 1 (fontified t)) . -6083) (undo-tree-id23279 . -1) 6084) nil (26715 41229 541590 783000) 0 nil])
([nil nil ((6082 . 6092)) nil (26715 41229 541589 11000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -6065) (undo-tree-id23277 . -1) 6066) nil (26715 41229 541588 469000) 0 nil])
([nil nil ((6065 . 6066)) nil (26715 41229 541587 243000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -6075) (undo-tree-id23276 . -1) 6076) nil (26715 41229 541586 669000) 0 nil])
([nil nil ((6075 . 6076)) nil (26715 41229 541585 435000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -6065) (undo-tree-id23275 . -1) 6066) nil (26715 41229 541584 896000) 0 nil])
([nil nil ((6065 . 6066)) nil (26715 41229 541583 689000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -6075) (undo-tree-id23274 . -1) 6076) nil (26715 41229 541583 165000) 0 nil])
([nil nil ((6075 . 6076)) nil (26715 41229 541582 111000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -6080) (undo-tree-id23273 . -1) 6081) nil (26715 41229 541581 494000) 0 nil])
([nil nil ((6080 . 6081)) nil (26715 41229 541580 209000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -6080) (undo-tree-id23272 . -1) 6081) nil (26715 41229 541579 659000) 0 nil])
([nil nil ((6080 . 6081)) nil (26715 41229 541578 244000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -6089) (undo-tree-id23271 . -3) 6092) nil (26715 41229 541577 566000) 0 nil])
([nil nil ((#("y " 0 2 (fontified t)) . -6087) (undo-tree-id23270 . -2) 6089) nil (26715 41229 541575 216000) 0 nil])
([nil nil ((6087 . 6104)) nil (26715 41229 541563 97000) 0 nil])
([nil nil ((#("0))" 0 3 (fontified t)) . -6194) (undo-tree-id24780 . -3) (undo-tree-id24781 . -3) (undo-tree-id24782 . -3) (undo-tree-id24783 . -3) (undo-tree-id24784 . -3) (undo-tree-id24785 . -3) (undo-tree-id24786 . -3) (undo-tree-id24787 . -3) (undo-tree-id24788 . -3) (undo-tree-id24789 . -3) (undo-tree-id24790 . -3) (undo-tree-id24791 . -3) (undo-tree-id24792 . -3) (undo-tree-id24793 . -3) (undo-tree-id24794 . -3) (undo-tree-id24795 . -3) 6197 (t 26715 41229 565907 149000)) nil (26715 41240 98398 283000) 0 nil])
([nil nil ((#("A)))), " 0 7 (fontified t)) . -6187) (undo-tree-id24753 . -7) (undo-tree-id24754 . -7) (undo-tree-id24755 . -7) (undo-tree-id24756 . -7) (undo-tree-id24757 . -7) (undo-tree-id24758 . -7) (undo-tree-id24759 . -7) (undo-tree-id24760 . -7) (undo-tree-id24761 . -7) (undo-tree-id24762 . -7) (undo-tree-id24763 . -7) (undo-tree-id24764 . -7) (undo-tree-id24765 . -7) (undo-tree-id24766 . -7) (undo-tree-id24767 . -7) (undo-tree-id24768 . -7) (undo-tree-id24769 . -7) (undo-tree-id24770 . -7) (undo-tree-id24771 . -7) (undo-tree-id24772 . -7) (undo-tree-id24773 . -7) (undo-tree-id24774 . -7) (undo-tree-id24775 . -7) (undo-tree-id24776 . -7) (undo-tree-id24777 . -7) (undo-tree-id24778 . -7) (undo-tree-id24779 . -7) 6194) nil (26715 41240 98384 161000) 0 nil])
([nil nil ((#("theta(" 0 2 (fontified t) 2 5 (fontified t) 5 6 (fontified t)) . -6181) (undo-tree-id24721 . -6) (undo-tree-id24722 . -6) (undo-tree-id24723 . -6) (undo-tree-id24724 . -6) (undo-tree-id24725 . -6) (undo-tree-id24726 . -6) (undo-tree-id24727 . -6) (undo-tree-id24728 . -6) (undo-tree-id24729 . -6) (undo-tree-id24730 . -6) (undo-tree-id24731 . -6) (undo-tree-id24732 . -6) (undo-tree-id24733 . -6) (undo-tree-id24734 . -6) (undo-tree-id24735 . -6) (undo-tree-id24736 . -6) (undo-tree-id24737 . -6) (undo-tree-id24738 . -6) (undo-tree-id24739 . -6) (undo-tree-id24740 . -6) (undo-tree-id24741 . -6) (undo-tree-id24742 . -6) (undo-tree-id24743 . -6) (undo-tree-id24744 . -6) (undo-tree-id24745 . -6) (undo-tree-id24746 . -6) (undo-tree-id24747 . -6) (undo-tree-id24748 . -6) (undo-tree-id24749 . -6) (undo-tree-id24750 . -6) (undo-tree-id24751 . -6) (undo-tree-id24752 . -6) 6187) nil (26715 41240 98364 383000) 0 nil])
([nil nil ((#("rho(" 0 4 (fontified t)) . -6177) (undo-tree-id24684 . -4) (undo-tree-id24685 . -4) (undo-tree-id24686 . -4) (undo-tree-id24687 . -4) (undo-tree-id24688 . -4) (undo-tree-id24689 . -4) (undo-tree-id24690 . -4) (undo-tree-id24691 . -4) (undo-tree-id24692 . -4) (undo-tree-id24693 . -4) (undo-tree-id24694 . -4) (undo-tree-id24695 . -4) (undo-tree-id24696 . -4) (undo-tree-id24697 . -4) (undo-tree-id24698 . -4) (undo-tree-id24699 . -4) (undo-tree-id24700 . -4) (undo-tree-id24701 . -4) (undo-tree-id24702 . -4) (undo-tree-id24703 . -4) (undo-tree-id24704 . -4) (undo-tree-id24705 . -4) (undo-tree-id24706 . -4) (undo-tree-id24707 . -4) (undo-tree-id24708 . -4) (undo-tree-id24709 . -4) (undo-tree-id24710 . -4) (undo-tree-id24711 . -4) (undo-tree-id24712 . -4) (undo-tree-id24713 . -4) (undo-tree-id24714 . -4) (undo-tree-id24715 . -4) (undo-tree-id24716 . -4) (undo-tree-id24717 . -4) (undo-tree-id24718 . -4) (undo-tree-id24719 . -4) (undo-tree-id24720 . -4) 6181) nil (26715 41240 98338 203000) 0 nil])
([nil nil ((#("pi(" 0 3 (fontified t)) . -6174) (undo-tree-id24642 . -3) (undo-tree-id24643 . -3) (undo-tree-id24644 . -3) (undo-tree-id24645 . -3) (undo-tree-id24646 . -3) (undo-tree-id24647 . -3) (undo-tree-id24648 . -3) (undo-tree-id24649 . -3) (undo-tree-id24650 . -3) (undo-tree-id24651 . -3) (undo-tree-id24652 . -3) (undo-tree-id24653 . -3) (undo-tree-id24654 . -3) (undo-tree-id24655 . -3) (undo-tree-id24656 . -3) (undo-tree-id24657 . -3) (undo-tree-id24658 . -3) (undo-tree-id24659 . -3) (undo-tree-id24660 . -3) (undo-tree-id24661 . -3) (undo-tree-id24662 . -3) (undo-tree-id24663 . -3) (undo-tree-id24664 . -3) (undo-tree-id24665 . -3) (undo-tree-id24666 . -3) (undo-tree-id24667 . -3) (undo-tree-id24668 . -3) (undo-tree-id24669 . -3) (undo-tree-id24670 . -3) (undo-tree-id24671 . -3) (undo-tree-id24672 . -3) (undo-tree-id24673 . -3) (undo-tree-id24674 . -3) (undo-tree-id24675 . -3) (undo-tree-id24676 . -3) (undo-tree-id24677 . -3) (undo-tree-id24678 . -3) (undo-tree-id24679 . -3) (undo-tree-id24680 . -3) (undo-tree-id24681 . -3) (undo-tree-id24682 . -3) (undo-tree-id24683 . -3) 6177) nil (26715 41240 98310 527000) 0 nil])
([nil nil ((#("chi(" 0 4 (fontified t)) . -6170) (undo-tree-id24595 . -4) (undo-tree-id24596 . -4) (undo-tree-id24597 . -4) (undo-tree-id24598 . -4) (undo-tree-id24599 . -4) (undo-tree-id24600 . -4) (undo-tree-id24601 . -4) (undo-tree-id24602 . -4) (undo-tree-id24603 . -4) (undo-tree-id24604 . -4) (undo-tree-id24605 . -4) (undo-tree-id24606 . -4) (undo-tree-id24607 . -4) (undo-tree-id24608 . -4) (undo-tree-id24609 . -4) (undo-tree-id24610 . -4) (undo-tree-id24611 . -4) (undo-tree-id24612 . -4) (undo-tree-id24613 . -4) (undo-tree-id24614 . -4) (undo-tree-id24615 . -4) (undo-tree-id24616 . -4) (undo-tree-id24617 . -4) (undo-tree-id24618 . -4) (undo-tree-id24619 . -4) (undo-tree-id24620 . -4) (undo-tree-id24621 . -4) (undo-tree-id24622 . -4) (undo-tree-id24623 . -4) (undo-tree-id24624 . -4) (undo-tree-id24625 . -4) (undo-tree-id24626 . -4) (undo-tree-id24627 . -4) (undo-tree-id24628 . -4) (undo-tree-id24629 . -4) (undo-tree-id24630 . -4) (undo-tree-id24631 . -4) (undo-tree-id24632 . -4) (undo-tree-id24633 . -4) (undo-tree-id24634 . -4) (undo-tree-id24635 . -4) (undo-tree-id24636 . -4) (undo-tree-id24637 . -4) (undo-tree-id24638 . -4) (undo-tree-id24639 . -4) (undo-tree-id24640 . -4) (undo-tree-id24641 . -4) 6174) nil (26715 41240 98276 833000) 0 nil])
([nil nil ((#("iota(" 0 5 (fontified t)) . -6165) (undo-tree-id24543 . -5) (undo-tree-id24544 . -5) (undo-tree-id24545 . -5) (undo-tree-id24546 . -5) (undo-tree-id24547 . -5) (undo-tree-id24548 . -5) (undo-tree-id24549 . -5) (undo-tree-id24550 . -5) (undo-tree-id24551 . -5) (undo-tree-id24552 . -5) (undo-tree-id24553 . -5) (undo-tree-id24554 . -5) (undo-tree-id24555 . -5) (undo-tree-id24556 . -5) (undo-tree-id24557 . -5) (undo-tree-id24558 . -5) (undo-tree-id24559 . -5) (undo-tree-id24560 . -5) (undo-tree-id24561 . -5) (undo-tree-id24562 . -5) (undo-tree-id24563 . -5) (undo-tree-id24564 . -5) (undo-tree-id24565 . -5) (undo-tree-id24566 . -5) (undo-tree-id24567 . -5) (undo-tree-id24568 . -5) (undo-tree-id24569 . -5) (undo-tree-id24570 . -5) (undo-tree-id24571 . -5) (undo-tree-id24572 . -5) (undo-tree-id24573 . -5) (undo-tree-id24574 . -5) (undo-tree-id24575 . -5) (undo-tree-id24576 . -5) (undo-tree-id24577 . -5) (undo-tree-id24578 . -5) (undo-tree-id24579 . -5) (undo-tree-id24580 . -5) (undo-tree-id24581 . -5) (undo-tree-id24582 . -5) (undo-tree-id24583 . -5) (undo-tree-id24584 . -5) (undo-tree-id24585 . -5) (undo-tree-id24586 . -5) (undo-tree-id24587 . -5) (undo-tree-id24588 . -5) (undo-tree-id24589 . -5) (undo-tree-id24590 . -5) (undo-tree-id24591 . -5) (undo-tree-id24592 . -5) (undo-tree-id24593 . -5) (undo-tree-id24594 . -5) 6170) nil (26715 41240 98241 260000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -6163) (undo-tree-id24485 . -2) (undo-tree-id24486 . -2) (undo-tree-id24487 . -2) (undo-tree-id24488 . -2) (undo-tree-id24489 . -2) (undo-tree-id24490 . -2) (undo-tree-id24491 . -2) (undo-tree-id24492 . -2) (undo-tree-id24493 . -2) (undo-tree-id24494 . -2) (undo-tree-id24495 . -2) (undo-tree-id24496 . -2) (undo-tree-id24497 . -2) (undo-tree-id24498 . -2) (undo-tree-id24499 . -2) (undo-tree-id24500 . -2) (undo-tree-id24501 . -2) (undo-tree-id24502 . -2) (undo-tree-id24503 . -2) (undo-tree-id24504 . -2) (undo-tree-id24505 . -2) (undo-tree-id24506 . -2) (undo-tree-id24507 . -2) (undo-tree-id24508 . -2) (undo-tree-id24509 . -2) (undo-tree-id24510 . -2) (undo-tree-id24511 . -2) (undo-tree-id24512 . -2) (undo-tree-id24513 . -2) (undo-tree-id24514 . -2) (undo-tree-id24515 . -2) (undo-tree-id24516 . -2) (undo-tree-id24517 . -2) (undo-tree-id24518 . -2) (undo-tree-id24519 . -2) (undo-tree-id24520 . -2) (undo-tree-id24521 . -2) (undo-tree-id24522 . -2) (undo-tree-id24523 . -2) (undo-tree-id24524 . -2) (undo-tree-id24525 . -2) (undo-tree-id24526 . -2) (undo-tree-id24527 . -2) (undo-tree-id24528 . -2) (undo-tree-id24529 . -2) (undo-tree-id24530 . -2) (undo-tree-id24531 . -2) (undo-tree-id24532 . -2) (undo-tree-id24533 . -2) (undo-tree-id24534 . -2) (undo-tree-id24535 . -2) (undo-tree-id24536 . -2) (undo-tree-id24537 . -2) (undo-tree-id24538 . -2) (undo-tree-id24539 . -2) (undo-tree-id24540 . -2) (undo-tree-id24541 . -2) (undo-tree-id24542 . -2) 6165) nil (26715 41240 98201 895000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6159) (undo-tree-id24422 . -4) (undo-tree-id24423 . -4) (undo-tree-id24424 . -4) (undo-tree-id24425 . -4) (undo-tree-id24426 . -4) (undo-tree-id24427 . -4) (undo-tree-id24428 . -4) (undo-tree-id24429 . -4) (undo-tree-id24430 . -4) (undo-tree-id24431 . -4) (undo-tree-id24432 . -4) (undo-tree-id24433 . -4) (undo-tree-id24434 . -4) (undo-tree-id24435 . -4) (undo-tree-id24436 . -4) (undo-tree-id24437 . -4) (undo-tree-id24438 . -4) (undo-tree-id24439 . -4) (undo-tree-id24440 . -4) (undo-tree-id24441 . -4) (undo-tree-id24442 . -4) (undo-tree-id24443 . -4) (undo-tree-id24444 . -4) (undo-tree-id24445 . -4) (undo-tree-id24446 . -4) (undo-tree-id24447 . -4) (undo-tree-id24448 . -4) (undo-tree-id24449 . -4) (undo-tree-id24450 . -4) (undo-tree-id24451 . -4) (undo-tree-id24452 . -4) (undo-tree-id24453 . -4) (undo-tree-id24454 . -4) (undo-tree-id24455 . -4) (undo-tree-id24456 . -4) (undo-tree-id24457 . -4) (undo-tree-id24458 . -4) (undo-tree-id24459 . -4) (undo-tree-id24460 . -4) (undo-tree-id24461 . -4) (undo-tree-id24462 . -4) (undo-tree-id24463 . -4) (undo-tree-id24464 . -4) (undo-tree-id24465 . -4) (undo-tree-id24466 . -4) (undo-tree-id24467 . -4) (undo-tree-id24468 . -4) (undo-tree-id24469 . -4) (undo-tree-id24470 . -4) (undo-tree-id24471 . -4) (undo-tree-id24472 . -4) (undo-tree-id24473 . -4) (undo-tree-id24474 . -4) (undo-tree-id24475 . -4) (undo-tree-id24476 . -4) (undo-tree-id24477 . -4) (undo-tree-id24478 . -4) (undo-tree-id24479 . -4) (undo-tree-id24480 . -4) (undo-tree-id24481 . -4) (undo-tree-id24482 . -4) (undo-tree-id24483 . -4) (undo-tree-id24484 . -4) 6163) nil (26715 41240 98158 657000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6155) (undo-tree-id24354 . -4) (undo-tree-id24355 . -4) (undo-tree-id24356 . -4) (undo-tree-id24357 . -4) (undo-tree-id24358 . -4) (undo-tree-id24359 . -4) (undo-tree-id24360 . -4) (undo-tree-id24361 . -4) (undo-tree-id24362 . -4) (undo-tree-id24363 . -4) (undo-tree-id24364 . -4) (undo-tree-id24365 . -4) (undo-tree-id24366 . -4) (undo-tree-id24367 . -4) (undo-tree-id24368 . -4) (undo-tree-id24369 . -4) (undo-tree-id24370 . -4) (undo-tree-id24371 . -4) (undo-tree-id24372 . -4) (undo-tree-id24373 . -4) (undo-tree-id24374 . -4) (undo-tree-id24375 . -4) (undo-tree-id24376 . -4) (undo-tree-id24377 . -4) (undo-tree-id24378 . -4) (undo-tree-id24379 . -4) (undo-tree-id24380 . -4) (undo-tree-id24381 . -4) (undo-tree-id24382 . -4) (undo-tree-id24383 . -4) (undo-tree-id24384 . -4) (undo-tree-id24385 . -4) (undo-tree-id24386 . -4) (undo-tree-id24387 . -4) (undo-tree-id24388 . -4) (undo-tree-id24389 . -4) (undo-tree-id24390 . -4) (undo-tree-id24391 . -4) (undo-tree-id24392 . -4) (undo-tree-id24393 . -4) (undo-tree-id24394 . -4) (undo-tree-id24395 . -4) (undo-tree-id24396 . -4) (undo-tree-id24397 . -4) (undo-tree-id24398 . -4) (undo-tree-id24399 . -4) (undo-tree-id24400 . -4) (undo-tree-id24401 . -4) (undo-tree-id24402 . -4) (undo-tree-id24403 . -4) (undo-tree-id24404 . -4) (undo-tree-id24405 . -4) (undo-tree-id24406 . -4) (undo-tree-id24407 . -4) (undo-tree-id24408 . -4) (undo-tree-id24409 . -4) (undo-tree-id24410 . -4) (undo-tree-id24411 . -4) (undo-tree-id24412 . -4) (undo-tree-id24413 . -4) (undo-tree-id24414 . -4) (undo-tree-id24415 . -4) (undo-tree-id24416 . -4) (undo-tree-id24417 . -4) (undo-tree-id24418 . -4) (undo-tree-id24419 . -4) (undo-tree-id24420 . -4) (undo-tree-id24421 . -4) 6159) nil (26715 41240 98099 31000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6154) (undo-tree-id24280 . -1) (undo-tree-id24281 . -1) (undo-tree-id24282 . -1) (undo-tree-id24283 . -1) (undo-tree-id24284 . -1) (undo-tree-id24285 . -1) (undo-tree-id24286 . -1) (undo-tree-id24287 . -1) (undo-tree-id24288 . -1) (undo-tree-id24289 . -1) (undo-tree-id24290 . -1) (undo-tree-id24291 . -1) (undo-tree-id24292 . -1) (undo-tree-id24293 . -1) (undo-tree-id24294 . -1) (undo-tree-id24295 . -1) (undo-tree-id24296 . -1) (undo-tree-id24297 . -1) (undo-tree-id24298 . -1) (undo-tree-id24299 . -1) (undo-tree-id24300 . -1) (undo-tree-id24301 . -1) (undo-tree-id24302 . -1) (undo-tree-id24303 . -1) (undo-tree-id24304 . -1) (undo-tree-id24305 . -1) (undo-tree-id24306 . -1) (undo-tree-id24307 . -1) (undo-tree-id24308 . -1) (undo-tree-id24309 . -1) (undo-tree-id24310 . -1) (undo-tree-id24311 . -1) (undo-tree-id24312 . -1) (undo-tree-id24313 . -1) (undo-tree-id24314 . -1) (undo-tree-id24315 . -1) (undo-tree-id24316 . -1) (undo-tree-id24317 . -1) (undo-tree-id24318 . -1) (undo-tree-id24319 . -1) (undo-tree-id24320 . -1) (undo-tree-id24321 . -1) (undo-tree-id24322 . -1) (undo-tree-id24323 . -1) (undo-tree-id24324 . -1) (undo-tree-id24325 . -1) (undo-tree-id24326 . -1) (undo-tree-id24327 . -1) (undo-tree-id24328 . -1) (undo-tree-id24329 . -1) (undo-tree-id24330 . -1) (undo-tree-id24331 . -1) (undo-tree-id24332 . -1) (undo-tree-id24333 . -1) (undo-tree-id24334 . -1) (undo-tree-id24335 . -1) (undo-tree-id24336 . -1) (undo-tree-id24337 . -1) (undo-tree-id24338 . -1) (undo-tree-id24339 . -1) (undo-tree-id24340 . -1) (undo-tree-id24341 . -1) (undo-tree-id24342 . -1) (undo-tree-id24343 . -1) (undo-tree-id24344 . -1) (undo-tree-id24345 . -1) (undo-tree-id24346 . -1) (undo-tree-id24347 . -1) (undo-tree-id24348 . -1) (undo-tree-id24349 . -1) (undo-tree-id24350 . -1) (undo-tree-id24351 . -1) (undo-tree-id24352 . -1) (undo-tree-id24353 . -1) 6155) nil (26715 41240 98037 804000) 0 nil])
([nil nil ((#("n\"," 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (fontified t)) . -6151) (undo-tree-id24191 . -3) (undo-tree-id24192 . -3) (undo-tree-id24193 . -3) (undo-tree-id24194 . -3) (undo-tree-id24195 . -3) (undo-tree-id24196 . -3) (undo-tree-id24197 . -3) (undo-tree-id24198 . -3) (undo-tree-id24199 . -3) (undo-tree-id24200 . -3) (undo-tree-id24201 . -3) (undo-tree-id24202 . -3) (undo-tree-id24203 . -3) (undo-tree-id24204 . -3) (undo-tree-id24205 . -3) (undo-tree-id24206 . -3) (undo-tree-id24207 . -3) (undo-tree-id24208 . -3) (undo-tree-id24209 . -3) (undo-tree-id24210 . -3) (undo-tree-id24211 . -3) (undo-tree-id24212 . -3) (undo-tree-id24213 . -3) (undo-tree-id24214 . -3) (undo-tree-id24215 . -3) (undo-tree-id24216 . -3) (undo-tree-id24217 . -3) (undo-tree-id24218 . -3) (undo-tree-id24219 . -3) (undo-tree-id24220 . -3) (undo-tree-id24221 . -3) (undo-tree-id24222 . -3) (undo-tree-id24223 . -3) (undo-tree-id24224 . -3) (undo-tree-id24225 . -3) (undo-tree-id24226 . -3) (undo-tree-id24227 . -3) (undo-tree-id24228 . -3) (undo-tree-id24229 . -3) (undo-tree-id24230 . -3) (undo-tree-id24231 . -3) (undo-tree-id24232 . -3) (undo-tree-id24233 . -3) (undo-tree-id24234 . -3) (undo-tree-id24235 . -3) (undo-tree-id24236 . -3) (undo-tree-id24237 . -3) (undo-tree-id24238 . -3) (undo-tree-id24239 . -3) (undo-tree-id24240 . -3) (undo-tree-id24241 . -3) (undo-tree-id24242 . -3) (undo-tree-id24243 . -3) (undo-tree-id24244 . -3) (undo-tree-id24245 . -3) (undo-tree-id24246 . -3) (undo-tree-id24247 . -3) (undo-tree-id24248 . -3) (undo-tree-id24249 . -3) (undo-tree-id24250 . -3) (undo-tree-id24251 . -3) (undo-tree-id24252 . -3) (undo-tree-id24253 . -3) (undo-tree-id24254 . -3) (undo-tree-id24255 . -3) (undo-tree-id24256 . -3) (undo-tree-id24257 . -3) (undo-tree-id24258 . -3) (undo-tree-id24259 . -3) (undo-tree-id24260 . -3) (undo-tree-id24261 . -3) (undo-tree-id24262 . -3) (undo-tree-id24263 . -3) (undo-tree-id24264 . -3) (undo-tree-id24265 . -3) (undo-tree-id24266 . -3) (undo-tree-id24267 . -3) (undo-tree-id24268 . -3) (undo-tree-id24269 . -3) (undo-tree-id24270 . -3) (undo-tree-id24271 . -3) (undo-tree-id24272 . -3) (undo-tree-id24273 . -3) (undo-tree-id24274 . -3) (undo-tree-id24275 . -3) (undo-tree-id24276 . -3) (undo-tree-id24277 . -3) (undo-tree-id24278 . -3) (undo-tree-id24279 . -3) 6154) nil (26715 41240 97969 503000) 0 nil])
([nil nil ((#("n\\" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-string-face fontified t)) . -6149) (undo-tree-id24097 . -2) (undo-tree-id24098 . -2) (undo-tree-id24099 . -2) (undo-tree-id24100 . -2) (undo-tree-id24101 . -2) (undo-tree-id24102 . -2) (undo-tree-id24103 . -2) (undo-tree-id24104 . -2) (undo-tree-id24105 . -2) (undo-tree-id24106 . -2) (undo-tree-id24107 . -2) (undo-tree-id24108 . -2) (undo-tree-id24109 . -2) (undo-tree-id24110 . -2) (undo-tree-id24111 . -2) (undo-tree-id24112 . -2) (undo-tree-id24113 . -2) (undo-tree-id24114 . -2) (undo-tree-id24115 . -2) (undo-tree-id24116 . -2) (undo-tree-id24117 . -2) (undo-tree-id24118 . -2) (undo-tree-id24119 . -2) (undo-tree-id24120 . -2) (undo-tree-id24121 . -2) (undo-tree-id24122 . -2) (undo-tree-id24123 . -2) (undo-tree-id24124 . -2) (undo-tree-id24125 . -2) (undo-tree-id24126 . -2) (undo-tree-id24127 . -2) (undo-tree-id24128 . -2) (undo-tree-id24129 . -2) (undo-tree-id24130 . -2) (undo-tree-id24131 . -2) (undo-tree-id24132 . -2) (undo-tree-id24133 . -2) (undo-tree-id24134 . -2) (undo-tree-id24135 . -2) (undo-tree-id24136 . -2) (undo-tree-id24137 . -2) (undo-tree-id24138 . -2) (undo-tree-id24139 . -2) (undo-tree-id24140 . -2) (undo-tree-id24141 . -2) (undo-tree-id24142 . -2) (undo-tree-id24143 . -2) (undo-tree-id24144 . -2) (undo-tree-id24145 . -2) (undo-tree-id24146 . -2) (undo-tree-id24147 . -2) (undo-tree-id24148 . -2) (undo-tree-id24149 . -2) (undo-tree-id24150 . -2) (undo-tree-id24151 . -2) (undo-tree-id24152 . -2) (undo-tree-id24153 . -2) (undo-tree-id24154 . -2) (undo-tree-id24155 . -2) (undo-tree-id24156 . -2) (undo-tree-id24157 . -2) (undo-tree-id24158 . -2) (undo-tree-id24159 . -2) (undo-tree-id24160 . -2) (undo-tree-id24161 . -2) (undo-tree-id24162 . -2) (undo-tree-id24163 . -2) (undo-tree-id24164 . -2) (undo-tree-id24165 . -2) (undo-tree-id24166 . -2) (undo-tree-id24167 . -2) (undo-tree-id24168 . -2) (undo-tree-id24169 . -2) (undo-tree-id24170 . -2) (undo-tree-id24171 . -2) (undo-tree-id24172 . -2) (undo-tree-id24173 . -2) (undo-tree-id24174 . -2) (undo-tree-id24175 . -2) (undo-tree-id24176 . -2) (undo-tree-id24177 . -2) (undo-tree-id24178 . -2) (undo-tree-id24179 . -2) (undo-tree-id24180 . -2) (undo-tree-id24181 . -2) (undo-tree-id24182 . -2) (undo-tree-id24183 . -2) (undo-tree-id24184 . -2) (undo-tree-id24185 . -2) (undo-tree-id24186 . -2) (undo-tree-id24187 . -2) (undo-tree-id24188 . -2) (undo-tree-id24189 . -2) (undo-tree-id24190 . -2) 6151) nil (26715 41240 97868 913000) 0 nil])
([nil nil ((#("0):\\" 0 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t)) . -6145) (undo-tree-id23997 . -4) (undo-tree-id23998 . -2) (undo-tree-id23999 . -4) (undo-tree-id24000 . -4) (undo-tree-id24001 . -4) (undo-tree-id24002 . -4) (undo-tree-id24003 . -4) (undo-tree-id24004 . -4) (undo-tree-id24005 . -4) (undo-tree-id24006 . -4) (undo-tree-id24007 . -4) (undo-tree-id24008 . -4) (undo-tree-id24009 . -4) (undo-tree-id24010 . -4) (undo-tree-id24011 . -4) (undo-tree-id24012 . -4) (undo-tree-id24013 . -4) (undo-tree-id24014 . -4) (undo-tree-id24015 . -4) (undo-tree-id24016 . -4) (undo-tree-id24017 . -4) (undo-tree-id24018 . -4) (undo-tree-id24019 . -4) (undo-tree-id24020 . -4) (undo-tree-id24021 . -4) (undo-tree-id24022 . -4) (undo-tree-id24023 . -4) (undo-tree-id24024 . -4) (undo-tree-id24025 . -4) (undo-tree-id24026 . -4) (undo-tree-id24027 . -4) (undo-tree-id24028 . -4) (undo-tree-id24029 . -4) (undo-tree-id24030 . -4) (undo-tree-id24031 . -4) (undo-tree-id24032 . -4) (undo-tree-id24033 . -4) (undo-tree-id24034 . -4) (undo-tree-id24035 . -4) (undo-tree-id24036 . -4) (undo-tree-id24037 . -4) (undo-tree-id24038 . -4) (undo-tree-id24039 . -4) (undo-tree-id24040 . -4) (undo-tree-id24041 . -4) (undo-tree-id24042 . -4) (undo-tree-id24043 . -4) (undo-tree-id24044 . -4) (undo-tree-id24045 . -4) (undo-tree-id24046 . -4) (undo-tree-id24047 . -4) (undo-tree-id24048 . -4) (undo-tree-id24049 . -4) (undo-tree-id24050 . -4) (undo-tree-id24051 . -4) (undo-tree-id24052 . -4) (undo-tree-id24053 . -4) (undo-tree-id24054 . -4) (undo-tree-id24055 . -4) (undo-tree-id24056 . -4) (undo-tree-id24057 . -4) (undo-tree-id24058 . -4) (undo-tree-id24059 . -4) (undo-tree-id24060 . -4) (undo-tree-id24061 . -4) (undo-tree-id24062 . -4) (undo-tree-id24063 . -4) (undo-tree-id24064 . -4) (undo-tree-id24065 . -4) (undo-tree-id24066 . -4) (undo-tree-id24067 . -4) (undo-tree-id24068 . -4) (undo-tree-id24069 . -4) (undo-tree-id24070 . -4) (undo-tree-id24071 . -4) (undo-tree-id24072 . -4) (undo-tree-id24073 . -4) (undo-tree-id24074 . -4) (undo-tree-id24075 . -4) (undo-tree-id24076 . -4) (undo-tree-id24077 . -4) (undo-tree-id24078 . -4) (undo-tree-id24079 . -4) (undo-tree-id24080 . -4) (undo-tree-id24081 . -4) (undo-tree-id24082 . -4) (undo-tree-id24083 . -4) (undo-tree-id24084 . -4) (undo-tree-id24085 . -4) (undo-tree-id24086 . -4) (undo-tree-id24087 . -4) (undo-tree-id24088 . -4) (undo-tree-id24089 . -4) (undo-tree-id24090 . -4) (undo-tree-id24091 . -4) (undo-tree-id24092 . -4) (undo-tree-id24093 . -4) (undo-tree-id24094 . -4) (undo-tree-id24095 . -4) (undo-tree-id24096 . -4) 6149) nil (26715 41240 97729 556000) 0 nil])
([nil nil ((#("A)))), " 0 7 (face font-lock-string-face fontified t)) . -6138) (undo-tree-id23892 . -7) (undo-tree-id23893 . -7) (undo-tree-id23894 . -7) (undo-tree-id23895 . -7) (undo-tree-id23896 . -7) (undo-tree-id23897 . -7) (undo-tree-id23898 . -7) (undo-tree-id23899 . -7) (undo-tree-id23900 . -7) (undo-tree-id23901 . -7) (undo-tree-id23902 . -7) (undo-tree-id23903 . -7) (undo-tree-id23904 . -7) (undo-tree-id23905 . -7) (undo-tree-id23906 . -7) (undo-tree-id23907 . -7) (undo-tree-id23908 . -7) (undo-tree-id23909 . -7) (undo-tree-id23910 . -7) (undo-tree-id23911 . -7) (undo-tree-id23912 . -7) (undo-tree-id23913 . -7) (undo-tree-id23914 . -7) (undo-tree-id23915 . -7) (undo-tree-id23916 . -7) (undo-tree-id23917 . -7) (undo-tree-id23918 . -7) (undo-tree-id23919 . -7) (undo-tree-id23920 . -7) (undo-tree-id23921 . -7) (undo-tree-id23922 . -7) (undo-tree-id23923 . -7) (undo-tree-id23924 . -7) (undo-tree-id23925 . -7) (undo-tree-id23926 . -7) (undo-tree-id23927 . -7) (undo-tree-id23928 . -7) (undo-tree-id23929 . -7) (undo-tree-id23930 . -7) (undo-tree-id23931 . -7) (undo-tree-id23932 . -7) (undo-tree-id23933 . -7) (undo-tree-id23934 . -7) (undo-tree-id23935 . -7) (undo-tree-id23936 . -7) (undo-tree-id23937 . -7) (undo-tree-id23938 . -7) (undo-tree-id23939 . -7) (undo-tree-id23940 . -7) (undo-tree-id23941 . -7) (undo-tree-id23942 . -7) (undo-tree-id23943 . -7) (undo-tree-id23944 . -7) (undo-tree-id23945 . -7) (undo-tree-id23946 . -7) (undo-tree-id23947 . -7) (undo-tree-id23948 . -7) (undo-tree-id23949 . -7) (undo-tree-id23950 . -7) (undo-tree-id23951 . -7) (undo-tree-id23952 . -7) (undo-tree-id23953 . -7) (undo-tree-id23954 . -7) (undo-tree-id23955 . -7) (undo-tree-id23956 . -7) (undo-tree-id23957 . -7) (undo-tree-id23958 . -7) (undo-tree-id23959 . -7) (undo-tree-id23960 . -7) (undo-tree-id23961 . -7) (undo-tree-id23962 . -7) (undo-tree-id23963 . -7) (undo-tree-id23964 . -7) (undo-tree-id23965 . -7) (undo-tree-id23966 . -7) (undo-tree-id23967 . -7) (undo-tree-id23968 . -7) (undo-tree-id23969 . -7) (undo-tree-id23970 . -7) (undo-tree-id23971 . -7) (undo-tree-id23972 . -7) (undo-tree-id23973 . -7) (undo-tree-id23974 . -7) (undo-tree-id23975 . -7) (undo-tree-id23976 . -7) (undo-tree-id23977 . -7) (undo-tree-id23978 . -7) (undo-tree-id23979 . -7) (undo-tree-id23980 . -7) (undo-tree-id23981 . -7) (undo-tree-id23982 . -7) (undo-tree-id23983 . -7) (undo-tree-id23984 . -7) (undo-tree-id23985 . -7) (undo-tree-id23986 . -7) (undo-tree-id23987 . -7) (undo-tree-id23988 . -7) (undo-tree-id23989 . -7) (undo-tree-id23990 . -7) (undo-tree-id23991 . -7) (undo-tree-id23992 . -7) (undo-tree-id23993 . -7) (undo-tree-id23994 . -7) (undo-tree-id23995 . -7) (undo-tree-id23996 . -7) 6145) nil (26715 41240 97571 132000) 0 nil])
([nil nil ((#("theta(" 0 2 (face font-lock-string-face fontified t) 2 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t)) . -6132) (undo-tree-id23782 . -6) (undo-tree-id23783 . -6) (undo-tree-id23784 . -6) (undo-tree-id23785 . -6) (undo-tree-id23786 . -6) (undo-tree-id23787 . -6) (undo-tree-id23788 . -6) (undo-tree-id23789 . -6) (undo-tree-id23790 . -6) (undo-tree-id23791 . -6) (undo-tree-id23792 . -6) (undo-tree-id23793 . -6) (undo-tree-id23794 . -6) (undo-tree-id23795 . -6) (undo-tree-id23796 . -6) (undo-tree-id23797 . -6) (undo-tree-id23798 . -6) (undo-tree-id23799 . -6) (undo-tree-id23800 . -6) (undo-tree-id23801 . -6) (undo-tree-id23802 . -6) (undo-tree-id23803 . -6) (undo-tree-id23804 . -6) (undo-tree-id23805 . -6) (undo-tree-id23806 . -6) (undo-tree-id23807 . -6) (undo-tree-id23808 . -6) (undo-tree-id23809 . -6) (undo-tree-id23810 . -6) (undo-tree-id23811 . -6) (undo-tree-id23812 . -6) (undo-tree-id23813 . -6) (undo-tree-id23814 . -6) (undo-tree-id23815 . -6) (undo-tree-id23816 . -6) (undo-tree-id23817 . -6) (undo-tree-id23818 . -6) (undo-tree-id23819 . -6) (undo-tree-id23820 . -6) (undo-tree-id23821 . -6) (undo-tree-id23822 . -6) (undo-tree-id23823 . -6) (undo-tree-id23824 . -6) (undo-tree-id23825 . -6) (undo-tree-id23826 . -6) (undo-tree-id23827 . -6) (undo-tree-id23828 . -6) (undo-tree-id23829 . -6) (undo-tree-id23830 . -6) (undo-tree-id23831 . -6) (undo-tree-id23832 . -6) (undo-tree-id23833 . -6) (undo-tree-id23834 . -6) (undo-tree-id23835 . -6) (undo-tree-id23836 . -6) (undo-tree-id23837 . -6) (undo-tree-id23838 . -6) (undo-tree-id23839 . -6) (undo-tree-id23840 . -6) (undo-tree-id23841 . -6) (undo-tree-id23842 . -6) (undo-tree-id23843 . -6) (undo-tree-id23844 . -6) (undo-tree-id23845 . -6) (undo-tree-id23846 . -6) (undo-tree-id23847 . -6) (undo-tree-id23848 . -6) (undo-tree-id23849 . -6) (undo-tree-id23850 . -6) (undo-tree-id23851 . -6) (undo-tree-id23852 . -6) (undo-tree-id23853 . -6) (undo-tree-id23854 . -6) (undo-tree-id23855 . -6) (undo-tree-id23856 . -6) (undo-tree-id23857 . -6) (undo-tree-id23858 . -6) (undo-tree-id23859 . -6) (undo-tree-id23860 . -6) (undo-tree-id23861 . -6) (undo-tree-id23862 . -6) (undo-tree-id23863 . -6) (undo-tree-id23864 . -6) (undo-tree-id23865 . -6) (undo-tree-id23866 . -6) (undo-tree-id23867 . -6) (undo-tree-id23868 . -6) (undo-tree-id23869 . -6) (undo-tree-id23870 . -6) (undo-tree-id23871 . -6) (undo-tree-id23872 . -6) (undo-tree-id23873 . -6) (undo-tree-id23874 . -6) (undo-tree-id23875 . -6) (undo-tree-id23876 . -6) (undo-tree-id23877 . -6) (undo-tree-id23878 . -6) (undo-tree-id23879 . -6) (undo-tree-id23880 . -6) (undo-tree-id23881 . -6) (undo-tree-id23882 . -6) (undo-tree-id23883 . -6) (undo-tree-id23884 . -6) (undo-tree-id23885 . -6) (undo-tree-id23886 . -6) (undo-tree-id23887 . -6) (undo-tree-id23888 . -6) (undo-tree-id23889 . -6) (undo-tree-id23890 . -6) (undo-tree-id23891 . -6) 6138) nil (26715 41240 97403 166000) 0 nil])
([nil nil ((#("rho(" 0 4 (face font-lock-string-face fontified t)) . -6128) (undo-tree-id23667 . -4) (undo-tree-id23668 . -4) (undo-tree-id23669 . -4) (undo-tree-id23670 . -4) (undo-tree-id23671 . -4) (undo-tree-id23672 . -4) (undo-tree-id23673 . -4) (undo-tree-id23674 . -4) (undo-tree-id23675 . -4) (undo-tree-id23676 . -4) (undo-tree-id23677 . -4) (undo-tree-id23678 . -4) (undo-tree-id23679 . -4) (undo-tree-id23680 . -4) (undo-tree-id23681 . -4) (undo-tree-id23682 . -4) (undo-tree-id23683 . -4) (undo-tree-id23684 . -4) (undo-tree-id23685 . -4) (undo-tree-id23686 . -4) (undo-tree-id23687 . -4) (undo-tree-id23688 . -4) (undo-tree-id23689 . -4) (undo-tree-id23690 . -4) (undo-tree-id23691 . -4) (undo-tree-id23692 . -4) (undo-tree-id23693 . -4) (undo-tree-id23694 . -4) (undo-tree-id23695 . -4) (undo-tree-id23696 . -4) (undo-tree-id23697 . -4) (undo-tree-id23698 . -4) (undo-tree-id23699 . -4) (undo-tree-id23700 . -4) (undo-tree-id23701 . -4) (undo-tree-id23702 . -4) (undo-tree-id23703 . -4) (undo-tree-id23704 . -4) (undo-tree-id23705 . -4) (undo-tree-id23706 . -4) (undo-tree-id23707 . -4) (undo-tree-id23708 . -4) (undo-tree-id23709 . -4) (undo-tree-id23710 . -4) (undo-tree-id23711 . -4) (undo-tree-id23712 . -4) (undo-tree-id23713 . -4) (undo-tree-id23714 . -4) (undo-tree-id23715 . -4) (undo-tree-id23716 . -4) (undo-tree-id23717 . -4) (undo-tree-id23718 . -4) (undo-tree-id23719 . -4) (undo-tree-id23720 . -4) (undo-tree-id23721 . -4) (undo-tree-id23722 . -4) (undo-tree-id23723 . -4) (undo-tree-id23724 . -4) (undo-tree-id23725 . -4) (undo-tree-id23726 . -4) (undo-tree-id23727 . -4) (undo-tree-id23728 . -4) (undo-tree-id23729 . -4) (undo-tree-id23730 . -4) (undo-tree-id23731 . -4) (undo-tree-id23732 . -4) (undo-tree-id23733 . -4) (undo-tree-id23734 . -4) (undo-tree-id23735 . -4) (undo-tree-id23736 . -4) (undo-tree-id23737 . -4) (undo-tree-id23738 . -4) (undo-tree-id23739 . -4) (undo-tree-id23740 . -4) (undo-tree-id23741 . -4) (undo-tree-id23742 . -4) (undo-tree-id23743 . -4) (undo-tree-id23744 . -4) (undo-tree-id23745 . -4) (undo-tree-id23746 . -4) (undo-tree-id23747 . -4) (undo-tree-id23748 . -4) (undo-tree-id23749 . -4) (undo-tree-id23750 . -4) (undo-tree-id23751 . -4) (undo-tree-id23752 . -4) (undo-tree-id23753 . -4) (undo-tree-id23754 . -4) (undo-tree-id23755 . -4) (undo-tree-id23756 . -4) (undo-tree-id23757 . -4) (undo-tree-id23758 . -4) (undo-tree-id23759 . -4) (undo-tree-id23760 . -4) (undo-tree-id23761 . -4) (undo-tree-id23762 . -4) (undo-tree-id23763 . -4) (undo-tree-id23764 . -4) (undo-tree-id23765 . -4) (undo-tree-id23766 . -4) (undo-tree-id23767 . -4) (undo-tree-id23768 . -4) (undo-tree-id23769 . -4) (undo-tree-id23770 . -4) (undo-tree-id23771 . -4) (undo-tree-id23772 . -4) (undo-tree-id23773 . -4) (undo-tree-id23774 . -4) (undo-tree-id23775 . -4) (undo-tree-id23776 . -4) (undo-tree-id23777 . -4) (undo-tree-id23778 . -4) (undo-tree-id23779 . -4) (undo-tree-id23780 . -4) (undo-tree-id23781 . -4) 6132) nil (26715 41240 97229 573000) 0 nil])
([nil nil ((#("pi(" 0 3 (face font-lock-string-face fontified t)) . -6125) (undo-tree-id23547 . -3) (undo-tree-id23548 . -3) (undo-tree-id23549 . -3) (undo-tree-id23550 . -3) (undo-tree-id23551 . -3) (undo-tree-id23552 . -3) (undo-tree-id23553 . -3) (undo-tree-id23554 . -3) (undo-tree-id23555 . -3) (undo-tree-id23556 . -3) (undo-tree-id23557 . -3) (undo-tree-id23558 . -3) (undo-tree-id23559 . -3) (undo-tree-id23560 . -3) (undo-tree-id23561 . -3) (undo-tree-id23562 . -3) (undo-tree-id23563 . -3) (undo-tree-id23564 . -3) (undo-tree-id23565 . -3) (undo-tree-id23566 . -3) (undo-tree-id23567 . -3) (undo-tree-id23568 . -3) (undo-tree-id23569 . -3) (undo-tree-id23570 . -3) (undo-tree-id23571 . -3) (undo-tree-id23572 . -3) (undo-tree-id23573 . -3) (undo-tree-id23574 . -3) (undo-tree-id23575 . -3) (undo-tree-id23576 . -3) (undo-tree-id23577 . -3) (undo-tree-id23578 . -3) (undo-tree-id23579 . -3) (undo-tree-id23580 . -3) (undo-tree-id23581 . -3) (undo-tree-id23582 . -3) (undo-tree-id23583 . -3) (undo-tree-id23584 . -3) (undo-tree-id23585 . -3) (undo-tree-id23586 . -3) (undo-tree-id23587 . -3) (undo-tree-id23588 . -3) (undo-tree-id23589 . -3) (undo-tree-id23590 . -3) (undo-tree-id23591 . -3) (undo-tree-id23592 . -3) (undo-tree-id23593 . -3) (undo-tree-id23594 . -3) (undo-tree-id23595 . -3) (undo-tree-id23596 . -3) (undo-tree-id23597 . -3) (undo-tree-id23598 . -3) (undo-tree-id23599 . -3) (undo-tree-id23600 . -3) (undo-tree-id23601 . -3) (undo-tree-id23602 . -3) (undo-tree-id23603 . -3) (undo-tree-id23604 . -3) (undo-tree-id23605 . -3) (undo-tree-id23606 . -3) (undo-tree-id23607 . -3) (undo-tree-id23608 . -3) (undo-tree-id23609 . -3) (undo-tree-id23610 . -3) (undo-tree-id23611 . -3) (undo-tree-id23612 . -3) (undo-tree-id23613 . -3) (undo-tree-id23614 . -3) (undo-tree-id23615 . -3) (undo-tree-id23616 . -3) (undo-tree-id23617 . -3) (undo-tree-id23618 . -3) (undo-tree-id23619 . -3) (undo-tree-id23620 . -3) (undo-tree-id23621 . -3) (undo-tree-id23622 . -3) (undo-tree-id23623 . -3) (undo-tree-id23624 . -3) (undo-tree-id23625 . -3) (undo-tree-id23626 . -3) (undo-tree-id23627 . -3) (undo-tree-id23628 . -3) (undo-tree-id23629 . -3) (undo-tree-id23630 . -3) (undo-tree-id23631 . -3) (undo-tree-id23632 . -3) (undo-tree-id23633 . -3) (undo-tree-id23634 . -3) (undo-tree-id23635 . -3) (undo-tree-id23636 . -3) (undo-tree-id23637 . -3) (undo-tree-id23638 . -3) (undo-tree-id23639 . -3) (undo-tree-id23640 . -3) (undo-tree-id23641 . -3) (undo-tree-id23642 . -3) (undo-tree-id23643 . -3) (undo-tree-id23644 . -3) (undo-tree-id23645 . -3) (undo-tree-id23646 . -3) (undo-tree-id23647 . -3) (undo-tree-id23648 . -3) (undo-tree-id23649 . -3) (undo-tree-id23650 . -3) (undo-tree-id23651 . -3) (undo-tree-id23652 . -3) (undo-tree-id23653 . -3) (undo-tree-id23654 . -3) (undo-tree-id23655 . -3) (undo-tree-id23656 . -3) (undo-tree-id23657 . -3) (undo-tree-id23658 . -3) (undo-tree-id23659 . -3) (undo-tree-id23660 . -3) (undo-tree-id23661 . -3) (undo-tree-id23662 . -3) (undo-tree-id23663 . -3) (undo-tree-id23664 . -3) (undo-tree-id23665 . -3) (undo-tree-id23666 . -3) 6128) nil (26715 41240 97048 510000) 0 nil])
([nil nil ((#("chi(" 0 4 (face font-lock-string-face fontified t)) . -6121) (undo-tree-id23422 . -4) (undo-tree-id23423 . -4) (undo-tree-id23424 . -4) (undo-tree-id23425 . -4) (undo-tree-id23426 . -4) (undo-tree-id23427 . -4) (undo-tree-id23428 . -4) (undo-tree-id23429 . -4) (undo-tree-id23430 . -4) (undo-tree-id23431 . -4) (undo-tree-id23432 . -4) (undo-tree-id23433 . -4) (undo-tree-id23434 . -4) (undo-tree-id23435 . -4) (undo-tree-id23436 . -4) (undo-tree-id23437 . -4) (undo-tree-id23438 . -4) (undo-tree-id23439 . -4) (undo-tree-id23440 . -4) (undo-tree-id23441 . -4) (undo-tree-id23442 . -4) (undo-tree-id23443 . -4) (undo-tree-id23444 . -4) (undo-tree-id23445 . -4) (undo-tree-id23446 . -4) (undo-tree-id23447 . -4) (undo-tree-id23448 . -4) (undo-tree-id23449 . -4) (undo-tree-id23450 . -4) (undo-tree-id23451 . -4) (undo-tree-id23452 . -4) (undo-tree-id23453 . -4) (undo-tree-id23454 . -4) (undo-tree-id23455 . -4) (undo-tree-id23456 . -4) (undo-tree-id23457 . -4) (undo-tree-id23458 . -4) (undo-tree-id23459 . -4) (undo-tree-id23460 . -4) (undo-tree-id23461 . -4) (undo-tree-id23462 . -4) (undo-tree-id23463 . -4) (undo-tree-id23464 . -4) (undo-tree-id23465 . -4) (undo-tree-id23466 . -4) (undo-tree-id23467 . -4) (undo-tree-id23468 . -4) (undo-tree-id23469 . -4) (undo-tree-id23470 . -4) (undo-tree-id23471 . -4) (undo-tree-id23472 . -4) (undo-tree-id23473 . -4) (undo-tree-id23474 . -4) (undo-tree-id23475 . -4) (undo-tree-id23476 . -4) (undo-tree-id23477 . -4) (undo-tree-id23478 . -4) (undo-tree-id23479 . -4) (undo-tree-id23480 . -4) (undo-tree-id23481 . -4) (undo-tree-id23482 . -4) (undo-tree-id23483 . -4) (undo-tree-id23484 . -4) (undo-tree-id23485 . -4) (undo-tree-id23486 . -4) (undo-tree-id23487 . -4) (undo-tree-id23488 . -4) (undo-tree-id23489 . -4) (undo-tree-id23490 . -4) (undo-tree-id23491 . -4) (undo-tree-id23492 . -4) (undo-tree-id23493 . -4) (undo-tree-id23494 . -4) (undo-tree-id23495 . -4) (undo-tree-id23496 . -4) (undo-tree-id23497 . -4) (undo-tree-id23498 . -4) (undo-tree-id23499 . -4) (undo-tree-id23500 . -4) (undo-tree-id23501 . -4) (undo-tree-id23502 . -4) (undo-tree-id23503 . -4) (undo-tree-id23504 . -4) (undo-tree-id23505 . -4) (undo-tree-id23506 . -4) (undo-tree-id23507 . -4) (undo-tree-id23508 . -4) (undo-tree-id23509 . -4) (undo-tree-id23510 . -4) (undo-tree-id23511 . -4) (undo-tree-id23512 . -4) (undo-tree-id23513 . -4) (undo-tree-id23514 . -4) (undo-tree-id23515 . -4) (undo-tree-id23516 . -4) (undo-tree-id23517 . -4) (undo-tree-id23518 . -4) (undo-tree-id23519 . -4) (undo-tree-id23520 . -4) (undo-tree-id23521 . -4) (undo-tree-id23522 . -4) (undo-tree-id23523 . -4) (undo-tree-id23524 . -4) (undo-tree-id23525 . -4) (undo-tree-id23526 . -4) (undo-tree-id23527 . -4) (undo-tree-id23528 . -4) (undo-tree-id23529 . -4) (undo-tree-id23530 . -4) (undo-tree-id23531 . -4) (undo-tree-id23532 . -4) (undo-tree-id23533 . -4) (undo-tree-id23534 . -4) (undo-tree-id23535 . -4) (undo-tree-id23536 . -4) (undo-tree-id23537 . -4) (undo-tree-id23538 . -4) (undo-tree-id23539 . -4) (undo-tree-id23540 . -4) (undo-tree-id23541 . -4) (undo-tree-id23542 . -4) (undo-tree-id23543 . -4) (undo-tree-id23544 . -4) (undo-tree-id23545 . -4) (undo-tree-id23546 . -4) 6125) nil (26715 41240 96851 483000) 0 nil])
([nil nil ((#("iota(" 0 5 (face font-lock-string-face fontified t)) . -6116) (undo-tree-id23292 . -5) (undo-tree-id23293 . -5) (undo-tree-id23294 . -5) (undo-tree-id23295 . -5) (undo-tree-id23296 . -5) (undo-tree-id23297 . -5) (undo-tree-id23298 . -5) (undo-tree-id23299 . -5) (undo-tree-id23300 . -5) (undo-tree-id23301 . -5) (undo-tree-id23302 . -5) (undo-tree-id23303 . -5) (undo-tree-id23304 . -5) (undo-tree-id23305 . -5) (undo-tree-id23306 . -5) (undo-tree-id23307 . -5) (undo-tree-id23308 . -5) (undo-tree-id23309 . -5) (undo-tree-id23310 . -5) (undo-tree-id23311 . -5) (undo-tree-id23312 . -5) (undo-tree-id23313 . -5) (undo-tree-id23314 . -5) (undo-tree-id23315 . -5) (undo-tree-id23316 . -5) (undo-tree-id23317 . -5) (undo-tree-id23318 . -5) (undo-tree-id23319 . -5) (undo-tree-id23320 . -5) (undo-tree-id23321 . -5) (undo-tree-id23322 . -5) (undo-tree-id23323 . -5) (undo-tree-id23324 . -5) (undo-tree-id23325 . -5) (undo-tree-id23326 . -5) (undo-tree-id23327 . -5) (undo-tree-id23328 . -5) (undo-tree-id23329 . -5) (undo-tree-id23330 . -5) (undo-tree-id23331 . -5) (undo-tree-id23332 . -5) (undo-tree-id23333 . -5) (undo-tree-id23334 . -5) (undo-tree-id23335 . -5) (undo-tree-id23336 . -5) (undo-tree-id23337 . -5) (undo-tree-id23338 . -5) (undo-tree-id23339 . -5) (undo-tree-id23340 . -5) (undo-tree-id23341 . -5) (undo-tree-id23342 . -5) (undo-tree-id23343 . -5) (undo-tree-id23344 . -5) (undo-tree-id23345 . -5) (undo-tree-id23346 . -5) (undo-tree-id23347 . -5) (undo-tree-id23348 . -5) (undo-tree-id23349 . -5) (undo-tree-id23350 . -5) (undo-tree-id23351 . -5) (undo-tree-id23352 . -5) (undo-tree-id23353 . -5) (undo-tree-id23354 . -5) (undo-tree-id23355 . -5) (undo-tree-id23356 . -5) (undo-tree-id23357 . -5) (undo-tree-id23358 . -5) (undo-tree-id23359 . -5) (undo-tree-id23360 . -5) (undo-tree-id23361 . -5) (undo-tree-id23362 . -5) (undo-tree-id23363 . -5) (undo-tree-id23364 . -5) (undo-tree-id23365 . -5) (undo-tree-id23366 . -5) (undo-tree-id23367 . -5) (undo-tree-id23368 . -5) (undo-tree-id23369 . -5) (undo-tree-id23370 . -5) (undo-tree-id23371 . -5) (undo-tree-id23372 . -5) (undo-tree-id23373 . -5) (undo-tree-id23374 . -5) (undo-tree-id23375 . -5) (undo-tree-id23376 . -5) (undo-tree-id23377 . -5) (undo-tree-id23378 . -5) (undo-tree-id23379 . -5) (undo-tree-id23380 . -5) (undo-tree-id23381 . -5) (undo-tree-id23382 . -5) (undo-tree-id23383 . -5) (undo-tree-id23384 . -5) (undo-tree-id23385 . -5) (undo-tree-id23386 . -5) (undo-tree-id23387 . -5) (undo-tree-id23388 . -5) (undo-tree-id23389 . -5) (undo-tree-id23390 . -5) (undo-tree-id23391 . -5) (undo-tree-id23392 . -5) (undo-tree-id23393 . -5) (undo-tree-id23394 . -5) (undo-tree-id23395 . -5) (undo-tree-id23396 . -5) (undo-tree-id23397 . -5) (undo-tree-id23398 . -5) (undo-tree-id23399 . -5) (undo-tree-id23400 . -5) (undo-tree-id23401 . -5) (undo-tree-id23402 . -5) (undo-tree-id23403 . -5) (undo-tree-id23404 . -5) (undo-tree-id23405 . -5) (undo-tree-id23406 . -5) (undo-tree-id23407 . -5) (undo-tree-id23408 . -5) (undo-tree-id23409 . -5) (undo-tree-id23410 . -5) (undo-tree-id23411 . -5) (undo-tree-id23412 . -5) (undo-tree-id23413 . -5) (undo-tree-id23414 . -5) (undo-tree-id23415 . -5) (undo-tree-id23416 . -5) (undo-tree-id23417 . -5) (undo-tree-id23418 . -5) (undo-tree-id23419 . -5) (undo-tree-id23420 . -5) (undo-tree-id23421 . -5) 6121) nil (26715 41240 96654 50000) 0 nil])
([nil nil ((6116 . 6137)) nil (26715 41240 96465 174000) 0 nil])
([nil nil ((6137 . 6143)) nil (26715 41240 96460 309000) 0 nil])
([nil nil ((6142 . 6146) (t 26715 41240 121632 419000)) nil (26715 41250 351108 287000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -5012) (undo-tree-id24850 . -1) (undo-tree-id24851 . -1) (undo-tree-id24852 . -1) (undo-tree-id24853 . -1) (undo-tree-id24854 . -1) (undo-tree-id24855 . -1) (undo-tree-id24856 . -1) (undo-tree-id24857 . -1) (undo-tree-id24858 . -1) (undo-tree-id24859 . -1) (undo-tree-id24860 . -1) (undo-tree-id24861 . -1) (undo-tree-id24862 . -1) (undo-tree-id24863 . -1) (undo-tree-id24864 . -1) (undo-tree-id24865 . -1) (undo-tree-id24866 . -1) (#(" " 0 1 (fontified t)) . -5013) (undo-tree-id24867 . -1) (undo-tree-id24868 . -1) (undo-tree-id24869 . -1) (undo-tree-id24870 . -1) (undo-tree-id24871 . -1) (undo-tree-id24872 . -1) (undo-tree-id24873 . -1) (undo-tree-id24874 . -1) (undo-tree-id24875 . -1) (undo-tree-id24876 . -1) (undo-tree-id24877 . -1) (undo-tree-id24878 . -1) (#("8" 0 1 (fontified t)) . -5014) (undo-tree-id24879 . -1) (undo-tree-id24880 . -1) (undo-tree-id24881 . -1) (undo-tree-id24882 . -1) (undo-tree-id24883 . -1) (undo-tree-id24884 . -1) 5015 (t 26715 41250 374326 264000)) nil (26715 41777 609409 854000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -5209) (undo-tree-id24796 . -1) (undo-tree-id24797 . -1) (undo-tree-id24798 . -1) (undo-tree-id24799 . -1) (undo-tree-id24800 . -1) (undo-tree-id24801 . -1) (undo-tree-id24802 . -1) (undo-tree-id24803 . -1) (undo-tree-id24804 . -1) (undo-tree-id24805 . -1) (undo-tree-id24806 . -1) (undo-tree-id24807 . -1) (undo-tree-id24808 . -1) (undo-tree-id24809 . -1) (undo-tree-id24810 . -1) (undo-tree-id24811 . -1) (undo-tree-id24812 . -1) (undo-tree-id24813 . -1) (undo-tree-id24814 . -1) (undo-tree-id24815 . -1) (undo-tree-id24816 . -1) (#(" " 0 1 (fontified t)) . -5210) (undo-tree-id24817 . -1) (undo-tree-id24818 . -1) (undo-tree-id24819 . -1) (undo-tree-id24820 . -1) (undo-tree-id24821 . -1) (undo-tree-id24822 . -1) (undo-tree-id24823 . -1) (undo-tree-id24824 . -1) (undo-tree-id24825 . -1) (undo-tree-id24826 . -1) (undo-tree-id24827 . -1) (undo-tree-id24828 . -1) (undo-tree-id24829 . -1) (undo-tree-id24830 . -1) (undo-tree-id24831 . -1) (undo-tree-id24832 . -1) (#("8" 0 1 (fontified t)) . -5211) (undo-tree-id24833 . -1) (undo-tree-id24834 . -1) (undo-tree-id24835 . -1) (undo-tree-id24836 . -1) (undo-tree-id24837 . -1) (undo-tree-id24838 . -1) (undo-tree-id24839 . -1) (undo-tree-id24840 . -1) (undo-tree-id24841 . -1) (undo-tree-id24842 . -1) (undo-tree-id24843 . -1) (#(")" 0 1 (fontified t)) . -5212) (undo-tree-id24844 . -1) (undo-tree-id24845 . -1) (undo-tree-id24846 . -1) (undo-tree-id24847 . -1) (undo-tree-id24848 . -1) (undo-tree-id24849 . -1) 5213) nil (26715 41792 998439 666000) 0 nil])
([nil nil ((5209 . 5210)) ((")" . 5209) (t 26715 41777 631876 207000)) (26715 41793 661762 504000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6060) (undo-tree-id24886 . -1) (undo-tree-id24887 . -1) (undo-tree-id24888 . -1) (undo-tree-id24889 . -1) (undo-tree-id24890 . -1) (undo-tree-id24891 . -1) (undo-tree-id24892 . -1) (undo-tree-id24893 . -1) (undo-tree-id24894 . -1) (undo-tree-id24895 . -1) (undo-tree-id24896 . -1) (undo-tree-id24897 . -1) (#(" " 0 1 (fontified t)) . -6061) (undo-tree-id24898 . -1) (undo-tree-id24899 . -1) (undo-tree-id24900 . -1) (undo-tree-id24901 . -1) (undo-tree-id24902 . -1) (undo-tree-id24903 . -1) (undo-tree-id24904 . -1) (#("4" 0 1 (fontified t)) . -6062) (undo-tree-id24905 . -1) 6063 (t 26715 41777 631876 207000)) nil (26715 41800 194815 197000) 0 nil] [nil nil ((1 . 2) (t 26715 41777 631876 207000)) ((#("e" 0 1 (fontified t)) . 1) (undo-tree-id24885 . -1)) (26715 41792 590088 219000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6306 . 6307) (nil fontified nil 6306 . 6307) (nil fontified nil 6288 . 6306) (nil fontified nil 6274 . 6288) (nil fontified nil 6273 . 6274) (nil fontified nil 6268 . 6273) (nil fontified nil 6264 . 6268) (nil fontified nil 6263 . 6264) (nil fontified nil 6250 . 6263) (nil fontified nil 6248 . 6250) (nil fontified nil 6245 . 6248) (nil fontified nil 6242 . 6245) (nil fontified nil 6238 . 6242) (nil fontified nil 6236 . 6238) (nil fontified nil 6233 . 6236) (nil fontified nil 6230 . 6233) (nil fontified nil 6213 . 6230) (nil fontified nil 6210 . 6213) (nil fontified nil 6209 . 6210) (nil fontified nil 6208 . 6209) (nil fontified nil 6193 . 6208) (nil fontified nil 6189 . 6193) (nil fontified nil 6156 . 6189) (nil fontified nil 6155 . 6156) (nil fontified nil 6154 . 6155) (nil fontified nil 6143 . 6154) (nil fontified nil 6139 . 6143) (6139 . 6307) (t 26715 41800 216661 333000)) nil (26715 41930 509249 671000) 0 nil])
nil
([nil nil ((6139 . 6140)) nil (26715 41930 509248 126000) 0 nil])
([nil nil ((#("first" 0 5 (face font-lock-variable-name-face fontified t)) . -6144) (undo-tree-id24908 . -5) 6149) nil (26715 41930 509247 675000) 0 nil])
([nil nil ((6144 . 6150)) nil (26715 41930 509246 578000) 0 nil])
([nil nil ((#("first" 0 5 (face font-lock-variable-name-face fontified t)) . -6195) (undo-tree-id24907 . -5) 6200) nil (26715 41930 509246 61000) 0 nil])
([nil nil ((6195 . 6201)) nil (26715 41930 509244 564000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -6188) (undo-tree-id24906 . -1) 6189) nil (26715 41930 509243 735000) 0 nil])
([nil nil ((6188 . 6189)) nil (26715 41930 509232 796000) 0 nil])
([nil nil ((#("first" 0 5 (face font-lock-string-face fontified t)) . -6278) (undo-tree-id24915 . -5) 6283 (t 26715 41930 532882 415000)) nil (26715 41935 684466 636000) 0 nil])
([nil nil ((6278 . 6284)) nil (26715 41935 684465 520000) 0 nil])
([nil nil ((#("first" 0 5 (fontified t)) . -6294) (undo-tree-id24909 . -5) (undo-tree-id24910 . -5) (undo-tree-id24911 . -5) (undo-tree-id24912 . -5) (undo-tree-id24913 . -5) (undo-tree-id24914 . -5) 6299) nil (26715 41935 684464 515000) 0 nil])
([nil nil ((6294 . 6300)) nil (26715 41935 684449 927000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -6181) (undo-tree-id24980 . -1) (undo-tree-id24981 . -1) (undo-tree-id24982 . -1) (undo-tree-id24983 . -1) (undo-tree-id24984 . -1) (undo-tree-id24985 . -1) (undo-tree-id24986 . -1) (undo-tree-id24987 . -1) (undo-tree-id24988 . -1) (undo-tree-id24989 . -1) (undo-tree-id24990 . -1) (undo-tree-id24991 . -1) (undo-tree-id24992 . -1) (undo-tree-id24993 . -1) (undo-tree-id24994 . -1) (undo-tree-id24995 . -1) 6182 (t 26715 41935 709040 265000)) nil (26715 41967 604712 302000) 0 nil])
([nil nil ((6181 . 6190)) nil (26715 41967 604703 876000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -6188) (undo-tree-id24958 . -1) (undo-tree-id24959 . -1) (undo-tree-id24960 . -1) (undo-tree-id24961 . -1) (undo-tree-id24962 . -1) (undo-tree-id24963 . -1) (undo-tree-id24964 . -1) (undo-tree-id24965 . -1) (undo-tree-id24966 . -1) (undo-tree-id24967 . -1) (undo-tree-id24968 . -1) (undo-tree-id24969 . -1) (undo-tree-id24970 . -1) (undo-tree-id24971 . -1) (undo-tree-id24972 . -1) (undo-tree-id24973 . -1) (#("n" 0 1 (fontified t)) . -6189) (undo-tree-id24974 . -1) (undo-tree-id24975 . -1) (undo-tree-id24976 . -1) (undo-tree-id24977 . -1) (undo-tree-id24978 . -1) (undo-tree-id24979 . -1) 6190) nil (26715 41967 604703 0) 0 nil])
([nil nil ((6188 . 6189)) nil (26715 41967 604691 437000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -6187) (undo-tree-id24916 . -1) (undo-tree-id24917 . -1) (undo-tree-id24918 . -1) (undo-tree-id24919 . -1) (undo-tree-id24920 . -1) (undo-tree-id24921 . -1) (undo-tree-id24922 . -1) (undo-tree-id24923 . -1) (undo-tree-id24924 . -1) (undo-tree-id24925 . -1) (undo-tree-id24926 . -1) (undo-tree-id24927 . -1) (undo-tree-id24928 . -1) (undo-tree-id24929 . -1) (undo-tree-id24930 . -1) (undo-tree-id24931 . -1) (undo-tree-id24932 . -1) (undo-tree-id24933 . -1) (undo-tree-id24934 . -1) (undo-tree-id24935 . -1) (undo-tree-id24936 . -1) (undo-tree-id24937 . -1) (undo-tree-id24938 . -1) (undo-tree-id24939 . -1) (undo-tree-id24940 . -1) (undo-tree-id24941 . -1) (undo-tree-id24942 . -1) (undo-tree-id24943 . -1) (undo-tree-id24944 . -1) (undo-tree-id24945 . -1) (undo-tree-id24946 . -1) (undo-tree-id24947 . -1) (undo-tree-id24948 . -1) (undo-tree-id24949 . -1) (undo-tree-id24950 . -1) (undo-tree-id24951 . -1) (#("r" 0 1 (fontified t)) . -6188) (undo-tree-id24952 . -1) (undo-tree-id24953 . -1) (undo-tree-id24954 . -1) (undo-tree-id24955 . -1) (undo-tree-id24956 . -1) (undo-tree-id24957 . -1) 6189) nil (26715 41967 604689 762000) 0 nil])
([nil nil ((6187 . 6192)) nil (26715 41967 604657 104000) 0 nil])
([nil nil ((5970 . 5975) (t 26715 41967 625998 739000)) nil (26715 42194 610373 593000) 0 nil])
([nil nil ((5975 . 5984)) nil (26715 42194 610372 264000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -5981) (undo-tree-id25825 . -3) 5984) nil (26715 42194 610371 110000) 0 nil])
([nil nil ((#("i " 0 2 (fontified t)) . -5979) (undo-tree-id25824 . -2) 5981) nil (26715 42194 610367 889000) 0 nil])
([nil nil ((5979 . 5988)) nil (26715 42194 610365 251000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -5985) (undo-tree-id25823 . -3) 5988) nil (26715 42194 610363 854000) 0 nil])
([nil nil ((#("round " 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t)) . -5979) (undo-tree-id25822 . -6) 5985) nil (26715 42194 610360 820000) 0 nil])
([nil nil ((5979 . 5980)) nil (26715 42194 610358 197000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -5979) (undo-tree-id25821 . -1) 5980) nil (26715 42194 610357 11000) 0 nil])
([nil nil ((5979 . 5984)) nil (26715 42194 610354 182000) 0 nil])
([nil nil ((#("round" 0 5 (face font-lock-builtin-face fontified t)) . -5979) (undo-tree-id25820 . -5) 5984) nil (26715 42194 610353 26000) 0 nil])
([nil nil ((5979 . 5989)) nil (26715 42194 610350 108000) 0 nil])
([nil nil ((#("round = " 0 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (fontified t)) . -5981) (undo-tree-id25819 . -8) 5989) nil (26715 42194 610348 847000) 0 nil])
([nil nil ((5981 . 5982)) nil (26715 42194 610343 614000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -5981) (undo-tree-id25818 . -1) 5982) nil (26715 42194 610342 474000) 0 nil])
([nil nil ((5981 . 5997)) nil (26715 42194 610339 841000) 0 nil])
([nil nil ((5997 . 6000)) nil (26715 42194 610338 926000) 0 nil])
([nil nil ((6000 . 6009)) nil (26715 42194 610338 57000) 0 nil])
([nil nil ((6009 . 6010)) nil (26715 42194 610337 25000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -6009) (undo-tree-id25817 . -1) 6010) nil (26715 42194 610335 860000) 0 nil])
([nil nil ((6009 . 6021)) nil (26715 42194 610333 336000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-string-face fontified t)) . -6020) (undo-tree-id25816 . -1) 6021) nil (26715 42194 610332 141000) 0 nil])
([nil nil ((6020 . 6022)) nil (26715 42194 610329 543000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -6021) (undo-tree-id25815 . -1) 6022) nil (26715 42194 610328 353000) 0 nil])
([nil nil ((6021 . 6023)) nil (26715 42194 610325 772000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-string-face fontified t)) . -6021) (undo-tree-id25813 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -6022) (undo-tree-id25814 . -1) 6023) nil (26715 42194 610324 259000) 0 nil])
([nil nil ((6021 . 6023)) nil (26715 42194 610320 111000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6022) (undo-tree-id25812 . -1) 6023) nil (26715 42194 610318 869000) 0 nil])
([nil nil ((6022 . 6031)) nil (26715 42194 610316 201000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -6029) (undo-tree-id25810 . -1) (#("n" 0 1 (fontified t)) . -6030) (undo-tree-id25811 . -1) 6031) nil (26715 42194 610314 831000) 0 nil])
([nil nil ((6029 . 6038)) nil (26715 42194 610310 537000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -6036) (undo-tree-id25793 . -1) (undo-tree-id25794 . -1) (undo-tree-id25795 . -1) (undo-tree-id25796 . -1) (undo-tree-id25797 . -1) (undo-tree-id25798 . -1) (undo-tree-id25799 . -1) (undo-tree-id25800 . -1) (undo-tree-id25801 . -1) (undo-tree-id25802 . -1) (undo-tree-id25803 . -1) (#(")" 0 1 (fontified t)) . -6037) (undo-tree-id25804 . -1) (undo-tree-id25805 . -1) (undo-tree-id25806 . -1) (undo-tree-id25807 . -1) (undo-tree-id25808 . -1) (undo-tree-id25809 . -1) 6038) nil (26715 42194 610307 999000) 0 nil])
([nil nil ((6036 . 6038)) nil (26715 42194 610281 101000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -6036) (undo-tree-id25771 . -1) (undo-tree-id25772 . -1) (undo-tree-id25773 . -1) (undo-tree-id25774 . -1) (undo-tree-id25775 . -1) (undo-tree-id25776 . -1) (undo-tree-id25777 . -1) (undo-tree-id25778 . -1) (undo-tree-id25779 . -1) (undo-tree-id25780 . -1) (undo-tree-id25781 . -1) (undo-tree-id25782 . -1) (undo-tree-id25783 . -1) (undo-tree-id25784 . -1) (undo-tree-id25785 . -1) (undo-tree-id25786 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -6037) (undo-tree-id25787 . -1) (undo-tree-id25788 . -1) (undo-tree-id25789 . -1) (undo-tree-id25790 . -1) (undo-tree-id25791 . -1) (undo-tree-id25792 . -1) 6038) nil (26715 42194 610277 909000) 0 nil])
([nil nil ((6036 . 6040)) nil (26715 42194 610245 38000) 0 nil])
([nil nil ((6041 . 6049) (#("    " 0 4 (fontified t)) . 6041) (undo-tree-id25770 . -4) 6080) nil (26715 42194 610243 714000) 0 nil])
([nil nil ((#("first" 0 5 (face font-lock-variable-name-face fontified t)) . -6049) (undo-tree-id25769 . -5) 6054) nil (26715 42194 610240 574000) 0 nil])
([nil nil ((6049 . 6053)) nil (26715 42194 610237 865000) 0 nil])
([nil nil ((#("first" 0 5 (face font-lock-variable-name-face fontified t)) . -6098) (undo-tree-id25768 . -5) 6103) nil (26715 42194 610236 586000) 0 nil])
([nil nil ((6098 . 6102)) nil (26715 42194 610233 761000) 0 nil])
([nil nil ((6094 . 6102) (#("    " 0 4 (fontified t)) . 6094) (undo-tree-id25762 . -4) (undo-tree-id25763 . -4) (undo-tree-id25764 . -4) (undo-tree-id25765 . -4) (undo-tree-id25766 . -4) (undo-tree-id25767 . -4) 6102) nil (26715 42194 610231 937000) 0 nil])
([nil nil ((6172 . 6180) (#("    " 0 4 (fontified t)) . 6172) (undo-tree-id25753 . -4) (undo-tree-id25754 . -4) (undo-tree-id25755 . -4) (undo-tree-id25756 . -4) (undo-tree-id25757 . -4) (undo-tree-id25758 . -4) (undo-tree-id25759 . -4) (undo-tree-id25760 . -4) (undo-tree-id25761 . -4) 6184) nil (26715 42194 610221 208000) 0 nil])
([nil nil ((#("round:" 0 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t)) . -6193) (undo-tree-id25747 . -5) (undo-tree-id25748 . -5) (undo-tree-id25749 . -5) (undo-tree-id25750 . -6) (undo-tree-id25751 . -5) (undo-tree-id25752 . -5) 6199) nil (26715 42194 610205 932000) 0 nil])
([nil nil ((#("first " 0 6 (face font-lock-string-face fontified t)) . -6187) (undo-tree-id25725 . -1) (undo-tree-id25726 . -1) (undo-tree-id25727 . -1) (undo-tree-id25728 . -1) (undo-tree-id25729 . -1) (undo-tree-id25730 . -1) (undo-tree-id25731 . -1) (undo-tree-id25732 . -1) (undo-tree-id25733 . -1) (undo-tree-id25734 . -1) (undo-tree-id25735 . -1) (undo-tree-id25736 . -6) (undo-tree-id25737 . -6) (undo-tree-id25738 . -6) (undo-tree-id25739 . -6) (undo-tree-id25740 . -6) (undo-tree-id25741 . -6) (undo-tree-id25742 . -6) (undo-tree-id25743 . -6) (undo-tree-id25744 . -6) (undo-tree-id25745 . -6) (undo-tree-id25746 . -6) 6193) nil (26715 42194 610194 837000) 0 nil])
([nil nil ((#("        this_round = iota(chi(pi(rho(theta(A)))), 0)
        this_round_hex = [[hexlify_array(y) for y in x] for x in first_round]
" 0 8 (fontified t) 8 12 (face font-lock-variable-name-face fontified t) 12 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face font-lock-operator-face fontified t) 20 53 (fontified t) 53 61 (fontified t) 61 65 (face font-lock-variable-name-face fontified t) 65 75 (face font-lock-variable-name-face fontified t) 75 76 (fontified t) 76 77 (face font-lock-operator-face fontified t) 77 80 (fontified t) 80 97 (fontified t) 97 100 (face font-lock-keyword-face fontified t) 100 103 (fontified t) 103 105 (face font-lock-keyword-face fontified t) 105 109 (fontified t) 109 112 (face font-lock-keyword-face fontified t) 112 115 (fontified t) 115 117 (face font-lock-keyword-face fontified t) 117 130 (fontified t) 130 131 (fontified t)) . 6041) (undo-tree-id25583 . -95) (undo-tree-id25584 . -131) (undo-tree-id25585 . -131) (undo-tree-id25586 . -131) (undo-tree-id25587 . -131) (undo-tree-id25588 . -42) (undo-tree-id25589 . -42) (undo-tree-id25590 . -42) (undo-tree-id25591 . -42) (undo-tree-id25592 . -42) (undo-tree-id25593 . -42) (undo-tree-id25594 . -42) (undo-tree-id25595 . -42) (undo-tree-id25596 . -42) (undo-tree-id25597 . -42) (undo-tree-id25598 . -42) (undo-tree-id25599 . -8) (undo-tree-id25600 . -42) (undo-tree-id25601 . -42) (undo-tree-id25602 . -42) (undo-tree-id25603 . -42) (undo-tree-id25604 . -42) (undo-tree-id25605 . -131) (undo-tree-id25606 . -131) (undo-tree-id25607 . -18) (undo-tree-id25608 . -18) (undo-tree-id25609 . -18) (undo-tree-id25610 . -18) (undo-tree-id25611 . -18) (undo-tree-id25612 . -8) (undo-tree-id25613 . -8) (undo-tree-id25614 . -8) (undo-tree-id25615 . -8) (undo-tree-id25616 . -8) (undo-tree-id25617 . -9) (undo-tree-id25618 . -9) (undo-tree-id25619 . -9) (undo-tree-id25620 . -9) (undo-tree-id25621 . -9) (undo-tree-id25622 . -10) (undo-tree-id25623 . -10) (undo-tree-id25624 . -10) (undo-tree-id25625 . -10) (undo-tree-id25626 . -10) (undo-tree-id25627 . -11) (undo-tree-id25628 . -11) (undo-tree-id25629 . -11) (undo-tree-id25630 . -11) (undo-tree-id25631 . -11) (undo-tree-id25632 . -12) (undo-tree-id25633 . -12) (undo-tree-id25634 . -12) (undo-tree-id25635 . -12) (undo-tree-id25636 . -12) (undo-tree-id25637 . -12) (undo-tree-id25638 . -12) (undo-tree-id25639 . -12) (undo-tree-id25640 . -12) (undo-tree-id25641 . -12) (undo-tree-id25642 . -68) (undo-tree-id25643 . -68) (undo-tree-id25644 . -68) (undo-tree-id25645 . -68) (undo-tree-id25646 . -68) (undo-tree-id25647 . -68) (undo-tree-id25648 . -131) (undo-tree-id25649 . -131) (undo-tree-id25650 . -68) (undo-tree-id25651 . -68) (undo-tree-id25652 . -68) (undo-tree-id25653 . -68) (undo-tree-id25654 . -68) (undo-tree-id25655 . -53) (undo-tree-id25656 . -53) (undo-tree-id25657 . -53) (undo-tree-id25658 . -53) (undo-tree-id25659 . -53) (undo-tree-id25660 . -62) (undo-tree-id25661 . -62) (undo-tree-id25662 . -62) (undo-tree-id25663 . -62) (undo-tree-id25664 . -62) (undo-tree-id25665 . -63) (undo-tree-id25666 . -63) (undo-tree-id25667 . -63) (undo-tree-id25668 . -63) (undo-tree-id25669 . -63) (undo-tree-id25670 . -64) (undo-tree-id25671 . -64) (undo-tree-id25672 . -64) (undo-tree-id25673 . -64) (undo-tree-id25674 . -64) (undo-tree-id25675 . -65) (undo-tree-id25676 . -65) (undo-tree-id25677 . -65) (undo-tree-id25678 . -65) (undo-tree-id25679 . -65) (undo-tree-id25680 . -53) (undo-tree-id25681 . -8) (undo-tree-id25682 . -8) (undo-tree-id25683 . -61) (undo-tree-id25684 . -65) (undo-tree-id25685 . -65) (undo-tree-id25686 . -65) (undo-tree-id25687 . -65) (undo-tree-id25688 . -65) (undo-tree-id25689 . -65) (undo-tree-id25690 . -65) (undo-tree-id25691 . -65) (undo-tree-id25692 . -65) (undo-tree-id25693 . -65) (undo-tree-id25694 . -131) (undo-tree-id25695 . -61) (undo-tree-id25696 . -61) (undo-tree-id25697 . -68) (undo-tree-id25698 . -68) (undo-tree-id25699 . -68) (undo-tree-id25700 . -68) (undo-tree-id25701 . -68) (undo-tree-id25702 . -68) (undo-tree-id25703 . -15) (undo-tree-id25704 . -15) (undo-tree-id25705 . -15) (undo-tree-id25706 . -15) (undo-tree-id25707 . -15) (undo-tree-id25708 . -78) (undo-tree-id25709 . -53) (undo-tree-id25710 . -53) (undo-tree-id25711 . -53) (undo-tree-id25712 . -53) (undo-tree-id25713 . -53) (undo-tree-id25714 . -53) (undo-tree-id25715 . -53) (undo-tree-id25716 . -131) (undo-tree-id25717 . -131) (undo-tree-id25718 . -131) (undo-tree-id25719 . -131) (undo-tree-id25720 . -95) (undo-tree-id25721 . -131) (undo-tree-id25722 . -131) (undo-tree-id25723 . -131) (undo-tree-id25724 . -131) 6172) nil (26715 42194 610151 395000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6131 . 6132) (nil fontified nil 6131 . 6132) (nil fontified nil 6118 . 6131) (nil fontified nil 6116 . 6118) (nil fontified nil 6113 . 6116) (nil fontified nil 6110 . 6113) (nil fontified nil 6106 . 6110) (nil fontified nil 6104 . 6106) (nil fontified nil 6101 . 6104) (nil fontified nil 6098 . 6101) (nil fontified nil 6081 . 6098) (nil fontified nil 6078 . 6081) (nil fontified nil 6077 . 6078) (nil fontified nil 6076 . 6077) (nil fontified nil 6066 . 6076) (nil fontified nil 6062 . 6066) (nil fontified nil 6054 . 6062) (nil fontified nil 6021 . 6054) (nil fontified nil 6020 . 6021) (nil fontified nil 6019 . 6020) (nil fontified nil 6013 . 6019) (nil fontified nil 6009 . 6013) (nil fontified nil 6001 . 6009) (6001 . 6132)) nil (26715 42194 609933 680000) 0 nil])
([nil nil ((#("        print(\"\", first_round_hex)" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 34 (fontified t)) . 6172) (undo-tree-id25522 . -15) (undo-tree-id25523 . -15) (undo-tree-id25524 . -34) (undo-tree-id25525 . -15) (undo-tree-id25526 . -15) (undo-tree-id25527 . -15) (undo-tree-id25528 . -15) (undo-tree-id25529 . -15) (undo-tree-id25530 . -15) (undo-tree-id25531 . -8) (undo-tree-id25532 . -8) (undo-tree-id25533 . -8) (undo-tree-id25534 . -15) (undo-tree-id25535 . -15) (undo-tree-id25536 . -15) (undo-tree-id25537 . -15) (undo-tree-id25538 . -15) (undo-tree-id25539 . -15) (undo-tree-id25540 . -15) (undo-tree-id25541 . -15) (undo-tree-id25542 . -15) (undo-tree-id25543 . -15) (undo-tree-id25544 . -8) (undo-tree-id25545 . -8) (undo-tree-id25546 . -15) (undo-tree-id25547 . -15) (undo-tree-id25548 . -15) (undo-tree-id25549 . -15) (undo-tree-id25550 . -15) (undo-tree-id25551 . -8) (undo-tree-id25552 . -8) (undo-tree-id25553 . -15) (undo-tree-id25554 . -15) (undo-tree-id25555 . -15) (undo-tree-id25556 . -15) (undo-tree-id25557 . -15) (undo-tree-id25558 . -15) (undo-tree-id25559 . -15) (undo-tree-id25560 . -15) (undo-tree-id25561 . -15) (undo-tree-id25562 . -15) (undo-tree-id25563 . -8) (undo-tree-id25564 . -8) (undo-tree-id25565 . -8) (undo-tree-id25566 . -8) (undo-tree-id25567 . -34) (undo-tree-id25568 . -34) (undo-tree-id25569 . -34) (undo-tree-id25570 . -34) (undo-tree-id25571 . -34) (undo-tree-id25572 . -30) (undo-tree-id25573 . -30) (undo-tree-id25574 . -30) (undo-tree-id25575 . -30) (undo-tree-id25576 . -30) (undo-tree-id25577 . -34) (undo-tree-id25578 . -34) (undo-tree-id25579 . -34) (undo-tree-id25580 . -34) (undo-tree-id25581 . -34) (undo-tree-id25582 . -34)) nil (26715 42194 609922 777000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6171) (undo-tree-id25275 . -1) (undo-tree-id25276 . -1) (undo-tree-id25277 . -1) (undo-tree-id25278 . -1) (undo-tree-id25279 . -1) (undo-tree-id25280 . -1) (undo-tree-id25281 . -1) (undo-tree-id25282 . -1) (undo-tree-id25283 . -1) (undo-tree-id25284 . -1) (undo-tree-id25285 . -1) (undo-tree-id25286 . -1) (undo-tree-id25287 . -1) (undo-tree-id25288 . -1) (undo-tree-id25289 . -1) (undo-tree-id25290 . -1) (undo-tree-id25291 . -1) (undo-tree-id25292 . -1) (undo-tree-id25293 . -1) (undo-tree-id25294 . -1) (undo-tree-id25295 . -1) (undo-tree-id25296 . -1) (undo-tree-id25297 . -1) (undo-tree-id25298 . -1) (undo-tree-id25299 . -1) (undo-tree-id25300 . -1) (undo-tree-id25301 . -1) (undo-tree-id25302 . -1) (undo-tree-id25303 . -1) (undo-tree-id25304 . -1) (undo-tree-id25305 . -1) (undo-tree-id25306 . -1) (undo-tree-id25307 . -1) (undo-tree-id25308 . -1) (undo-tree-id25309 . -1) (undo-tree-id25310 . -1) (undo-tree-id25311 . -1) (undo-tree-id25312 . -1) (undo-tree-id25313 . -1) (undo-tree-id25314 . -1) (undo-tree-id25315 . -1) (undo-tree-id25316 . -1) (undo-tree-id25317 . -1) (undo-tree-id25318 . -1) (undo-tree-id25319 . -1) (undo-tree-id25320 . -1) (undo-tree-id25321 . -1) (undo-tree-id25322 . -1) (undo-tree-id25323 . -1) (undo-tree-id25324 . -1) (undo-tree-id25325 . -1) (undo-tree-id25326 . -1) (undo-tree-id25327 . -1) (undo-tree-id25328 . -1) (undo-tree-id25329 . -1) (undo-tree-id25330 . -1) (undo-tree-id25331 . -1) (undo-tree-id25332 . -1) (undo-tree-id25333 . -1) (undo-tree-id25334 . -1) (undo-tree-id25335 . -1) (undo-tree-id25336 . -1) (undo-tree-id25337 . -1) (undo-tree-id25338 . -1) (undo-tree-id25339 . -1) (undo-tree-id25340 . -1) (undo-tree-id25341 . -1) (undo-tree-id25342 . -1) (undo-tree-id25343 . -1) (undo-tree-id25344 . -1) (undo-tree-id25345 . -1) (undo-tree-id25346 . -1) (undo-tree-id25347 . -1) (undo-tree-id25348 . -1) (undo-tree-id25349 . -1) (undo-tree-id25350 . -1) (undo-tree-id25351 . -1) (undo-tree-id25352 . -1) (undo-tree-id25353 . -1) (undo-tree-id25354 . -1) (undo-tree-id25355 . -1) (undo-tree-id25356 . -1) (undo-tree-id25357 . -1) (undo-tree-id25358 . -1) (undo-tree-id25359 . -1) (undo-tree-id25360 . -1) (undo-tree-id25361 . -1) (undo-tree-id25362 . -1) (undo-tree-id25363 . -1) (undo-tree-id25364 . -1) (undo-tree-id25365 . -1) (undo-tree-id25366 . -1) (undo-tree-id25367 . -1) (undo-tree-id25368 . -1) (undo-tree-id25369 . -1) (undo-tree-id25370 . -1) (undo-tree-id25371 . -1) (undo-tree-id25372 . -1) (undo-tree-id25373 . -1) (undo-tree-id25374 . -1) (undo-tree-id25375 . -1) (undo-tree-id25376 . -1) (undo-tree-id25377 . -1) (undo-tree-id25378 . -1) (undo-tree-id25379 . -1) (undo-tree-id25380 . -1) (undo-tree-id25381 . -1) (undo-tree-id25382 . -1) (undo-tree-id25383 . -1) (undo-tree-id25384 . -1) (undo-tree-id25385 . -1) (undo-tree-id25386 . -1) (undo-tree-id25387 . -1) (undo-tree-id25388 . -1) (undo-tree-id25389 . -1) (undo-tree-id25390 . -1) (undo-tree-id25391 . -1) (undo-tree-id25392 . -1) (undo-tree-id25393 . -1) (undo-tree-id25394 . -1) (undo-tree-id25395 . -1) (undo-tree-id25396 . -1) (undo-tree-id25397 . -1) (undo-tree-id25398 . -1) (undo-tree-id25399 . -1) (undo-tree-id25400 . -1) (undo-tree-id25401 . -1) (undo-tree-id25402 . -1) (undo-tree-id25403 . -1) (undo-tree-id25404 . -1) (undo-tree-id25405 . -1) (undo-tree-id25406 . -1) (undo-tree-id25407 . -1) (undo-tree-id25408 . -1) (undo-tree-id25409 . -1) (undo-tree-id25410 . -1) (undo-tree-id25411 . -1) (undo-tree-id25412 . -1) (undo-tree-id25413 . -1) (undo-tree-id25414 . -1) (undo-tree-id25415 . -1) (undo-tree-id25416 . -1) (undo-tree-id25417 . -1) (undo-tree-id25418 . -1) (undo-tree-id25419 . -1) (undo-tree-id25420 . -1) (undo-tree-id25421 . -1) (undo-tree-id25422 . -1) (undo-tree-id25423 . -1) (undo-tree-id25424 . -1) (undo-tree-id25425 . -1) (undo-tree-id25426 . -1) (undo-tree-id25427 . -1) (undo-tree-id25428 . -1) (undo-tree-id25429 . -1) (undo-tree-id25430 . -1) (undo-tree-id25431 . -1) (undo-tree-id25432 . -1) (undo-tree-id25433 . -1) (undo-tree-id25434 . -1) (undo-tree-id25435 . -1) (undo-tree-id25436 . -1) (undo-tree-id25437 . -1) (undo-tree-id25438 . -1) (undo-tree-id25439 . -1) (undo-tree-id25440 . -1) (undo-tree-id25441 . -1) (undo-tree-id25442 . -1) (undo-tree-id25443 . -1) (undo-tree-id25444 . -1) (undo-tree-id25445 . -1) (undo-tree-id25446 . -1) (undo-tree-id25447 . -1) (undo-tree-id25448 . -1) (undo-tree-id25449 . -1) (undo-tree-id25450 . -1) (undo-tree-id25451 . -1) (undo-tree-id25452 . -1) (undo-tree-id25453 . -1) (undo-tree-id25454 . -1) (undo-tree-id25455 . -1) (undo-tree-id25456 . -1) (undo-tree-id25457 . -1) (undo-tree-id25458 . -1) (undo-tree-id25459 . -1) (undo-tree-id25460 . -1) (undo-tree-id25461 . -1) (undo-tree-id25462 . -1) (undo-tree-id25463 . -1) (undo-tree-id25464 . -1) (undo-tree-id25465 . -1) (undo-tree-id25466 . -1) (undo-tree-id25467 . -1) (undo-tree-id25468 . -1) (undo-tree-id25469 . -1) (undo-tree-id25470 . -1) (undo-tree-id25471 . -1) (undo-tree-id25472 . -1) (undo-tree-id25473 . -1) (undo-tree-id25474 . -1) (undo-tree-id25475 . -1) (undo-tree-id25476 . -1) (undo-tree-id25477 . -1) (undo-tree-id25478 . -1) (undo-tree-id25479 . -1) (undo-tree-id25480 . -1) (undo-tree-id25481 . -1) (undo-tree-id25482 . -1) (undo-tree-id25483 . -1) (undo-tree-id25484 . -1) (undo-tree-id25485 . -1) (undo-tree-id25486 . -1) (undo-tree-id25487 . -1) (undo-tree-id25488 . -1) (undo-tree-id25489 . -1) (undo-tree-id25490 . -1) (undo-tree-id25491 . -1) (undo-tree-id25492 . -1) (undo-tree-id25493 . -1) (undo-tree-id25494 . -1) (undo-tree-id25495 . -1) (undo-tree-id25496 . -1) (undo-tree-id25497 . -1) (undo-tree-id25498 . -1) (undo-tree-id25499 . -1) (undo-tree-id25500 . -1) (undo-tree-id25501 . -1) (undo-tree-id25502 . -1) (undo-tree-id25503 . -1) (undo-tree-id25504 . -1) (undo-tree-id25505 . -1) (undo-tree-id25506 . -1) (undo-tree-id25507 . -1) (undo-tree-id25508 . -1) (undo-tree-id25509 . -1) (undo-tree-id25510 . -1) (undo-tree-id25511 . -1) (undo-tree-id25512 . -1) (undo-tree-id25513 . -1) (undo-tree-id25514 . -1) (undo-tree-id25515 . -1) (undo-tree-id25516 . -1) (undo-tree-id25517 . -1) (undo-tree-id25518 . -1) (undo-tree-id25519 . -1) (undo-tree-id25520 . -1) (undo-tree-id25521 . -1) 6172) nil (26715 42194 609804 756000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -6170) (undo-tree-id25002 . -1) (undo-tree-id25003 . -1) (undo-tree-id25004 . -1) (undo-tree-id25005 . -1) (undo-tree-id25006 . -1) (undo-tree-id25007 . -1) (undo-tree-id25008 . -1) (undo-tree-id25009 . -1) (undo-tree-id25010 . -1) (undo-tree-id25011 . -1) (undo-tree-id25012 . -1) (undo-tree-id25013 . -1) (undo-tree-id25014 . -1) (undo-tree-id25015 . -1) (undo-tree-id25016 . -1) (undo-tree-id25017 . -1) (undo-tree-id25018 . -1) (undo-tree-id25019 . -1) (undo-tree-id25020 . -1) (undo-tree-id25021 . -1) (undo-tree-id25022 . -1) (undo-tree-id25023 . -1) (undo-tree-id25024 . -1) (undo-tree-id25025 . -1) (undo-tree-id25026 . -1) (undo-tree-id25027 . -1) (undo-tree-id25028 . -1) (undo-tree-id25029 . -1) (undo-tree-id25030 . -1) (undo-tree-id25031 . -1) (undo-tree-id25032 . -1) (undo-tree-id25033 . -1) (undo-tree-id25034 . -1) (undo-tree-id25035 . -1) (undo-tree-id25036 . -1) (undo-tree-id25037 . -1) (undo-tree-id25038 . -1) (undo-tree-id25039 . -1) (undo-tree-id25040 . -1) (undo-tree-id25041 . -1) (undo-tree-id25042 . -1) (undo-tree-id25043 . -1) (undo-tree-id25044 . -1) (undo-tree-id25045 . -1) (undo-tree-id25046 . -1) (undo-tree-id25047 . -1) (undo-tree-id25048 . -1) (undo-tree-id25049 . -1) (undo-tree-id25050 . -1) (undo-tree-id25051 . -1) (undo-tree-id25052 . -1) (undo-tree-id25053 . -1) (undo-tree-id25054 . -1) (undo-tree-id25055 . -1) (undo-tree-id25056 . -1) (undo-tree-id25057 . -1) (undo-tree-id25058 . -1) (undo-tree-id25059 . -1) (undo-tree-id25060 . -1) (undo-tree-id25061 . -1) (undo-tree-id25062 . -1) (undo-tree-id25063 . -1) (undo-tree-id25064 . -1) (undo-tree-id25065 . -1) (undo-tree-id25066 . -1) (undo-tree-id25067 . -1) (undo-tree-id25068 . -1) (undo-tree-id25069 . -1) (undo-tree-id25070 . -1) (undo-tree-id25071 . -1) (undo-tree-id25072 . -1) (undo-tree-id25073 . -1) (undo-tree-id25074 . -1) (undo-tree-id25075 . -1) (undo-tree-id25076 . -1) (undo-tree-id25077 . -1) (undo-tree-id25078 . -1) (undo-tree-id25079 . -1) (undo-tree-id25080 . -1) (undo-tree-id25081 . -1) (undo-tree-id25082 . -1) (undo-tree-id25083 . -1) (undo-tree-id25084 . -1) (undo-tree-id25085 . -1) (undo-tree-id25086 . -1) (undo-tree-id25087 . -1) (undo-tree-id25088 . -1) (undo-tree-id25089 . -1) (undo-tree-id25090 . -1) (undo-tree-id25091 . -1) (undo-tree-id25092 . -1) (undo-tree-id25093 . -1) (undo-tree-id25094 . -1) (undo-tree-id25095 . -1) (undo-tree-id25096 . -1) (undo-tree-id25097 . -1) (undo-tree-id25098 . -1) (undo-tree-id25099 . -1) (undo-tree-id25100 . -1) (undo-tree-id25101 . -1) (undo-tree-id25102 . -1) (undo-tree-id25103 . -1) (undo-tree-id25104 . -1) (undo-tree-id25105 . -1) (undo-tree-id25106 . -1) (undo-tree-id25107 . -1) (undo-tree-id25108 . -1) (undo-tree-id25109 . -1) (undo-tree-id25110 . -1) (undo-tree-id25111 . -1) (undo-tree-id25112 . -1) (undo-tree-id25113 . -1) (undo-tree-id25114 . -1) (undo-tree-id25115 . -1) (undo-tree-id25116 . -1) (undo-tree-id25117 . -1) (undo-tree-id25118 . -1) (undo-tree-id25119 . -1) (undo-tree-id25120 . -1) (undo-tree-id25121 . -1) (undo-tree-id25122 . -1) (undo-tree-id25123 . -1) (undo-tree-id25124 . -1) (undo-tree-id25125 . -1) (undo-tree-id25126 . -1) (undo-tree-id25127 . -1) (undo-tree-id25128 . -1) (undo-tree-id25129 . -1) (undo-tree-id25130 . -1) (undo-tree-id25131 . -1) (undo-tree-id25132 . -1) (undo-tree-id25133 . -1) (undo-tree-id25134 . -1) (undo-tree-id25135 . -1) (undo-tree-id25136 . -1) (undo-tree-id25137 . -1) (undo-tree-id25138 . -1) (undo-tree-id25139 . -1) (undo-tree-id25140 . -1) (undo-tree-id25141 . -1) (undo-tree-id25142 . -1) (undo-tree-id25143 . -1) (undo-tree-id25144 . -1) (undo-tree-id25145 . -1) (undo-tree-id25146 . -1) (undo-tree-id25147 . -1) (undo-tree-id25148 . -1) (undo-tree-id25149 . -1) (undo-tree-id25150 . -1) (undo-tree-id25151 . -1) (undo-tree-id25152 . -1) (undo-tree-id25153 . -1) (undo-tree-id25154 . -1) (undo-tree-id25155 . -1) (undo-tree-id25156 . -1) (undo-tree-id25157 . -1) (undo-tree-id25158 . -1) (undo-tree-id25159 . -1) (undo-tree-id25160 . -1) (undo-tree-id25161 . -1) (undo-tree-id25162 . -1) (undo-tree-id25163 . -1) (undo-tree-id25164 . -1) (undo-tree-id25165 . -1) (undo-tree-id25166 . -1) (undo-tree-id25167 . -1) (undo-tree-id25168 . -1) (undo-tree-id25169 . -1) (undo-tree-id25170 . -1) (undo-tree-id25171 . -1) (undo-tree-id25172 . -1) (undo-tree-id25173 . -1) (undo-tree-id25174 . -1) (undo-tree-id25175 . -1) (undo-tree-id25176 . -1) (undo-tree-id25177 . -1) (undo-tree-id25178 . -1) (undo-tree-id25179 . -1) (undo-tree-id25180 . -1) (undo-tree-id25181 . -1) (undo-tree-id25182 . -1) (undo-tree-id25183 . -1) (undo-tree-id25184 . -1) (undo-tree-id25185 . -1) (undo-tree-id25186 . -1) (undo-tree-id25187 . -1) (undo-tree-id25188 . -1) (undo-tree-id25189 . -1) (undo-tree-id25190 . -1) (undo-tree-id25191 . -1) (undo-tree-id25192 . -1) (undo-tree-id25193 . -1) (undo-tree-id25194 . -1) (undo-tree-id25195 . -1) (undo-tree-id25196 . -1) (undo-tree-id25197 . -1) (undo-tree-id25198 . -1) (undo-tree-id25199 . -1) (undo-tree-id25200 . -1) (undo-tree-id25201 . -1) (undo-tree-id25202 . -1) (undo-tree-id25203 . -1) (undo-tree-id25204 . -1) (undo-tree-id25205 . -1) (undo-tree-id25206 . -1) (undo-tree-id25207 . -1) (undo-tree-id25208 . -1) (undo-tree-id25209 . -1) (undo-tree-id25210 . -1) (undo-tree-id25211 . -1) (undo-tree-id25212 . -1) (undo-tree-id25213 . -1) (undo-tree-id25214 . -1) (undo-tree-id25215 . -1) (undo-tree-id25216 . -1) (undo-tree-id25217 . -1) (undo-tree-id25218 . -1) (undo-tree-id25219 . -1) (undo-tree-id25220 . -1) (undo-tree-id25221 . -1) (undo-tree-id25222 . -1) (undo-tree-id25223 . -1) (undo-tree-id25224 . -1) (undo-tree-id25225 . -1) (undo-tree-id25226 . -1) (undo-tree-id25227 . -1) (undo-tree-id25228 . -1) (undo-tree-id25229 . -1) (undo-tree-id25230 . -1) (undo-tree-id25231 . -1) (undo-tree-id25232 . -1) (undo-tree-id25233 . -1) (undo-tree-id25234 . -1) (undo-tree-id25235 . -1) (undo-tree-id25236 . -1) (undo-tree-id25237 . -1) (undo-tree-id25238 . -1) (undo-tree-id25239 . -1) (undo-tree-id25240 . -1) (undo-tree-id25241 . -1) (undo-tree-id25242 . -1) (undo-tree-id25243 . -1) (undo-tree-id25244 . -1) (undo-tree-id25245 . -1) (undo-tree-id25246 . -1) (undo-tree-id25247 . -1) (undo-tree-id25248 . -1) (undo-tree-id25249 . -1) (undo-tree-id25250 . -1) (undo-tree-id25251 . -1) (undo-tree-id25252 . -1) (undo-tree-id25253 . -1) (undo-tree-id25254 . -1) (undo-tree-id25255 . -1) (undo-tree-id25256 . -1) (undo-tree-id25257 . -1) (undo-tree-id25258 . -1) (undo-tree-id25259 . -1) (undo-tree-id25260 . -1) (undo-tree-id25261 . -1) (undo-tree-id25262 . -1) (undo-tree-id25263 . -1) (undo-tree-id25264 . -1) (undo-tree-id25265 . -1) (undo-tree-id25266 . -1) (undo-tree-id25267 . -1) (undo-tree-id25268 . -1) (undo-tree-id25269 . -1) (undo-tree-id25270 . -1) (undo-tree-id25271 . -1) (undo-tree-id25272 . -1) (undo-tree-id25273 . -1) (undo-tree-id25274 . -1) 6171) nil (26715 42194 609429 644000) 0 nil])
([nil nil ((6170 . 6173)) nil (26715 42194 609070 57000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -6172) (undo-tree-id24996 . -1) (undo-tree-id24997 . -1) (undo-tree-id24998 . -1) (undo-tree-id24999 . -1) (undo-tree-id25000 . -1) (undo-tree-id25001 . -1) 6173) nil (26715 42194 609069 219000) 0 nil])
([nil nil ((6172 . 6187)) nil (26715 42194 609054 613000) 0 nil])
([nil nil ((6000 . 6009)) nil (26715 42194 609054 214000) 0 nil])
([nil nil ((6009 . 6015)) nil (26715 42194 609053 535000) 0 nil])
([nil nil ((6015 . 6023)) nil (26715 42194 609049 378000) 0 nil])
([nil nil ((#("round" 0 5 (fontified t)) . -6148) (undo-tree-id25838 . -5) (undo-tree-id25839 . -5) (undo-tree-id25840 . -5) (undo-tree-id25841 . -5) (undo-tree-id25842 . -5) (undo-tree-id25843 . -5) 6153 (t 26715 42194 634192 270000)) nil (26715 42208 100006 891000) 0 nil])
([nil nil ((#("first_" 0 6 (fontified t)) . -6142) (undo-tree-id25826 . -6) (undo-tree-id25827 . -6) (undo-tree-id25828 . -6) (undo-tree-id25829 . -6) (undo-tree-id25830 . -6) (undo-tree-id25831 . -6) (undo-tree-id25832 . -6) (undo-tree-id25833 . -6) (undo-tree-id25834 . -6) (undo-tree-id25835 . -6) (undo-tree-id25836 . -6) (undo-tree-id25837 . -6) 6148) nil (26715 42208 100000 92000) 0 nil])
([nil nil ((6142 . 6152)) nil (26715 42208 99982 678000) 0 nil])
([nil nil ((#("        A = this_round" 0 8 (fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 22 (fontified t)) . 6001) (undo-tree-id25847 . -22) (undo-tree-id25848 . -22) (undo-tree-id25849 . -22) (undo-tree-id25850 . -22) (undo-tree-id25851 . -22) (undo-tree-id25852 . -22) (undo-tree-id25853 . -22) (undo-tree-id25854 . -22) (undo-tree-id25855 . -22) (undo-tree-id25856 . -22) (undo-tree-id25857 . -22) (undo-tree-id25858 . -22) (undo-tree-id25859 . -22) (undo-tree-id25860 . -22) (undo-tree-id25861 . -22) (undo-tree-id25862 . -22) (undo-tree-id25863 . -22) (t 26715 42208 122531 466000)) nil (26715 42225 566737 983000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6001) (undo-tree-id25845 . -1) (undo-tree-id25846 . -1)) nil (26715 42225 566723 336000) 0 nil])
([nil nil ((5970 . 5975)) nil (26715 42225 566720 644000) 0 nil])
([nil nil ((5975 . 5989)) nil (26715 42225 566719 920000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -6063) (undo-tree-id25844 . -1) 6064) nil (26715 42225 566718 152000) 0 nil])
([nil nil ((6063 . 6073)) nil (26715 42225 566706 108000) 0 nil])
([nil nil ((5989 . 5992) (t 26715 42225 590966 709000)) nil (26715 42231 994830 219000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -5991) (undo-tree-id25864 . -1) (undo-tree-id25865 . -1) (undo-tree-id25866 . -1) (undo-tree-id25867 . -1) (undo-tree-id25868 . -1) (undo-tree-id25869 . -1) 5992) nil (26715 42231 994828 253000) 0 nil])
([nil nil ((5991 . 5996)) nil (26715 42231 994811 715000) 0 nil])
([nil nil ((6080 . 6087)) nil (26715 42231 994807 78000) 0 nil])
([nil nil ((4739 . 4745) (t 26715 42232 34126 133000)) nil (26715 42243 18196 113000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -4744) (undo-tree-id25870 . -1) (undo-tree-id25871 . -1) (undo-tree-id25872 . -1) (undo-tree-id25873 . -1) (undo-tree-id25874 . -1) (undo-tree-id25875 . -1) 4745) nil (26715 42243 18194 733000) 0 nil])
([nil nil ((4744 . 4746)) nil (26715 42243 18178 949000) 0 nil])
([nil nil ((3921 . 3923) (t 26715 42243 42397 134000)) nil (26715 42260 532389 66000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3921) (undo-tree-id25876 . -1) (undo-tree-id25877 . -1) (undo-tree-id25878 . -1) (undo-tree-id25879 . -1) (undo-tree-id25880 . -1) (undo-tree-id25881 . -1) (undo-tree-id25882 . -1) (undo-tree-id25883 . -1) (undo-tree-id25884 . -1) (undo-tree-id25885 . -1) (undo-tree-id25886 . -1) (undo-tree-id25887 . -1) (undo-tree-id25888 . -1) (undo-tree-id25889 . -1) (undo-tree-id25890 . -1) (undo-tree-id25891 . -1) (undo-tree-id25892 . -1) (undo-tree-id25893 . -1) (undo-tree-id25894 . -1) (undo-tree-id25895 . -1) (undo-tree-id25896 . -1) (undo-tree-id25897 . -1) (#("c" 0 1 (fontified t)) . -3922) (undo-tree-id25898 . -1) (undo-tree-id25899 . -1) (undo-tree-id25900 . -1) (undo-tree-id25901 . -1) (undo-tree-id25902 . -1) (undo-tree-id25903 . -1) (undo-tree-id25904 . -1) (undo-tree-id25905 . -1) (undo-tree-id25906 . -1) (undo-tree-id25907 . -1) (undo-tree-id25908 . -1) 3923) nil (26715 42260 532382 744000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4739) (undo-tree-id25909 . -1) (undo-tree-id25910 . -1) (undo-tree-id25911 . -1) (undo-tree-id25912 . -1) (undo-tree-id25913 . -1) (undo-tree-id25914 . -1) (undo-tree-id25915 . -1) (undo-tree-id25916 . -1) (undo-tree-id25917 . -1) (undo-tree-id25918 . -1) (undo-tree-id25919 . -1) (undo-tree-id25920 . -1) (undo-tree-id25921 . -1) (undo-tree-id25922 . -1) (undo-tree-id25923 . -1) (undo-tree-id25924 . -1) (undo-tree-id25925 . -1) (undo-tree-id25926 . -1) (undo-tree-id25927 . -1) (undo-tree-id25928 . -1) (undo-tree-id25929 . -1) (undo-tree-id25930 . -1) (undo-tree-id25931 . -1) (undo-tree-id25932 . -1) (undo-tree-id25933 . -1) (undo-tree-id25934 . -1) (undo-tree-id25935 . -1) (undo-tree-id25936 . -1) (undo-tree-id25937 . -1) (undo-tree-id25938 . -1) (undo-tree-id25939 . -1) (undo-tree-id25940 . -1) (undo-tree-id25941 . -1) (undo-tree-id25942 . -1) (undo-tree-id25943 . -1) (undo-tree-id25944 . -1) (undo-tree-id25945 . -1) (#("c" 0 1 (fontified t)) . -4740) (undo-tree-id25946 . -1) (undo-tree-id25947 . -1) (undo-tree-id25948 . -1) (undo-tree-id25949 . -1) (undo-tree-id25950 . -1) (undo-tree-id25951 . -1) (undo-tree-id25952 . -1) (undo-tree-id25953 . -1) (undo-tree-id25954 . -1) (undo-tree-id25955 . -1) (undo-tree-id25956 . -1) (undo-tree-id25957 . -1) (undo-tree-id25958 . -1) (undo-tree-id25959 . -1) (undo-tree-id25960 . -1) (undo-tree-id25961 . -1) (undo-tree-id25962 . -1) (undo-tree-id25963 . -1) (undo-tree-id25964 . -1) (undo-tree-id25965 . -1) (undo-tree-id25966 . -1) (undo-tree-id25967 . -1) (undo-tree-id25968 . -1) (undo-tree-id25969 . -1) (undo-tree-id25970 . -1) (undo-tree-id25971 . -1) (undo-tree-id25972 . -1) (undo-tree-id25973 . -1) (undo-tree-id25974 . -1) (undo-tree-id25975 . -1) (undo-tree-id25976 . -1) (undo-tree-id25977 . -1) (#("o" 0 1 (fontified t)) . -4741) (undo-tree-id25978 . -1) (undo-tree-id25979 . -1) (undo-tree-id25980 . -1) (undo-tree-id25981 . -1) (undo-tree-id25982 . -1) (undo-tree-id25983 . -1) (undo-tree-id25984 . -1) (undo-tree-id25985 . -1) (undo-tree-id25986 . -1) (undo-tree-id25987 . -1) (undo-tree-id25988 . -1) (undo-tree-id25989 . -1) (undo-tree-id25990 . -1) (undo-tree-id25991 . -1) (undo-tree-id25992 . -1) (undo-tree-id25993 . -1) (undo-tree-id25994 . -1) (undo-tree-id25995 . -1) (undo-tree-id25996 . -1) (undo-tree-id25997 . -1) (undo-tree-id25998 . -1) (undo-tree-id25999 . -1) (undo-tree-id26000 . -1) (undo-tree-id26001 . -1) (undo-tree-id26002 . -1) (undo-tree-id26003 . -1) (undo-tree-id26004 . -1) (#("p" 0 1 (fontified t)) . -4742) (undo-tree-id26005 . -1) (undo-tree-id26006 . -1) (undo-tree-id26007 . -1) (undo-tree-id26008 . -1) (undo-tree-id26009 . -1) (undo-tree-id26010 . -1) (undo-tree-id26011 . -1) (undo-tree-id26012 . -1) (undo-tree-id26013 . -1) (undo-tree-id26014 . -1) (undo-tree-id26015 . -1) (undo-tree-id26016 . -1) (undo-tree-id26017 . -1) (undo-tree-id26018 . -1) (undo-tree-id26019 . -1) (undo-tree-id26020 . -1) (undo-tree-id26021 . -1) (undo-tree-id26022 . -1) (undo-tree-id26023 . -1) (undo-tree-id26024 . -1) (undo-tree-id26025 . -1) (undo-tree-id26026 . -1) (#("y" 0 1 (fontified t)) . -4743) (undo-tree-id26027 . -1) (undo-tree-id26028 . -1) (undo-tree-id26029 . -1) (undo-tree-id26030 . -1) (undo-tree-id26031 . -1) (undo-tree-id26032 . -1) (undo-tree-id26033 . -1) (undo-tree-id26034 . -1) (undo-tree-id26035 . -1) (undo-tree-id26036 . -1) (undo-tree-id26037 . -1) (undo-tree-id26038 . -1) (undo-tree-id26039 . -1) (undo-tree-id26040 . -1) (undo-tree-id26041 . -1) (undo-tree-id26042 . -1) (undo-tree-id26043 . -1) (#("(" 0 1 (fontified t)) . -4744) (undo-tree-id26044 . -1) (undo-tree-id26045 . -1) (undo-tree-id26046 . -1) (undo-tree-id26047 . -1) (undo-tree-id26048 . -1) (undo-tree-id26049 . -1) (undo-tree-id26050 . -1) (undo-tree-id26051 . -1) (undo-tree-id26052 . -1) (undo-tree-id26053 . -1) (undo-tree-id26054 . -1) (undo-tree-id26055 . -1) (#(")" 0 1 (fontified t)) . -4745) (undo-tree-id26056 . -1) (undo-tree-id26057 . -1) (undo-tree-id26058 . -1) (undo-tree-id26059 . -1) (undo-tree-id26060 . -1) (undo-tree-id26061 . -1) 4746 (t 26715 42260 559824 899000)) nil (26715 42268 375889 456000) 0 nil])
([nil nil ((#("    second_round = iota(chi(pi(rho(theta(first_round)))), 1)
    second_round_hex = [[hexlify_array(y) for y in x] for x in first_round]
    print(\"second round:\", second_round_hex)
" 0 4 (fontified t) 4 10 (face font-lock-variable-name-face fontified t) 10 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face font-lock-operator-face) 18 61 (fontified t) 61 65 (fontified t) 65 71 (face font-lock-variable-name-face fontified t) 71 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 83 (face font-lock-operator-face fontified t) 83 86 (fontified t) 86 103 (fontified t) 103 106 (face font-lock-keyword-face fontified t) 106 109 (fontified t) 109 111 (face font-lock-keyword-face fontified t) 111 115 (fontified t) 115 118 (face font-lock-keyword-face fontified t) 118 121 (fontified t) 121 123 (face font-lock-keyword-face fontified t) 123 136 (fontified t) 136 137 (fontified t) 137 141 (fontified t) 141 146 (face font-lock-builtin-face fontified t) 146 147 (fontified t) 147 148 (face font-lock-string-face fontified t) 148 155 (face font-lock-string-face fontified t) 155 160 (face font-lock-string-face fontified t) 160 161 (face font-lock-string-face fontified t) 161 162 (face font-lock-string-face fontified t) 162 181 (fontified t) 181 182 (fontified t rear-nonsticky t)) . -6230) (undo-tree-id26062 . -182) (undo-tree-id26063 . -141) (undo-tree-id26064 . -141) (undo-tree-id26065 . -141) (undo-tree-id26066 . -141) (undo-tree-id26067 . -141) (undo-tree-id26068 . -65) (undo-tree-id26069 . -65) (undo-tree-id26070 . -65) (undo-tree-id26071 . -65) (undo-tree-id26072 . -65) (undo-tree-id26073 . -4) (undo-tree-id26074 . -4) (undo-tree-id26075 . -4) (undo-tree-id26076 . -4) (undo-tree-id26077 . -4) (undo-tree-id26078 . -61) (undo-tree-id26079 . -61) (undo-tree-id26080 . -61) (undo-tree-id26081 . -61) (undo-tree-id26082 . -61) (undo-tree-id26083 . -61) (undo-tree-id26084 . -61) (undo-tree-id26085 . -137) (undo-tree-id26086 . -137) (undo-tree-id26087 . -137) (undo-tree-id26088 . -137) (undo-tree-id26089 . -137) (undo-tree-id26090 . -182) (undo-tree-id26091 . -182) (undo-tree-id26092 . -182) (undo-tree-id26093 . -182) (undo-tree-id26094 . -182) (undo-tree-id26095 . -182) (undo-tree-id26096 . -182) 6412 (t 26715 42268 399014 976000)) nil (26715 42286 828169 134000) 0 nil])
([nil nil ((6203 . 6207) (t 26715 42286 850459 165000)) nil (26715 42305 337476 984000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6203) (undo-tree-id26097 . -1) (undo-tree-id26098 . -1) (undo-tree-id26099 . -1) (undo-tree-id26100 . -1) (undo-tree-id26101 . -1) (undo-tree-id26102 . -1) (undo-tree-id26103 . -1) (undo-tree-id26104 . -1) (undo-tree-id26105 . -1) (undo-tree-id26106 . -1) (undo-tree-id26107 . -1) (undo-tree-id26108 . -1) (undo-tree-id26109 . -1) (undo-tree-id26110 . -1) (undo-tree-id26111 . -1) (undo-tree-id26112 . -1) (undo-tree-id26113 . -1) (undo-tree-id26114 . -1) (undo-tree-id26115 . -1) (undo-tree-id26116 . -1) (undo-tree-id26117 . -1) (undo-tree-id26118 . -1) (undo-tree-id26119 . -1) (undo-tree-id26120 . -1) (undo-tree-id26121 . -1) (undo-tree-id26122 . -1) (undo-tree-id26123 . -1) (undo-tree-id26124 . -1) (undo-tree-id26125 . -1) (undo-tree-id26126 . -1) (undo-tree-id26127 . -1) (undo-tree-id26128 . -1) (undo-tree-id26129 . -1) (undo-tree-id26130 . -1) (undo-tree-id26131 . -1) (undo-tree-id26132 . -1) (undo-tree-id26133 . -1) (undo-tree-id26134 . -1) (undo-tree-id26135 . -1) (undo-tree-id26136 . -1) (undo-tree-id26137 . -1) (undo-tree-id26138 . -1) (undo-tree-id26139 . -1) (undo-tree-id26140 . -1) (undo-tree-id26141 . -1) (undo-tree-id26142 . -1) (undo-tree-id26143 . -1) (undo-tree-id26144 . -1) (undo-tree-id26145 . -1) (undo-tree-id26146 . -1) (undo-tree-id26147 . -1) (undo-tree-id26148 . -1) (undo-tree-id26149 . -1) (undo-tree-id26150 . -1) (undo-tree-id26151 . -1) (undo-tree-id26152 . -1) (undo-tree-id26153 . -1) (undo-tree-id26154 . -1) (undo-tree-id26155 . -1) (undo-tree-id26156 . -1) (undo-tree-id26157 . -1) (undo-tree-id26158 . -1) (undo-tree-id26159 . -1) (undo-tree-id26160 . -1) (undo-tree-id26161 . -1) (undo-tree-id26162 . -1) (undo-tree-id26163 . -1) (undo-tree-id26164 . -1) (undo-tree-id26165 . -1) (undo-tree-id26166 . -1) (undo-tree-id26167 . -1) (undo-tree-id26168 . -1) (undo-tree-id26169 . -1) (undo-tree-id26170 . -1) (undo-tree-id26171 . -1) (undo-tree-id26172 . -1) (undo-tree-id26173 . -1) (undo-tree-id26174 . -1) (undo-tree-id26175 . -1) (undo-tree-id26176 . -1) (undo-tree-id26177 . -1) (undo-tree-id26178 . -1) (undo-tree-id26179 . -1) (undo-tree-id26180 . -1) (undo-tree-id26181 . -1) (undo-tree-id26182 . -1) (undo-tree-id26183 . -1) (undo-tree-id26184 . -1) (undo-tree-id26185 . -1) (undo-tree-id26186 . -1) (undo-tree-id26187 . -1) (undo-tree-id26188 . -1) (undo-tree-id26189 . -1) (undo-tree-id26190 . -1) (undo-tree-id26191 . -1) (undo-tree-id26192 . -1) (undo-tree-id26193 . -1) (undo-tree-id26194 . -1) (undo-tree-id26195 . -1) (undo-tree-id26196 . -1) (undo-tree-id26197 . -1) (undo-tree-id26198 . -1) (undo-tree-id26199 . -1) (undo-tree-id26200 . -1) (undo-tree-id26201 . -1) (undo-tree-id26202 . -1) (undo-tree-id26203 . -1) (undo-tree-id26204 . -1) (undo-tree-id26205 . -1) (undo-tree-id26206 . -1) (undo-tree-id26207 . -1) (undo-tree-id26208 . -1) (undo-tree-id26209 . -1) (undo-tree-id26210 . -1) (undo-tree-id26211 . -1) (undo-tree-id26212 . -1) (undo-tree-id26213 . -1) (undo-tree-id26214 . -1) (undo-tree-id26215 . -1) (undo-tree-id26216 . -1) (undo-tree-id26217 . -1) (undo-tree-id26218 . -1) (undo-tree-id26219 . -1) (undo-tree-id26220 . -1) (undo-tree-id26221 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -6204) (undo-tree-id26222 . -1) (undo-tree-id26223 . -1) (undo-tree-id26224 . -1) (undo-tree-id26225 . -1) (undo-tree-id26226 . -1) (undo-tree-id26227 . -1) (undo-tree-id26228 . -1) (undo-tree-id26229 . -1) (undo-tree-id26230 . -1) (undo-tree-id26231 . -1) (undo-tree-id26232 . -1) (undo-tree-id26233 . -1) (undo-tree-id26234 . -1) (undo-tree-id26235 . -1) (undo-tree-id26236 . -1) (undo-tree-id26237 . -1) (undo-tree-id26238 . -1) (undo-tree-id26239 . -1) (undo-tree-id26240 . -1) (undo-tree-id26241 . -1) (undo-tree-id26242 . -1) (undo-tree-id26243 . -1) (undo-tree-id26244 . -1) (undo-tree-id26245 . -1) (undo-tree-id26246 . -1) (undo-tree-id26247 . -1) (undo-tree-id26248 . -1) (undo-tree-id26249 . -1) (undo-tree-id26250 . -1) (undo-tree-id26251 . -1) (undo-tree-id26252 . -1) (undo-tree-id26253 . -1) (undo-tree-id26254 . -1) (undo-tree-id26255 . -1) (undo-tree-id26256 . -1) (undo-tree-id26257 . -1) (undo-tree-id26258 . -1) (undo-tree-id26259 . -1) (undo-tree-id26260 . -1) (undo-tree-id26261 . -1) (undo-tree-id26262 . -1) (undo-tree-id26263 . -1) (undo-tree-id26264 . -1) (undo-tree-id26265 . -1) (undo-tree-id26266 . -1) (undo-tree-id26267 . -1) (undo-tree-id26268 . -1) (undo-tree-id26269 . -1) (undo-tree-id26270 . -1) (undo-tree-id26271 . -1) (undo-tree-id26272 . -1) (undo-tree-id26273 . -1) (undo-tree-id26274 . -1) (undo-tree-id26275 . -1) (undo-tree-id26276 . -1) (undo-tree-id26277 . -1) (undo-tree-id26278 . -1) (undo-tree-id26279 . -1) (undo-tree-id26280 . -1) (undo-tree-id26281 . -1) (undo-tree-id26282 . -1) (undo-tree-id26283 . -1) (undo-tree-id26284 . -1) (undo-tree-id26285 . -1) (undo-tree-id26286 . -1) (undo-tree-id26287 . -1) (undo-tree-id26288 . -1) (undo-tree-id26289 . -1) (undo-tree-id26290 . -1) (undo-tree-id26291 . -1) (undo-tree-id26292 . -1) (undo-tree-id26293 . -1) (undo-tree-id26294 . -1) (undo-tree-id26295 . -1) (undo-tree-id26296 . -1) (undo-tree-id26297 . -1) (undo-tree-id26298 . -1) (undo-tree-id26299 . -1) (undo-tree-id26300 . -1) (undo-tree-id26301 . -1) (undo-tree-id26302 . -1) (undo-tree-id26303 . -1) (undo-tree-id26304 . -1) (undo-tree-id26305 . -1) (undo-tree-id26306 . -1) (undo-tree-id26307 . -1) (undo-tree-id26308 . -1) (undo-tree-id26309 . -1) (undo-tree-id26310 . -1) (undo-tree-id26311 . -1) (undo-tree-id26312 . -1) (undo-tree-id26313 . -1) (undo-tree-id26314 . -1) (undo-tree-id26315 . -1) (undo-tree-id26316 . -1) (undo-tree-id26317 . -1) (undo-tree-id26318 . -1) (undo-tree-id26319 . -1) (undo-tree-id26320 . -1) (undo-tree-id26321 . -1) (undo-tree-id26322 . -1) (undo-tree-id26323 . -1) (undo-tree-id26324 . -1) (undo-tree-id26325 . -1) (undo-tree-id26326 . -1) (undo-tree-id26327 . -1) (undo-tree-id26328 . -1) (undo-tree-id26329 . -1) (undo-tree-id26330 . -1) (undo-tree-id26331 . -1) (undo-tree-id26332 . -1) (undo-tree-id26333 . -1) (undo-tree-id26334 . -1) (undo-tree-id26335 . -1) (undo-tree-id26336 . -1) (undo-tree-id26337 . -1) (undo-tree-id26338 . -1) (undo-tree-id26339 . -1) (undo-tree-id26340 . -1) (undo-tree-id26341 . -1) (#(" " 0 1 (fontified t)) . -6205) (undo-tree-id26342 . -1) (undo-tree-id26343 . -1) (undo-tree-id26344 . -1) (undo-tree-id26345 . -1) (undo-tree-id26346 . -1) (undo-tree-id26347 . -1) (undo-tree-id26348 . -1) (undo-tree-id26349 . -1) (undo-tree-id26350 . -1) (undo-tree-id26351 . -1) (undo-tree-id26352 . -1) (undo-tree-id26353 . -1) (undo-tree-id26354 . -1) (undo-tree-id26355 . -1) (undo-tree-id26356 . -1) (undo-tree-id26357 . -1) (undo-tree-id26358 . -1) (undo-tree-id26359 . -1) (undo-tree-id26360 . -1) (undo-tree-id26361 . -1) (undo-tree-id26362 . -1) (undo-tree-id26363 . -1) (undo-tree-id26364 . -1) (undo-tree-id26365 . -1) (undo-tree-id26366 . -1) (undo-tree-id26367 . -1) (undo-tree-id26368 . -1) (undo-tree-id26369 . -1) (undo-tree-id26370 . -1) (undo-tree-id26371 . -1) (undo-tree-id26372 . -1) (undo-tree-id26373 . -1) (undo-tree-id26374 . -1) (undo-tree-id26375 . -1) (undo-tree-id26376 . -1) (undo-tree-id26377 . -1) (undo-tree-id26378 . -1) (undo-tree-id26379 . -1) (undo-tree-id26380 . -1) (undo-tree-id26381 . -1) (undo-tree-id26382 . -1) (undo-tree-id26383 . -1) (undo-tree-id26384 . -1) (undo-tree-id26385 . -1) (undo-tree-id26386 . -1) (undo-tree-id26387 . -1) (undo-tree-id26388 . -1) (undo-tree-id26389 . -1) (undo-tree-id26390 . -1) (undo-tree-id26391 . -1) (undo-tree-id26392 . -1) (undo-tree-id26393 . -1) (undo-tree-id26394 . -1) (undo-tree-id26395 . -1) (undo-tree-id26396 . -1) (undo-tree-id26397 . -1) (undo-tree-id26398 . -1) (undo-tree-id26399 . -1) (undo-tree-id26400 . -1) (undo-tree-id26401 . -1) (undo-tree-id26402 . -1) (undo-tree-id26403 . -1) (undo-tree-id26404 . -1) (undo-tree-id26405 . -1) (undo-tree-id26406 . -1) (undo-tree-id26407 . -1) (undo-tree-id26408 . -1) (undo-tree-id26409 . -1) (undo-tree-id26410 . -1) (undo-tree-id26411 . -1) (undo-tree-id26412 . -1) (undo-tree-id26413 . -1) (undo-tree-id26414 . -1) (undo-tree-id26415 . -1) (undo-tree-id26416 . -1) (undo-tree-id26417 . -1) (undo-tree-id26418 . -1) (undo-tree-id26419 . -1) (undo-tree-id26420 . -1) (undo-tree-id26421 . -1) (undo-tree-id26422 . -1) (undo-tree-id26423 . -1) (undo-tree-id26424 . -1) (undo-tree-id26425 . -1) (undo-tree-id26426 . -1) (undo-tree-id26427 . -1) (undo-tree-id26428 . -1) (undo-tree-id26429 . -1) (undo-tree-id26430 . -1) (undo-tree-id26431 . -1) (undo-tree-id26432 . -1) (undo-tree-id26433 . -1) (undo-tree-id26434 . -1) (undo-tree-id26435 . -1) (undo-tree-id26436 . -1) (undo-tree-id26437 . -1) (undo-tree-id26438 . -1) (undo-tree-id26439 . -1) (undo-tree-id26440 . -1) (undo-tree-id26441 . -1) (undo-tree-id26442 . -1) (undo-tree-id26443 . -1) (undo-tree-id26444 . -1) (undo-tree-id26445 . -1) (undo-tree-id26446 . -1) (undo-tree-id26447 . -1) (undo-tree-id26448 . -1) (undo-tree-id26449 . -1) (undo-tree-id26450 . -1) (undo-tree-id26451 . -1) (undo-tree-id26452 . -1) (undo-tree-id26453 . -1) (undo-tree-id26454 . -1) (undo-tree-id26455 . -1) (undo-tree-id26456 . -1) (#("1" 0 1 (fontified t)) . -6206) (undo-tree-id26457 . -1) (undo-tree-id26458 . -1) (undo-tree-id26459 . -1) (undo-tree-id26460 . -1) (undo-tree-id26461 . -1) (undo-tree-id26462 . -1) (undo-tree-id26463 . -1) (undo-tree-id26464 . -1) (undo-tree-id26465 . -1) (undo-tree-id26466 . -1) (undo-tree-id26467 . -1) (undo-tree-id26468 . -1) (undo-tree-id26469 . -1) (undo-tree-id26470 . -1) (undo-tree-id26471 . -1) (undo-tree-id26472 . -1) (undo-tree-id26473 . -1) (undo-tree-id26474 . -1) (undo-tree-id26475 . -1) (undo-tree-id26476 . -1) (undo-tree-id26477 . -1) (undo-tree-id26478 . -1) (undo-tree-id26479 . -1) (undo-tree-id26480 . -1) (undo-tree-id26481 . -1) (undo-tree-id26482 . -1) (undo-tree-id26483 . -1) (undo-tree-id26484 . -1) (undo-tree-id26485 . -1) (undo-tree-id26486 . -1) (undo-tree-id26487 . -1) (undo-tree-id26488 . -1) (undo-tree-id26489 . -1) (undo-tree-id26490 . -1) (undo-tree-id26491 . -1) (undo-tree-id26492 . -1) (undo-tree-id26493 . -1) (undo-tree-id26494 . -1) (undo-tree-id26495 . -1) (undo-tree-id26496 . -1) (undo-tree-id26497 . -1) (undo-tree-id26498 . -1) (undo-tree-id26499 . -1) (undo-tree-id26500 . -1) (undo-tree-id26501 . -1) (undo-tree-id26502 . -1) (undo-tree-id26503 . -1) (undo-tree-id26504 . -1) (undo-tree-id26505 . -1) (undo-tree-id26506 . -1) (undo-tree-id26507 . -1) (undo-tree-id26508 . -1) (undo-tree-id26509 . -1) (undo-tree-id26510 . -1) (undo-tree-id26511 . -1) (undo-tree-id26512 . -1) (undo-tree-id26513 . -1) (undo-tree-id26514 . -1) (undo-tree-id26515 . -1) (undo-tree-id26516 . -1) (undo-tree-id26517 . -1) (undo-tree-id26518 . -1) (undo-tree-id26519 . -1) (undo-tree-id26520 . -1) (undo-tree-id26521 . -1) (undo-tree-id26522 . -1) (undo-tree-id26523 . -1) (undo-tree-id26524 . -1) (undo-tree-id26525 . -1) (undo-tree-id26526 . -1) (undo-tree-id26527 . -1) (undo-tree-id26528 . -1) (undo-tree-id26529 . -1) (undo-tree-id26530 . -1) (undo-tree-id26531 . -1) (undo-tree-id26532 . -1) (undo-tree-id26533 . -1) (undo-tree-id26534 . -1) (undo-tree-id26535 . -1) (undo-tree-id26536 . -1) (undo-tree-id26537 . -1) (undo-tree-id26538 . -1) (undo-tree-id26539 . -1) (undo-tree-id26540 . -1) (undo-tree-id26541 . -1) (undo-tree-id26542 . -1) (undo-tree-id26543 . -1) (undo-tree-id26544 . -1) (undo-tree-id26545 . -1) (undo-tree-id26546 . -1) (undo-tree-id26547 . -1) (undo-tree-id26548 . -1) (undo-tree-id26549 . -1) (undo-tree-id26550 . -1) (undo-tree-id26551 . -1) (undo-tree-id26552 . -1) (undo-tree-id26553 . -1) (undo-tree-id26554 . -1) (undo-tree-id26555 . -1) (undo-tree-id26556 . -1) (undo-tree-id26557 . -1) (undo-tree-id26558 . -1) (undo-tree-id26559 . -1) (undo-tree-id26560 . -1) (undo-tree-id26561 . -1) (undo-tree-id26562 . -1) (undo-tree-id26563 . -1) (undo-tree-id26564 . -1) (undo-tree-id26565 . -1) 6207 (t 26715 42305 360900 384000)) nil (26715 42327 965549 597000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -6093) (undo-tree-id26566 . -1) (undo-tree-id26567 . -1) (undo-tree-id26568 . -1) (undo-tree-id26569 . -1) (undo-tree-id26570 . -1) (undo-tree-id26571 . -1) 6094 (t 26715 42327 989434 25000)) nil (26715 42368 587358 415000) 0 nil])
([nil nil ((6093 . 6103)) nil (26715 42368 587344 90000) 0 nil])
([nil nil ((#("round" 0 5 (fontified t)) . -6098) (undo-tree-id26592 . -5) (undo-tree-id26593 . -5) (undo-tree-id26594 . -5) (undo-tree-id26595 . -5) (undo-tree-id26596 . -5) (undo-tree-id26597 . -5) (undo-tree-id26598 . -5) (undo-tree-id26599 . -5) 6103 (t 26715 42368 613377 0)) nil (26715 42371 320348 474000) 0 nil])
([nil nil ((#("this_" 0 5 (fontified t)) . -6093) (undo-tree-id26578 . -5) (undo-tree-id26579 . -5) (undo-tree-id26580 . -5) (undo-tree-id26581 . -5) (undo-tree-id26582 . -5) (undo-tree-id26583 . -5) (undo-tree-id26584 . -5) (undo-tree-id26585 . -5) (undo-tree-id26586 . -5) (undo-tree-id26587 . -5) (undo-tree-id26588 . -5) (undo-tree-id26589 . -5) (undo-tree-id26590 . -5) (undo-tree-id26591 . -5) 6098) nil (26715 42371 320342 58000) 0 nil])
([nil nil ((6093 . 6100)) nil (26715 42371 320332 959000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -6099) (undo-tree-id26572 . -1) (undo-tree-id26573 . -1) (undo-tree-id26574 . -1) (undo-tree-id26575 . -1) (undo-tree-id26576 . -1) (undo-tree-id26577 . -1) 6100) nil (26715 42371 320331 783000) 0 nil])
([nil nil ((6099 . 6100)) nil (26715 42371 320314 256000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -6022) (undo-tree-id26611 . -1) (undo-tree-id26612 . -1) (undo-tree-id26613 . -1) (undo-tree-id26614 . -1) (undo-tree-id26615 . -1) (undo-tree-id26616 . -1) (undo-tree-id26617 . -1) (undo-tree-id26618 . -1) (undo-tree-id26619 . -1) (undo-tree-id26620 . -1) (undo-tree-id26621 . -1) (undo-tree-id26622 . -1) (#("4" 0 1 (fontified t)) . -6023) (undo-tree-id26623 . -1) (undo-tree-id26624 . -1) (undo-tree-id26625 . -1) (undo-tree-id26626 . -1) (undo-tree-id26627 . -1) (undo-tree-id26628 . -1) 6024 (t 26715 42371 346439 777000)) nil (26715 42474 443304 510000) 0 nil])
([nil nil ((6022 . 6023)) nil (26715 42474 443279 754000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -6022) (undo-tree-id26600 . -1) (undo-tree-id26601 . -1) (undo-tree-id26602 . -1) (undo-tree-id26603 . -1) (undo-tree-id26604 . -1) (undo-tree-id26605 . -1) (undo-tree-id26606 . -1) (undo-tree-id26607 . -1) (undo-tree-id26608 . -1) (undo-tree-id26609 . -1) (undo-tree-id26610 . -1) 6023) nil (26715 42474 443277 813000) 0 nil])
([nil nil ((6022 . 6023)) nil (26715 42474 443252 976000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -6158) (6154 . 6158) (#("        " 0 8 (fontified nil)) . -6085) (6081 . 6085) (#("        " 0 8 (fontified nil)) . -6014) (6010 . 6014) (#("    " 0 4 (fontified t)) . -5985) (#("    " 0 4 (fontified t)) . -5963) (#("    " 0 3 (fontified t) 3 4 (fontified t)) . -5954) (#("    " 0 4 (fontified t)) . -5939) 6234 (t 26715 42474 468752 761000)) nil (26715 42561 439220 629000) 0 nil])
([nil nil ((5984 . 5986)) nil (26715 42561 439219 330000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5985) (undo-tree-id26629 . -1) 5986) nil (26715 42561 439218 427000) 0 nil])
([nil nil ((5810 . 5811) (5810 . 5811)) nil (26715 42561 439209 345000) 0 nil])
([nil nil ((5810 . 5811)) nil (26715 42561 439208 680000) 0 nil])
([nil nil ((5811 . 5829)) nil (26715 42561 439208 275000) 0 nil])
([nil nil ((5829 . 5832)) nil (26715 42561 439207 872000) 0 nil])
([nil nil ((5832 . 5837)) nil (26715 42561 439207 458000) 0 nil])
([nil nil ((5837 . 5858)) nil (26715 42561 439207 46000) 0 nil])
([nil nil ((5858 . 5879)) nil (26715 42561 439206 188000) 0 nil])
([nil nil ((5879 . 5884)) nil (26715 42561 439205 575000) 0 nil])
([nil nil ((5884 . 5886)) nil (26715 42561 439201 918000) 0 nil])
([nil nil ((#("round]" 0 6 (fontified t)) . -6226) (undo-tree-id27209 . -6) (undo-tree-id27210 . -6) (undo-tree-id27211 . -6) (undo-tree-id27212 . -6) (undo-tree-id27213 . -6) (undo-tree-id27214 . -6) (undo-tree-id27215 . -6) (undo-tree-id27216 . -6) (undo-tree-id27217 . -6) (undo-tree-id27218 . -6) (undo-tree-id27219 . -6) 6232 (t 26715 42561 465629 547000)) nil (26715 42568 311914 667000) 0 nil])
([nil nil ((#("this_" 0 5 (fontified t)) . -6221) (undo-tree-id27192 . -5) (undo-tree-id27193 . -5) (undo-tree-id27194 . -5) (undo-tree-id27195 . -5) (undo-tree-id27196 . -5) (undo-tree-id27197 . -5) (undo-tree-id27198 . -5) (undo-tree-id27199 . -5) (undo-tree-id27200 . -5) (undo-tree-id27201 . -5) (undo-tree-id27202 . -5) (undo-tree-id27203 . -5) (undo-tree-id27204 . -5) (undo-tree-id27205 . -5) (undo-tree-id27206 . -5) (undo-tree-id27207 . -5) (undo-tree-id27208 . -5) 6226) nil (26715 42568 311900 456000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -6218) (undo-tree-id27170 . -3) (undo-tree-id27171 . -3) (undo-tree-id27172 . -3) (undo-tree-id27173 . -3) (undo-tree-id27174 . -3) (undo-tree-id27175 . -3) (undo-tree-id27176 . -3) (undo-tree-id27177 . -3) (undo-tree-id27178 . -3) (undo-tree-id27179 . -3) (undo-tree-id27180 . -3) (undo-tree-id27181 . -3) (undo-tree-id27182 . -3) (undo-tree-id27183 . -3) (undo-tree-id27184 . -3) (undo-tree-id27185 . -3) (undo-tree-id27186 . -3) (undo-tree-id27187 . -3) (undo-tree-id27188 . -3) (undo-tree-id27189 . -3) (undo-tree-id27190 . -3) (undo-tree-id27191 . -3) 6221) nil (26715 42568 311878 633000) 0 nil])
([nil nil ((#("x " 0 2 (fontified t)) . -6216) (undo-tree-id27143 . -2) (undo-tree-id27144 . -2) (undo-tree-id27145 . -2) (undo-tree-id27146 . -2) (undo-tree-id27147 . -2) (undo-tree-id27148 . -2) (undo-tree-id27149 . -2) (undo-tree-id27150 . -2) (undo-tree-id27151 . -2) (undo-tree-id27152 . -2) (undo-tree-id27153 . -2) (undo-tree-id27154 . -2) (undo-tree-id27155 . -2) (undo-tree-id27156 . -2) (undo-tree-id27157 . -2) (undo-tree-id27158 . -2) (undo-tree-id27159 . -2) (undo-tree-id27160 . -2) (undo-tree-id27161 . -2) (undo-tree-id27162 . -2) (undo-tree-id27163 . -2) (undo-tree-id27164 . -2) (undo-tree-id27165 . -2) (undo-tree-id27166 . -2) (undo-tree-id27167 . -2) (undo-tree-id27168 . -2) (undo-tree-id27169 . -2) 6218) nil (26715 42568 311844 985000) 0 nil])
([nil nil ((#("for " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -6212) (undo-tree-id27106 . -1) (undo-tree-id27107 . -1) (undo-tree-id27108 . -1) (undo-tree-id27109 . -1) (undo-tree-id27110 . -1) (undo-tree-id27111 . -4) (undo-tree-id27112 . -4) (undo-tree-id27113 . -4) (undo-tree-id27114 . -4) (undo-tree-id27115 . -4) (undo-tree-id27116 . -4) (undo-tree-id27117 . -4) (undo-tree-id27118 . -4) (undo-tree-id27119 . -4) (undo-tree-id27120 . -4) (undo-tree-id27121 . -4) (undo-tree-id27122 . -4) (undo-tree-id27123 . -4) (undo-tree-id27124 . -4) (undo-tree-id27125 . -4) (undo-tree-id27126 . -4) (undo-tree-id27127 . -4) (undo-tree-id27128 . -4) (undo-tree-id27129 . -4) (undo-tree-id27130 . -4) (undo-tree-id27131 . -4) (undo-tree-id27132 . -4) (undo-tree-id27133 . -4) (undo-tree-id27134 . -4) (undo-tree-id27135 . -4) (undo-tree-id27136 . -4) (undo-tree-id27137 . -4) (undo-tree-id27138 . -4) (undo-tree-id27139 . -4) (undo-tree-id27140 . -4) (undo-tree-id27141 . -4) (undo-tree-id27142 . -4) 6216) nil (26715 42568 311811 742000) 0 nil])
([nil nil ((#("x] " 0 3 (fontified t)) . -6209) (undo-tree-id27064 . -3) (undo-tree-id27065 . -3) (undo-tree-id27066 . -3) (undo-tree-id27067 . -3) (undo-tree-id27068 . -3) (undo-tree-id27069 . -3) (undo-tree-id27070 . -3) (undo-tree-id27071 . -3) (undo-tree-id27072 . -3) (undo-tree-id27073 . -3) (undo-tree-id27074 . -3) (undo-tree-id27075 . -3) (undo-tree-id27076 . -3) (undo-tree-id27077 . -3) (undo-tree-id27078 . -3) (undo-tree-id27079 . -3) (undo-tree-id27080 . -3) (undo-tree-id27081 . -3) (undo-tree-id27082 . -3) (undo-tree-id27083 . -3) (undo-tree-id27084 . -3) (undo-tree-id27085 . -3) (undo-tree-id27086 . -3) (undo-tree-id27087 . -3) (undo-tree-id27088 . -3) (undo-tree-id27089 . -3) (undo-tree-id27090 . -3) (undo-tree-id27091 . -3) (undo-tree-id27092 . -3) (undo-tree-id27093 . -3) (undo-tree-id27094 . -3) (undo-tree-id27095 . -3) (undo-tree-id27096 . -3) (undo-tree-id27097 . -3) (undo-tree-id27098 . -3) (undo-tree-id27099 . -3) (undo-tree-id27100 . -3) (undo-tree-id27101 . -3) (undo-tree-id27102 . -3) (undo-tree-id27103 . -3) (undo-tree-id27104 . -3) (undo-tree-id27105 . -3) 6212) nil (26715 42568 311766 935000) 0 nil])
([nil nil ((#("in " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -6206) (undo-tree-id27017 . -3) (undo-tree-id27018 . -3) (undo-tree-id27019 . -3) (undo-tree-id27020 . -3) (undo-tree-id27021 . -3) (undo-tree-id27022 . -3) (undo-tree-id27023 . -3) (undo-tree-id27024 . -3) (undo-tree-id27025 . -3) (undo-tree-id27026 . -3) (undo-tree-id27027 . -3) (undo-tree-id27028 . -3) (undo-tree-id27029 . -3) (undo-tree-id27030 . -3) (undo-tree-id27031 . -3) (undo-tree-id27032 . -3) (undo-tree-id27033 . -3) (undo-tree-id27034 . -3) (undo-tree-id27035 . -3) (undo-tree-id27036 . -3) (undo-tree-id27037 . -3) (undo-tree-id27038 . -3) (undo-tree-id27039 . -3) (undo-tree-id27040 . -3) (undo-tree-id27041 . -3) (undo-tree-id27042 . -3) (undo-tree-id27043 . -3) (undo-tree-id27044 . -3) (undo-tree-id27045 . -3) (undo-tree-id27046 . -3) (undo-tree-id27047 . -3) (undo-tree-id27048 . -3) (undo-tree-id27049 . -3) (undo-tree-id27050 . -3) (undo-tree-id27051 . -3) (undo-tree-id27052 . -3) (undo-tree-id27053 . -3) (undo-tree-id27054 . -3) (undo-tree-id27055 . -3) (undo-tree-id27056 . -3) (undo-tree-id27057 . -3) (undo-tree-id27058 . -3) (undo-tree-id27059 . -3) (undo-tree-id27060 . -3) (undo-tree-id27061 . -3) (undo-tree-id27062 . -3) (undo-tree-id27063 . -3) 6209) nil (26715 42568 311703 460000) 0 nil])
([nil nil ((#("y " 0 2 (fontified t)) . -6204) (undo-tree-id26965 . -2) (undo-tree-id26966 . -2) (undo-tree-id26967 . -2) (undo-tree-id26968 . -2) (undo-tree-id26969 . -2) (undo-tree-id26970 . -2) (undo-tree-id26971 . -2) (undo-tree-id26972 . -2) (undo-tree-id26973 . -2) (undo-tree-id26974 . -2) (undo-tree-id26975 . -2) (undo-tree-id26976 . -2) (undo-tree-id26977 . -2) (undo-tree-id26978 . -2) (undo-tree-id26979 . -2) (undo-tree-id26980 . -2) (undo-tree-id26981 . -2) (undo-tree-id26982 . -2) (undo-tree-id26983 . -2) (undo-tree-id26984 . -2) (undo-tree-id26985 . -2) (undo-tree-id26986 . -2) (undo-tree-id26987 . -2) (undo-tree-id26988 . -2) (undo-tree-id26989 . -2) (undo-tree-id26990 . -2) (undo-tree-id26991 . -2) (undo-tree-id26992 . -2) (undo-tree-id26993 . -2) (undo-tree-id26994 . -2) (undo-tree-id26995 . -2) (undo-tree-id26996 . -2) (undo-tree-id26997 . -2) (undo-tree-id26998 . -2) (undo-tree-id26999 . -2) (undo-tree-id27000 . -2) (undo-tree-id27001 . -2) (undo-tree-id27002 . -2) (undo-tree-id27003 . -2) (undo-tree-id27004 . -2) (undo-tree-id27005 . -2) (undo-tree-id27006 . -2) (undo-tree-id27007 . -2) (undo-tree-id27008 . -2) (undo-tree-id27009 . -2) (undo-tree-id27010 . -2) (undo-tree-id27011 . -2) (undo-tree-id27012 . -2) (undo-tree-id27013 . -2) (undo-tree-id27014 . -2) (undo-tree-id27015 . -2) (undo-tree-id27016 . -2) 6206) nil (26715 42568 311644 925000) 0 nil])
([nil nil ((#("for " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -6200) (undo-tree-id26908 . -4) (undo-tree-id26909 . -4) (undo-tree-id26910 . -4) (undo-tree-id26911 . -4) (undo-tree-id26912 . -4) (undo-tree-id26913 . -4) (undo-tree-id26914 . -4) (undo-tree-id26915 . -4) (undo-tree-id26916 . -4) (undo-tree-id26917 . -4) (undo-tree-id26918 . -4) (undo-tree-id26919 . -4) (undo-tree-id26920 . -4) (undo-tree-id26921 . -4) (undo-tree-id26922 . -4) (undo-tree-id26923 . -4) (undo-tree-id26924 . -4) (undo-tree-id26925 . -4) (undo-tree-id26926 . -4) (undo-tree-id26927 . -4) (undo-tree-id26928 . -4) (undo-tree-id26929 . -4) (undo-tree-id26930 . -4) (undo-tree-id26931 . -4) (undo-tree-id26932 . -4) (undo-tree-id26933 . -4) (undo-tree-id26934 . -4) (undo-tree-id26935 . -4) (undo-tree-id26936 . -4) (undo-tree-id26937 . -4) (undo-tree-id26938 . -4) (undo-tree-id26939 . -4) (undo-tree-id26940 . -4) (undo-tree-id26941 . -4) (undo-tree-id26942 . -4) (undo-tree-id26943 . -4) (undo-tree-id26944 . -4) (undo-tree-id26945 . -4) (undo-tree-id26946 . -4) (undo-tree-id26947 . -4) (undo-tree-id26948 . -4) (undo-tree-id26949 . -4) (undo-tree-id26950 . -4) (undo-tree-id26951 . -4) (undo-tree-id26952 . -4) (undo-tree-id26953 . -4) (undo-tree-id26954 . -4) (undo-tree-id26955 . -4) (undo-tree-id26956 . -4) (undo-tree-id26957 . -4) (undo-tree-id26958 . -4) (undo-tree-id26959 . -4) (undo-tree-id26960 . -4) (undo-tree-id26961 . -4) (undo-tree-id26962 . -4) (undo-tree-id26963 . -4) (undo-tree-id26964 . -4) 6204) nil (26715 42568 311579 953000) 0 nil])
([nil nil ((#("y) " 0 3 (fontified t)) . -6197) (undo-tree-id26846 . -3) (undo-tree-id26847 . -3) (undo-tree-id26848 . -3) (undo-tree-id26849 . -3) (undo-tree-id26850 . -3) (undo-tree-id26851 . -3) (undo-tree-id26852 . -3) (undo-tree-id26853 . -3) (undo-tree-id26854 . -3) (undo-tree-id26855 . -3) (undo-tree-id26856 . -3) (undo-tree-id26857 . -3) (undo-tree-id26858 . -3) (undo-tree-id26859 . -3) (undo-tree-id26860 . -3) (undo-tree-id26861 . -3) (undo-tree-id26862 . -3) (undo-tree-id26863 . -3) (undo-tree-id26864 . -3) (undo-tree-id26865 . -3) (undo-tree-id26866 . -3) (undo-tree-id26867 . -3) (undo-tree-id26868 . -3) (undo-tree-id26869 . -3) (undo-tree-id26870 . -3) (undo-tree-id26871 . -3) (undo-tree-id26872 . -3) (undo-tree-id26873 . -3) (undo-tree-id26874 . -3) (undo-tree-id26875 . -3) (undo-tree-id26876 . -3) (undo-tree-id26877 . -3) (undo-tree-id26878 . -3) (undo-tree-id26879 . -3) (undo-tree-id26880 . -3) (undo-tree-id26881 . -3) (undo-tree-id26882 . -3) (undo-tree-id26883 . -3) (undo-tree-id26884 . -3) (undo-tree-id26885 . -3) (undo-tree-id26886 . -3) (undo-tree-id26887 . -3) (undo-tree-id26888 . -3) (undo-tree-id26889 . -3) (undo-tree-id26890 . -3) (undo-tree-id26891 . -3) (undo-tree-id26892 . -3) (undo-tree-id26893 . -3) (undo-tree-id26894 . -3) (undo-tree-id26895 . -3) (undo-tree-id26896 . -3) (undo-tree-id26897 . -3) (undo-tree-id26898 . -3) (undo-tree-id26899 . -3) (undo-tree-id26900 . -3) (undo-tree-id26901 . -3) (undo-tree-id26902 . -3) (undo-tree-id26903 . -3) (undo-tree-id26904 . -3) (undo-tree-id26905 . -3) (undo-tree-id26906 . -3) (undo-tree-id26907 . -3) 6200) nil (26715 42568 311508 415000) 0 nil])
([nil nil ((#("array(" 0 6 (fontified t)) . -6191) (undo-tree-id26779 . -6) (undo-tree-id26780 . -6) (undo-tree-id26781 . -6) (undo-tree-id26782 . -6) (undo-tree-id26783 . -6) (undo-tree-id26784 . -6) (undo-tree-id26785 . -6) (undo-tree-id26786 . -6) (undo-tree-id26787 . -6) (undo-tree-id26788 . -6) (undo-tree-id26789 . -6) (undo-tree-id26790 . -6) (undo-tree-id26791 . -6) (undo-tree-id26792 . -6) (undo-tree-id26793 . -6) (undo-tree-id26794 . -6) (undo-tree-id26795 . -6) (undo-tree-id26796 . -6) (undo-tree-id26797 . -6) (undo-tree-id26798 . -6) (undo-tree-id26799 . -6) (undo-tree-id26800 . -6) (undo-tree-id26801 . -6) (undo-tree-id26802 . -6) (undo-tree-id26803 . -6) (undo-tree-id26804 . -6) (undo-tree-id26805 . -6) (undo-tree-id26806 . -6) (undo-tree-id26807 . -6) (undo-tree-id26808 . -6) (undo-tree-id26809 . -6) (undo-tree-id26810 . -6) (undo-tree-id26811 . -6) (undo-tree-id26812 . -6) (undo-tree-id26813 . -6) (undo-tree-id26814 . -6) (undo-tree-id26815 . -6) (undo-tree-id26816 . -6) (undo-tree-id26817 . -6) (undo-tree-id26818 . -6) (undo-tree-id26819 . -6) (undo-tree-id26820 . -6) (undo-tree-id26821 . -6) (undo-tree-id26822 . -6) (undo-tree-id26823 . -6) (undo-tree-id26824 . -6) (undo-tree-id26825 . -6) (undo-tree-id26826 . -6) (undo-tree-id26827 . -6) (undo-tree-id26828 . -6) (undo-tree-id26829 . -6) (undo-tree-id26830 . -6) (undo-tree-id26831 . -6) (undo-tree-id26832 . -6) (undo-tree-id26833 . -6) (undo-tree-id26834 . -6) (undo-tree-id26835 . -6) (undo-tree-id26836 . -6) (undo-tree-id26837 . -6) (undo-tree-id26838 . -6) (undo-tree-id26839 . -6) (undo-tree-id26840 . -6) (undo-tree-id26841 . -6) (undo-tree-id26842 . -6) (undo-tree-id26843 . -6) (undo-tree-id26844 . -6) (undo-tree-id26845 . -6) 6197) nil (26715 42568 311428 94000) 0 nil])
([nil nil ((#("hexlify_" 0 8 (fontified t)) . -6183) (undo-tree-id26707 . -8) (undo-tree-id26708 . -8) (undo-tree-id26709 . -8) (undo-tree-id26710 . -8) (undo-tree-id26711 . -8) (undo-tree-id26712 . -8) (undo-tree-id26713 . -8) (undo-tree-id26714 . -8) (undo-tree-id26715 . -8) (undo-tree-id26716 . -8) (undo-tree-id26717 . -8) (undo-tree-id26718 . -8) (undo-tree-id26719 . -8) (undo-tree-id26720 . -8) (undo-tree-id26721 . -8) (undo-tree-id26722 . -8) (undo-tree-id26723 . -8) (undo-tree-id26724 . -8) (undo-tree-id26725 . -8) (undo-tree-id26726 . -8) (undo-tree-id26727 . -8) (undo-tree-id26728 . -8) (undo-tree-id26729 . -8) (undo-tree-id26730 . -8) (undo-tree-id26731 . -8) (undo-tree-id26732 . -8) (undo-tree-id26733 . -8) (undo-tree-id26734 . -8) (undo-tree-id26735 . -8) (undo-tree-id26736 . -8) (undo-tree-id26737 . -8) (undo-tree-id26738 . -8) (undo-tree-id26739 . -8) (undo-tree-id26740 . -8) (undo-tree-id26741 . -8) (undo-tree-id26742 . -8) (undo-tree-id26743 . -8) (undo-tree-id26744 . -8) (undo-tree-id26745 . -8) (undo-tree-id26746 . -8) (undo-tree-id26747 . -8) (undo-tree-id26748 . -8) (undo-tree-id26749 . -8) (undo-tree-id26750 . -8) (undo-tree-id26751 . -8) (undo-tree-id26752 . -8) (undo-tree-id26753 . -8) (undo-tree-id26754 . -8) (undo-tree-id26755 . -8) (undo-tree-id26756 . -8) (undo-tree-id26757 . -8) (undo-tree-id26758 . -8) (undo-tree-id26759 . -8) (undo-tree-id26760 . -8) (undo-tree-id26761 . -8) (undo-tree-id26762 . -8) (undo-tree-id26763 . -8) (undo-tree-id26764 . -8) (undo-tree-id26765 . -8) (undo-tree-id26766 . -8) (undo-tree-id26767 . -8) (undo-tree-id26768 . -8) (undo-tree-id26769 . -8) (undo-tree-id26770 . -8) (undo-tree-id26771 . -8) (undo-tree-id26772 . -8) (undo-tree-id26773 . -8) (undo-tree-id26774 . -8) (undo-tree-id26775 . -8) (undo-tree-id26776 . -8) (undo-tree-id26777 . -8) (undo-tree-id26778 . -8) 6191) nil (26715 42569 237192 657000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -6181) (undo-tree-id27313 . -1) (undo-tree-id27314 . -1) (undo-tree-id27315 . -1) (undo-tree-id27316 . -1) (undo-tree-id27317 . -1) (undo-tree-id27318 . -1) (undo-tree-id27319 . -1) (undo-tree-id27320 . -1) (undo-tree-id27321 . -1) (undo-tree-id27322 . -1) (undo-tree-id27323 . -1) (undo-tree-id27324 . -1) (undo-tree-id27325 . -1) (undo-tree-id27326 . -1) (undo-tree-id27327 . -1) (undo-tree-id27328 . -1) (undo-tree-id27329 . -1) (undo-tree-id27330 . -1) (undo-tree-id27331 . -1) (undo-tree-id27332 . -1) (undo-tree-id27333 . -1) (undo-tree-id27334 . -1) (undo-tree-id27335 . -1) (undo-tree-id27336 . -1) (undo-tree-id27337 . -1) (undo-tree-id27338 . -1) (undo-tree-id27339 . -1) (undo-tree-id27340 . -1) (undo-tree-id27341 . -1) (undo-tree-id27342 . -1) (undo-tree-id27343 . -1) (undo-tree-id27344 . -1) (undo-tree-id27345 . -1) (undo-tree-id27346 . -1) (undo-tree-id27347 . -1) (undo-tree-id27348 . -1) (undo-tree-id27349 . -1) (undo-tree-id27350 . -1) (undo-tree-id27351 . -1) (undo-tree-id27352 . -1) (undo-tree-id27353 . -1) (undo-tree-id27354 . -1) (undo-tree-id27355 . -1) (undo-tree-id27356 . -1) (undo-tree-id27357 . -1) (undo-tree-id27358 . -1) (undo-tree-id27359 . -1) (undo-tree-id27360 . -1) (undo-tree-id27361 . -1) (undo-tree-id27362 . -1) (undo-tree-id27363 . -1) (undo-tree-id27364 . -1) (undo-tree-id27365 . -1) (undo-tree-id27366 . -1) (undo-tree-id27367 . -1) (undo-tree-id27368 . -1) (undo-tree-id27369 . -1) (undo-tree-id27370 . -1) (undo-tree-id27371 . -1) (undo-tree-id27372 . -1) (undo-tree-id27373 . -1) (undo-tree-id27374 . -1) (undo-tree-id27375 . -1) (undo-tree-id27376 . -1) (undo-tree-id27377 . -1) (undo-tree-id27378 . -1) (undo-tree-id27379 . -1) (undo-tree-id27380 . -1) (undo-tree-id27381 . -1) (undo-tree-id27382 . -1) (undo-tree-id27383 . -1) (undo-tree-id27384 . -1) (undo-tree-id27385 . -1) (undo-tree-id27386 . -1) (undo-tree-id27387 . -1) (undo-tree-id27388 . -1) (undo-tree-id27389 . -1) (undo-tree-id27390 . -1) (undo-tree-id27391 . -1) (undo-tree-id27392 . -1) (undo-tree-id27393 . -1) (undo-tree-id27394 . -1) (undo-tree-id27395 . -1) (undo-tree-id27396 . -1) (undo-tree-id27397 . -1) (undo-tree-id27398 . -1) (undo-tree-id27399 . -1) (undo-tree-id27400 . -1) (undo-tree-id27401 . -1) (undo-tree-id27402 . -1) (undo-tree-id27403 . -1) (undo-tree-id27404 . -1) (#("[" 0 1 (fontified t)) . -6182) (undo-tree-id27405 . -1) (undo-tree-id27406 . -1) (undo-tree-id27407 . -1) (undo-tree-id27408 . -1) (undo-tree-id27409 . -1) (undo-tree-id27410 . -1) (undo-tree-id27411 . -1) (undo-tree-id27412 . -1) (undo-tree-id27413 . -1) (undo-tree-id27414 . -1) (undo-tree-id27415 . -1) (undo-tree-id27416 . -1) (undo-tree-id27417 . -1) (undo-tree-id27418 . -1) (undo-tree-id27419 . -1) (undo-tree-id27420 . -1) (undo-tree-id27421 . -1) (undo-tree-id27422 . -1) (undo-tree-id27423 . -1) (undo-tree-id27424 . -1) (undo-tree-id27425 . -1) (undo-tree-id27426 . -1) (undo-tree-id27427 . -1) (undo-tree-id27428 . -1) (undo-tree-id27429 . -1) (undo-tree-id27430 . -1) (undo-tree-id27431 . -1) (undo-tree-id27432 . -1) (undo-tree-id27433 . -1) (undo-tree-id27434 . -1) (undo-tree-id27435 . -1) (undo-tree-id27436 . -1) (undo-tree-id27437 . -1) (undo-tree-id27438 . -1) (undo-tree-id27439 . -1) (undo-tree-id27440 . -1) (undo-tree-id27441 . -1) (undo-tree-id27442 . -1) (undo-tree-id27443 . -1) (undo-tree-id27444 . -1) (undo-tree-id27445 . -1) (undo-tree-id27446 . -1) (undo-tree-id27447 . -1) (undo-tree-id27448 . -1) (undo-tree-id27449 . -1) (undo-tree-id27450 . -1) (undo-tree-id27451 . -1) (undo-tree-id27452 . -1) (undo-tree-id27453 . -1) (undo-tree-id27454 . -1) (undo-tree-id27455 . -1) (undo-tree-id27456 . -1) (undo-tree-id27457 . -1) (undo-tree-id27458 . -1) (undo-tree-id27459 . -1) (undo-tree-id27460 . -1) (undo-tree-id27461 . -1) (undo-tree-id27462 . -1) (undo-tree-id27463 . -1) (undo-tree-id27464 . -1) (undo-tree-id27465 . -1) (undo-tree-id27466 . -1) (undo-tree-id27467 . -1) (undo-tree-id27468 . -1) (undo-tree-id27469 . -1) (undo-tree-id27470 . -1) (undo-tree-id27471 . -1) (undo-tree-id27472 . -1) (undo-tree-id27473 . -1) (undo-tree-id27474 . -1) (undo-tree-id27475 . -1) (undo-tree-id27476 . -1) (undo-tree-id27477 . -1) (undo-tree-id27478 . -1) (undo-tree-id27479 . -1) (undo-tree-id27480 . -1) (undo-tree-id27481 . -1) (undo-tree-id27482 . -1) (undo-tree-id27483 . -1) (undo-tree-id27484 . -1) (undo-tree-id27485 . -1) (undo-tree-id27486 . -1) (undo-tree-id27487 . -1) (undo-tree-id27488 . -1) (undo-tree-id27489 . -1) (undo-tree-id27490 . -1) (undo-tree-id27491 . -1) 6183) nil (26715 42574 914477 610000) 0 nil] [nil nil ((#("hex = [[" 0 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-operator-face fontified t) 5 8 (fontified t)) . -6175) (undo-tree-id27220 . -8) (undo-tree-id27221 . -8) (undo-tree-id27222 . -8) (undo-tree-id27223 . -8) (undo-tree-id27224 . -8) (undo-tree-id27225 . -8) (undo-tree-id27226 . -8) (undo-tree-id27227 . -8) (undo-tree-id27228 . -8) (undo-tree-id27229 . -8) (undo-tree-id27230 . -8) (undo-tree-id27231 . -8) (undo-tree-id27232 . -8) (undo-tree-id27233 . -8) (undo-tree-id27234 . -8) (undo-tree-id27235 . -8) (undo-tree-id27236 . -8) (undo-tree-id27237 . -8) (undo-tree-id27238 . -8) (undo-tree-id27239 . -8) (undo-tree-id27240 . -8) (undo-tree-id27241 . -8) (undo-tree-id27242 . -8) (undo-tree-id27243 . -8) (undo-tree-id27244 . -8) (undo-tree-id27245 . -8) (undo-tree-id27246 . -8) (undo-tree-id27247 . -8) (undo-tree-id27248 . -8) (undo-tree-id27249 . -8) (undo-tree-id27250 . -8) (undo-tree-id27251 . -8) (undo-tree-id27252 . -8) (undo-tree-id27253 . -8) (undo-tree-id27254 . -8) (undo-tree-id27255 . -8) (undo-tree-id27256 . -8) (undo-tree-id27257 . -8) (undo-tree-id27258 . -8) (undo-tree-id27259 . -8) (undo-tree-id27260 . -8) (undo-tree-id27261 . -8) (undo-tree-id27262 . -8) (undo-tree-id27263 . -8) (undo-tree-id27264 . -8) (undo-tree-id27265 . -8) (undo-tree-id27266 . -8) (undo-tree-id27267 . -8) (undo-tree-id27268 . -8) (undo-tree-id27269 . -8) (undo-tree-id27270 . -8) (undo-tree-id27271 . -8) (undo-tree-id27272 . -8) (undo-tree-id27273 . -8) (undo-tree-id27274 . -8) (undo-tree-id27275 . -8) (undo-tree-id27276 . -8) (undo-tree-id27277 . -8) (undo-tree-id27278 . -8) (undo-tree-id27279 . -8) (undo-tree-id27280 . -8) (undo-tree-id27281 . -8) (undo-tree-id27282 . -8) (undo-tree-id27283 . -8) (undo-tree-id27284 . -8) (undo-tree-id27285 . -8) (undo-tree-id27286 . -8) (undo-tree-id27287 . -8) (undo-tree-id27288 . -8) (undo-tree-id27289 . -8) (undo-tree-id27290 . -8) (undo-tree-id27291 . -8) (undo-tree-id27292 . -8) (undo-tree-id27293 . -8) (undo-tree-id27294 . -8) (undo-tree-id27295 . -8) (undo-tree-id27296 . -8) (undo-tree-id27297 . -8) (undo-tree-id27298 . -8) (undo-tree-id27299 . -8) (undo-tree-id27300 . -8) (undo-tree-id27301 . -8) 6183) ((6175 . 6183)) (26715 42569 237106 960000) 0 nil] [nil nil ((#("hex = [[" 0 3 (face font-lock-variable-name-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-operator-face fontified t) 5 8 (fontified t)) . -6175) (undo-tree-id26630 . -8) (undo-tree-id26631 . -8) (undo-tree-id26632 . -8) (undo-tree-id26633 . -8) (undo-tree-id26634 . -8) (undo-tree-id26635 . -8) (undo-tree-id26636 . -8) (undo-tree-id26637 . -8) (undo-tree-id26638 . -8) (undo-tree-id26639 . -8) (undo-tree-id26640 . -8) (undo-tree-id26641 . -8) (undo-tree-id26642 . -8) (undo-tree-id26643 . -8) (undo-tree-id26644 . -8) (undo-tree-id26645 . -8) (undo-tree-id26646 . -8) (undo-tree-id26647 . -8) (undo-tree-id26648 . -8) (undo-tree-id26649 . -8) (undo-tree-id26650 . -8) (undo-tree-id26651 . -8) (undo-tree-id26652 . -8) (undo-tree-id26653 . -8) (undo-tree-id26654 . -8) (undo-tree-id26655 . -8) (undo-tree-id26656 . -8) (undo-tree-id26657 . -8) (undo-tree-id26658 . -8) (undo-tree-id26659 . -8) (undo-tree-id26660 . -8) (undo-tree-id26661 . -8) (undo-tree-id26662 . -8) (undo-tree-id26663 . -8) (undo-tree-id26664 . -8) (undo-tree-id26665 . -8) (undo-tree-id26666 . -8) (undo-tree-id26667 . -8) (undo-tree-id26668 . -8) (undo-tree-id26669 . -8) (undo-tree-id26670 . -8) (undo-tree-id26671 . -8) (undo-tree-id26672 . -8) (undo-tree-id26673 . -8) (undo-tree-id26674 . -8) (undo-tree-id26675 . -8) (undo-tree-id26676 . -8) (undo-tree-id26677 . -8) (undo-tree-id26678 . -8) (undo-tree-id26679 . -8) (undo-tree-id26680 . -8) (undo-tree-id26681 . -8) (undo-tree-id26682 . -8) (undo-tree-id26683 . -8) (undo-tree-id26684 . -8) (undo-tree-id26685 . -8) (undo-tree-id26686 . -8) (undo-tree-id26687 . -8) (undo-tree-id26688 . -8) (undo-tree-id26689 . -8) (undo-tree-id26690 . -8) (undo-tree-id26691 . -8) (undo-tree-id26692 . -8) (undo-tree-id26693 . -8) (undo-tree-id26694 . -8) (undo-tree-id26695 . -8) (undo-tree-id26696 . -8) (undo-tree-id26697 . -8) (undo-tree-id26698 . -8) (undo-tree-id26699 . -8) (undo-tree-id26700 . -8) (undo-tree-id26701 . -8) (undo-tree-id26702 . -8) (undo-tree-id26703 . -8) (undo-tree-id26704 . -8) (undo-tree-id26705 . -8) (undo-tree-id26706 . -8) 6183) ((6175 . 6183)) (26715 42568 311214 561000) 0 nil])
([nil nil ((6181 . 6194)) nil (26715 42574 914292 748000) 0 nil])
nil
nil
([nil nil ((#("(" 0 1 (fontified t)) . -6193) (undo-tree-id27302 . -1) (undo-tree-id27303 . -1) (undo-tree-id27304 . -1) (undo-tree-id27305 . -1) (undo-tree-id27306 . -1) (undo-tree-id27307 . -1) (undo-tree-id27308 . -1) (undo-tree-id27309 . -1) (undo-tree-id27310 . -1) (undo-tree-id27311 . -1) (undo-tree-id27312 . -1) 6194) nil (26715 42574 914290 761000) 0 nil])
([nil nil ((6193 . 6206)) nil (26715 42574 914265 841000) 0 nil])
([nil nil ((#("round" 0 5 (face font-lock-variable-name-face fontified t)) . -6098) (undo-tree-id27635 . -5) (undo-tree-id27636 . -5) (undo-tree-id27637 . -5) (undo-tree-id27638 . -5) (undo-tree-id27639 . -5) (undo-tree-id27640 . -5) 6103 (t 26715 42574 938914 879000)) nil (26715 42592 381217 79000) 0 nil])
([nil nil ((#("this_" 0 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t)) . -6093) (undo-tree-id27623 . -5) (undo-tree-id27624 . -5) (undo-tree-id27625 . -5) (undo-tree-id27626 . -5) (undo-tree-id27627 . -5) (undo-tree-id27628 . -5) (undo-tree-id27629 . -5) (undo-tree-id27630 . -5) (undo-tree-id27631 . -5) (undo-tree-id27632 . -5) (undo-tree-id27633 . -5) (undo-tree-id27634 . -5) 6098) nil (26715 42592 381213 240000) 0 nil])
([nil nil ((6093 . 6098)) nil (26715 42592 381207 169000) 0 nil])
([nil nil ((6098 . 6104)) nil (26715 42592 381206 925000) 0 nil])
([nil nil ((#("array" 0 5 (face font-lock-variable-name-face fontified t)) . -6099) (undo-tree-id27592 . -1) (undo-tree-id27593 . -1) (undo-tree-id27594 . -1) (undo-tree-id27595 . -1) (undo-tree-id27596 . -1) (undo-tree-id27597 . -2) (undo-tree-id27598 . -2) (undo-tree-id27599 . -2) (undo-tree-id27600 . -2) (undo-tree-id27601 . -2) (undo-tree-id27602 . -3) (undo-tree-id27603 . -3) (undo-tree-id27604 . -3) (undo-tree-id27605 . -3) (undo-tree-id27606 . -3) (undo-tree-id27607 . -4) (undo-tree-id27608 . -4) (undo-tree-id27609 . -4) (undo-tree-id27610 . -4) (undo-tree-id27611 . -4) (undo-tree-id27612 . -5) (undo-tree-id27613 . -5) (undo-tree-id27614 . -5) (undo-tree-id27615 . -5) (undo-tree-id27616 . -5) (undo-tree-id27617 . -5) (undo-tree-id27618 . -5) (undo-tree-id27619 . -5) (undo-tree-id27620 . -5) (undo-tree-id27621 . -5) (undo-tree-id27622 . -5) 6104) nil (26715 42592 381206 89000) 0 nil])
([nil nil ((#("state_" 0 6 (face font-lock-variable-name-face fontified t)) . -6093) (undo-tree-id27521 . -1) (undo-tree-id27522 . -1) (undo-tree-id27523 . -1) (undo-tree-id27524 . -1) (undo-tree-id27525 . -1) (undo-tree-id27526 . -2) (undo-tree-id27527 . -2) (undo-tree-id27528 . -2) (undo-tree-id27529 . -2) (undo-tree-id27530 . -2) (undo-tree-id27531 . -3) (undo-tree-id27532 . -3) (undo-tree-id27533 . -3) (undo-tree-id27534 . -3) (undo-tree-id27535 . -3) (undo-tree-id27536 . -4) (undo-tree-id27537 . -4) (undo-tree-id27538 . -4) (undo-tree-id27539 . -4) (undo-tree-id27540 . -4) (undo-tree-id27541 . -5) (undo-tree-id27542 . -5) (undo-tree-id27543 . -5) (undo-tree-id27544 . -5) (undo-tree-id27545 . -5) (undo-tree-id27546 . -6) (undo-tree-id27547 . -6) (undo-tree-id27548 . -6) (undo-tree-id27549 . -6) (undo-tree-id27550 . -6) (undo-tree-id27551 . -6) (undo-tree-id27552 . -6) (undo-tree-id27553 . -6) (undo-tree-id27554 . -6) (undo-tree-id27555 . -6) (undo-tree-id27556 . -6) (undo-tree-id27557 . -6) (undo-tree-id27558 . -6) (undo-tree-id27559 . -6) (undo-tree-id27560 . -6) (undo-tree-id27561 . -6) (undo-tree-id27562 . -6) (undo-tree-id27563 . -6) (undo-tree-id27564 . -6) (undo-tree-id27565 . -6) (undo-tree-id27566 . -6) (undo-tree-id27567 . -6) (undo-tree-id27568 . -6) (undo-tree-id27569 . -6) (undo-tree-id27570 . -6) (undo-tree-id27571 . -6) (undo-tree-id27572 . -6) (undo-tree-id27573 . -6) (undo-tree-id27574 . -6) (undo-tree-id27575 . -6) (undo-tree-id27576 . -6) (undo-tree-id27577 . -6) (undo-tree-id27578 . -6) (undo-tree-id27579 . -6) (undo-tree-id27580 . -6) (undo-tree-id27581 . -6) (undo-tree-id27582 . -6) (undo-tree-id27583 . -6) (undo-tree-id27584 . -6) (undo-tree-id27585 . -6) (undo-tree-id27586 . -6) (undo-tree-id27587 . -6) (undo-tree-id27588 . -6) (undo-tree-id27589 . -6) (undo-tree-id27590 . -6) (undo-tree-id27591 . -6) 6099) nil (26715 42592 381188 375000) 0 nil])
([nil nil ((6093 . 6094)) nil (26715 42592 381150 874000) 0 nil])
([nil nil ((#("round" 0 5 (fontified t)) . -6124) (undo-tree-id27509 . -2) (undo-tree-id27510 . -2) (undo-tree-id27511 . -2) (undo-tree-id27512 . -2) (undo-tree-id27513 . -2) (undo-tree-id27514 . -2) (undo-tree-id27515 . -2) (undo-tree-id27516 . -2) (undo-tree-id27517 . -2) (undo-tree-id27518 . -2) (undo-tree-id27519 . -2) (undo-tree-id27520 . -5) 6129) nil (26715 42592 381150 13000) 0 nil])
([nil nil ((#("this_" 0 5 (fontified t)) . -6119) (undo-tree-id27492 . -5) (undo-tree-id27493 . -5) (undo-tree-id27494 . -5) (undo-tree-id27495 . -5) (undo-tree-id27496 . -5) (undo-tree-id27497 . -5) (undo-tree-id27498 . -5) (undo-tree-id27499 . -5) (undo-tree-id27500 . -5) (undo-tree-id27501 . -5) (undo-tree-id27502 . -5) (undo-tree-id27503 . -5) (undo-tree-id27504 . -5) (undo-tree-id27505 . -5) (undo-tree-id27506 . -5) (undo-tree-id27507 . -5) (undo-tree-id27508 . -5) 6124) nil (26715 42592 381142 201000) 0 nil])
([nil nil ((6119 . 6120)) nil (26715 42592 380979 221000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 6120)) nil (26715 42592 380978 376000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 6120) (#("(" 0 1 (fontified t)) . 6120) (#("y" 0 1 (fontified t)) . 6120) (#("p" 0 1 (fontified t)) . 6120) (#("o" 0 1 (fontified t)) . 6120) (#("c" 0 1 (fontified t)) . 6120)) nil (26715 42592 380974 348000) 0 nil])
([nil nil ((#("round" 0 5 (fontified t)) . -6175) (undo-tree-id27653 . -5) (undo-tree-id27654 . -5) (undo-tree-id27655 . -5) (undo-tree-id27656 . -5) (undo-tree-id27657 . -5) (undo-tree-id27658 . -5) 6180 (t 26715 42592 404282 783000)) nil (26715 42597 582386 863000) 0 nil])
([nil nil ((#("this_" 0 5 (fontified t)) . -6170) (undo-tree-id27641 . -5) (undo-tree-id27642 . -5) (undo-tree-id27643 . -5) (undo-tree-id27644 . -5) (undo-tree-id27645 . -5) (undo-tree-id27646 . -5) (undo-tree-id27647 . -5) (undo-tree-id27648 . -5) (undo-tree-id27649 . -5) (undo-tree-id27650 . -5) (undo-tree-id27651 . -5) (undo-tree-id27652 . -5) 6175) nil (26715 42597 582382 919000) 0 nil])
([nil nil ((6170 . 6171)) nil (26715 42597 582363 340000) 0 nil])
([nil nil ((#("round" 0 5 (face font-lock-variable-name-face fontified t)) . -6144) (undo-tree-id27666 . -5) 6149 (t 26715 42597 609392 7000)) nil (26715 42601 347720 109000) 0 nil])
([nil nil ((#("this_" 0 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t)) . -6139) (undo-tree-id27659 . -5) (undo-tree-id27660 . -5) (undo-tree-id27661 . -5) (undo-tree-id27662 . -5) (undo-tree-id27663 . -5) (undo-tree-id27664 . -5) (undo-tree-id27665 . -5) 6144) nil (26715 42601 347718 465000) 0 nil])
([nil nil ((6139 . 6140)) nil (26715 42601 347703 955000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5971) (#("h" 0 1 (fontified t)) . 5971) (#("t" 0 1 (fontified t)) . 5971) (#("i" 0 1 (fontified t)) . 5971) (#("w" 0 1 (face font-lock-keyword-face fontified t)) . 5971) (t 26715 42601 371470 833000)) nil (26715 42633 312984 782000) 0 nil])
([nil nil ((#("printoptions" 0 1 (fontified t) 1 12 (fontified t)) . -5977) (undo-tree-id27701 . -12) 5989) nil (26715 42633 312984 117000) 0 nil])
([nil nil ((5977 . 5981)) nil (26715 42633 312983 258000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -5980) (undo-tree-id27695 . -1) (undo-tree-id27696 . -1) (undo-tree-id27697 . -1) (undo-tree-id27698 . -1) (undo-tree-id27699 . -1) (undo-tree-id27700 . -1) 5981) nil (26715 42633 312982 836000) 0 nil])
([nil nil ((5980 . 5982)) nil (26715 42633 312979 528000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -5981) (undo-tree-id27689 . -1) (undo-tree-id27690 . -1) (undo-tree-id27691 . -1) (undo-tree-id27692 . -1) (undo-tree-id27693 . -1) (undo-tree-id27694 . -1) 5982) nil (26715 42633 312978 954000) 0 nil])
([nil nil ((5981 . 5991)) nil (26715 42633 312974 585000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -5989) (undo-tree-id27667 . -1) (undo-tree-id27668 . -1) (undo-tree-id27669 . -1) (undo-tree-id27670 . -1) (undo-tree-id27671 . -1) (undo-tree-id27672 . -1) (undo-tree-id27673 . -1) (undo-tree-id27674 . -1) (undo-tree-id27675 . -1) (undo-tree-id27676 . -1) (undo-tree-id27677 . -1) (undo-tree-id27678 . -1) (undo-tree-id27679 . -1) (undo-tree-id27680 . -1) (undo-tree-id27681 . -1) (undo-tree-id27682 . -1) (#("n" 0 1 (fontified t)) . -5990) (undo-tree-id27683 . -1) (undo-tree-id27684 . -1) (undo-tree-id27685 . -1) (undo-tree-id27686 . -1) (undo-tree-id27687 . -1) (undo-tree-id27688 . -1) 5991) nil (26715 42633 312973 61000) 0 nil])
([nil nil ((5989 . 5993)) nil (26715 42633 312946 876000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -6014) (undo-tree-id27784 . -1) 6015 (t 26715 42633 343136 839000)) nil (26715 42724 571618 142000) 0 nil])
([nil nil ((6214 . 6219)) nil (26715 42724 571616 936000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6215) (undo-tree-id27783 . -4) 6219) nil (26715 42724 571616 514000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6341 . 6342) (nil fontified nil 6341 . 6342) (nil fontified nil 6324 . 6341) (nil fontified nil 6323 . 6324) (nil fontified nil 6321 . 6323) (nil fontified nil 6319 . 6321) (nil fontified nil 6318 . 6319) (nil fontified nil 6316 . 6318) (nil fontified nil 6307 . 6316) (nil fontified nil 6300 . 6307) (nil fontified nil 6299 . 6300) (nil fontified nil 6294 . 6299) (nil fontified nil 6290 . 6294) (nil fontified nil 6289 . 6290) (nil fontified nil 6273 . 6289) (nil fontified nil 6272 . 6273) (nil fontified nil 6271 . 6272) (nil fontified nil 6270 . 6271) (nil fontified nil 6267 . 6270) (nil fontified nil 6266 . 6267) (nil fontified nil 6265 . 6266) (nil fontified nil 6261 . 6265) (nil fontified nil 6222 . 6261) (nil fontified nil 6221 . 6222) (nil fontified nil 6220 . 6221) (nil fontified nil 6219 . 6220) (nil fontified nil 6215 . 6219) (6215 . 6342)) nil (26715 42724 571615 151000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6282) (#("    " 0 4 (fontified t)) . -6257) (#("    " 0 4 (fontified t)) . -6215)) nil (26715 42724 571613 308000) 0 nil])
([nil nil ((#("hex" 0 3 (fontified t)) . -6209) (undo-tree-id27777 . -3) (undo-tree-id27778 . -3) (undo-tree-id27779 . -3) (undo-tree-id27780 . -3) (undo-tree-id27781 . -3) (undo-tree-id27782 . -3) 6212) nil (26715 42724 571612 692000) 0 nil])
([nil nil ((#("round_" 0 6 (fontified t)) . -6203) (undo-tree-id27766 . -6) (undo-tree-id27767 . -6) (undo-tree-id27768 . -6) (undo-tree-id27769 . -6) (undo-tree-id27770 . -6) (undo-tree-id27771 . -6) (undo-tree-id27772 . -6) (undo-tree-id27773 . -6) (undo-tree-id27774 . -6) (undo-tree-id27775 . -6) (undo-tree-id27776 . -6) 6209) nil (26715 42724 571609 58000) 0 nil])
([nil nil ((#("this_" 0 5 (fontified t)) . -6198) (undo-tree-id27750 . -5) (undo-tree-id27751 . -5) (undo-tree-id27752 . -5) (undo-tree-id27753 . -5) (undo-tree-id27754 . -5) (undo-tree-id27755 . -5) (undo-tree-id27756 . -5) (undo-tree-id27757 . -5) (undo-tree-id27758 . -5) (undo-tree-id27759 . -5) (undo-tree-id27760 . -5) (undo-tree-id27761 . -5) (undo-tree-id27762 . -5) (undo-tree-id27763 . -5) (undo-tree-id27764 . -5) (undo-tree-id27765 . -5) 6203) nil (26715 42724 571603 62000) 0 nil])
([nil nil ((6198 . 6203)) nil (26715 42724 571594 759000) 0 nil])
([nil nil ((#("hex" 0 3 (fontified t)) . -6316) (undo-tree-id27749 . -3) 6319) nil (26715 42724 571594 307000) 0 nil])
([nil nil ((#("round_" 0 6 (fontified t)) . -6310) (undo-tree-id27728 . -4) (undo-tree-id27729 . -4) (undo-tree-id27730 . -4) (undo-tree-id27731 . -4) (undo-tree-id27732 . -4) (undo-tree-id27733 . -4) (undo-tree-id27734 . -4) (undo-tree-id27735 . -4) (undo-tree-id27736 . -4) (undo-tree-id27737 . -4) (undo-tree-id27738 . -4) (undo-tree-id27739 . -4) (undo-tree-id27740 . -4) (undo-tree-id27741 . -4) (undo-tree-id27742 . -4) (undo-tree-id27743 . -6) (undo-tree-id27744 . -6) (undo-tree-id27745 . -6) (undo-tree-id27746 . -6) (undo-tree-id27747 . -6) (undo-tree-id27748 . -6) 6316) nil (26715 42724 571593 49000) 0 nil])
([nil nil ((#("this_" 0 5 (fontified t)) . -6305) (undo-tree-id27702 . -5) (undo-tree-id27703 . -5) (undo-tree-id27704 . -5) (undo-tree-id27705 . -5) (undo-tree-id27706 . -5) (undo-tree-id27707 . -5) (undo-tree-id27708 . -5) (undo-tree-id27709 . -5) (undo-tree-id27710 . -5) (undo-tree-id27711 . -5) (undo-tree-id27712 . -5) (undo-tree-id27713 . -5) (undo-tree-id27714 . -5) (undo-tree-id27715 . -5) (undo-tree-id27716 . -5) (undo-tree-id27717 . -5) (undo-tree-id27718 . -5) (undo-tree-id27719 . -5) (undo-tree-id27720 . -5) (undo-tree-id27721 . -5) (undo-tree-id27722 . -5) (undo-tree-id27723 . -5) (undo-tree-id27724 . -5) (undo-tree-id27725 . -5) (undo-tree-id27726 . -5) (undo-tree-id27727 . -5) 6310) nil (26715 42724 571581 515000) 0 nil])
([nil nil ((6305 . 6310)) nil (26715 42724 571555 980000) 0 nil])
([nil nil ((#("= A[x][y][z]" 0 1 (face font-lock-operator-face fontified t) 1 12 (fontified t)) . 2006) (undo-tree-id27836 . -12) (undo-tree-id27837 . -12) (undo-tree-id27838 . -12) (undo-tree-id27839 . -12) (undo-tree-id27840 . -12) (undo-tree-id27841 . -12) (undo-tree-id27842 . -10) (undo-tree-id27843 . -10) (undo-tree-id27844 . -10) (undo-tree-id27845 . -10) (undo-tree-id27846 . -10) (undo-tree-id27847 . -10) (undo-tree-id27848 . -10) (undo-tree-id27849 . -10) (undo-tree-id27850 . -10) (undo-tree-id27851 . -10) (undo-tree-id27852 . -10) (undo-tree-id27853 . -10) (undo-tree-id27854 . -7) (undo-tree-id27855 . -7) (undo-tree-id27856 . -7) (undo-tree-id27857 . -7) (undo-tree-id27858 . -7) (undo-tree-id27859 . -4) (undo-tree-id27860 . -4) (undo-tree-id27861 . -4) (undo-tree-id27862 . -4) (undo-tree-id27863 . -4) (undo-tree-id27864 . -2) (undo-tree-id27865 . -2) (undo-tree-id27866 . -2) (undo-tree-id27867 . -2) (undo-tree-id27868 . -2) (undo-tree-id27869 . -1) (undo-tree-id27870 . -1) (undo-tree-id27871 . -1) (undo-tree-id27872 . -1) (undo-tree-id27873 . -1) (t 26715 42724 601002 530000)) nil (26715 43157 373739 581000) 0 nil])
([nil nil ((2008 . 2009)) nil (26715 43157 373720 977000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2005) (undo-tree-id27785 . -1) (undo-tree-id27786 . -1) (undo-tree-id27787 . -1) (undo-tree-id27788 . -1) (undo-tree-id27789 . -1) (undo-tree-id27790 . -1) (undo-tree-id27791 . -1) (undo-tree-id27792 . -1) (undo-tree-id27793 . -1) (undo-tree-id27794 . -1) (undo-tree-id27795 . -1) (undo-tree-id27796 . -1) (undo-tree-id27797 . -1) (undo-tree-id27798 . -1) (undo-tree-id27799 . -1) (undo-tree-id27800 . -1) (undo-tree-id27801 . -1) (undo-tree-id27802 . -1) (undo-tree-id27803 . -1) (undo-tree-id27804 . -1) (undo-tree-id27805 . -1) (undo-tree-id27806 . -1) (undo-tree-id27807 . -1) (undo-tree-id27808 . -1) (undo-tree-id27809 . -1) (undo-tree-id27810 . -1) (undo-tree-id27811 . -1) (undo-tree-id27812 . -1) (undo-tree-id27813 . -1) (undo-tree-id27814 . -1) (undo-tree-id27815 . -1) (undo-tree-id27816 . -1) (undo-tree-id27817 . -1) (undo-tree-id27818 . -1) (undo-tree-id27819 . -1) (undo-tree-id27820 . -1) (undo-tree-id27821 . -1) (undo-tree-id27822 . -1) (undo-tree-id27823 . -1) (undo-tree-id27824 . -1) (undo-tree-id27825 . -1) (undo-tree-id27826 . -1) (undo-tree-id27827 . -1) (undo-tree-id27828 . -1) (undo-tree-id27829 . -1) (undo-tree-id27830 . -1) (undo-tree-id27831 . -1) (undo-tree-id27832 . -1) (undo-tree-id27833 . -1) (undo-tree-id27834 . -1) (undo-tree-id27835 . -1) 2006) nil (26715 43157 373716 985000) 0 nil])
([nil nil ((1872 . 1885) (t 26715 43157 397649 68000)) nil (26715 43580 854990 21000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1881) (undo-tree-id28094 . -4) (undo-tree-id28095 . -4) (undo-tree-id28096 . -4) (undo-tree-id28097 . -4) (undo-tree-id28098 . -4) (undo-tree-id28099 . -4) (undo-tree-id28100 . -4) (undo-tree-id28101 . -4) (undo-tree-id28102 . -4) (undo-tree-id28103 . -4) (undo-tree-id28104 . -4) (undo-tree-id28105 . -4) (undo-tree-id28106 . -4) (undo-tree-id28107 . -4) (undo-tree-id28108 . -4) 1885) nil (26715 43580 854987 439000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1877) (undo-tree-id28072 . -4) (undo-tree-id28073 . -4) (undo-tree-id28074 . -4) (undo-tree-id28075 . -4) (undo-tree-id28076 . -4) (undo-tree-id28077 . -4) (undo-tree-id28078 . -4) (undo-tree-id28079 . -4) (undo-tree-id28080 . -4) (undo-tree-id28081 . -4) (undo-tree-id28082 . -4) (undo-tree-id28083 . -4) (undo-tree-id28084 . -4) (undo-tree-id28085 . -4) (undo-tree-id28086 . -4) (undo-tree-id28087 . -4) (undo-tree-id28088 . -4) (undo-tree-id28089 . -4) (undo-tree-id28090 . -4) (undo-tree-id28091 . -4) (undo-tree-id28092 . -4) (undo-tree-id28093 . -4) 1881) nil (26715 43580 854961 707000) 0 nil])
([nil nil ((1877 . 1885)) nil (26715 43580 854927 938000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1884) (undo-tree-id28065 . -1) (undo-tree-id28066 . -1) (undo-tree-id28067 . -1) (undo-tree-id28068 . -1) (undo-tree-id28069 . -1) (undo-tree-id28070 . -1) (undo-tree-id28071 . -1) 1885) nil (26715 43580 854926 228000) 0 nil])
([nil nil ((1884 . 1895)) nil (26715 43580 854913 57000) 0 nil])
([nil nil ((1895 . 1904)) nil (26715 43580 854912 110000) 0 nil])
([nil nil ((1904 . 1909)) nil (26715 43580 854911 174000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -1908) (undo-tree-id28054 . -1) (undo-tree-id28055 . -1) (undo-tree-id28056 . -1) (undo-tree-id28057 . -1) (undo-tree-id28058 . -1) (undo-tree-id28059 . -1) (undo-tree-id28060 . -1) (undo-tree-id28061 . -1) (undo-tree-id28062 . -1) (undo-tree-id28063 . -1) (undo-tree-id28064 . -1) 1909) nil (26715 43580 854909 160000) 0 nil])
([nil nil ((1908 . 1923)) nil (26715 43580 854892 131000) 0 nil])
([nil nil ((1994 . 2007)) nil (26715 43580 854891 156000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2003) (undo-tree-id28039 . -4) (undo-tree-id28040 . -4) (undo-tree-id28041 . -4) (undo-tree-id28042 . -4) (undo-tree-id28043 . -4) (undo-tree-id28044 . -4) (undo-tree-id28045 . -4) (undo-tree-id28046 . -4) (undo-tree-id28047 . -4) (undo-tree-id28048 . -4) (undo-tree-id28049 . -4) (undo-tree-id28050 . -4) (undo-tree-id28051 . -4) (undo-tree-id28052 . -4) (undo-tree-id28053 . -4) 2007) nil (26715 43580 854888 889000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1999) (undo-tree-id28017 . -4) (undo-tree-id28018 . -4) (undo-tree-id28019 . -4) (undo-tree-id28020 . -4) (undo-tree-id28021 . -4) (undo-tree-id28022 . -4) (undo-tree-id28023 . -4) (undo-tree-id28024 . -4) (undo-tree-id28025 . -4) (undo-tree-id28026 . -4) (undo-tree-id28027 . -4) (undo-tree-id28028 . -4) (undo-tree-id28029 . -4) (undo-tree-id28030 . -4) (undo-tree-id28031 . -4) (undo-tree-id28032 . -4) (undo-tree-id28033 . -4) (undo-tree-id28034 . -4) (undo-tree-id28035 . -4) (undo-tree-id28036 . -4) (undo-tree-id28037 . -4) (undo-tree-id28038 . -4) 2003) nil (26715 43580 854862 34000) 0 nil])
([nil nil ((1999 . 2017)) nil (26715 43580 854819 946000) 0 nil])
([nil nil ((2017 . 2026)) nil (26715 43580 854818 818000) 0 nil])
([nil nil ((2026 . 2040)) nil (26715 43580 854817 869000) 0 nil])
([nil nil ((2040 . 2045)) nil (26715 43580 854816 827000) 0 nil])
([nil nil ((#("        for z in range(64):" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 14 (fontified t) 14 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 22 (face font-lock-builtin-face fontified t) 22 27 (fontified t)) . 2018) (undo-tree-id27883 . -8) (undo-tree-id27884 . -8) (undo-tree-id27885 . -8) (undo-tree-id27886 . -8) (undo-tree-id27887 . -8) (undo-tree-id27888 . -8) (undo-tree-id27889 . -8) (undo-tree-id27890 . -9) (undo-tree-id27891 . -9) (undo-tree-id27892 . -9) (undo-tree-id27893 . -9) (undo-tree-id27894 . -9) (undo-tree-id27895 . -10) (undo-tree-id27896 . -10) (undo-tree-id27897 . -10) (undo-tree-id27898 . -10) (undo-tree-id27899 . -10) (undo-tree-id27900 . -11) (undo-tree-id27901 . -11) (undo-tree-id27902 . -11) (undo-tree-id27903 . -11) (undo-tree-id27904 . -11) (undo-tree-id27905 . -12) (undo-tree-id27906 . -12) (undo-tree-id27907 . -12) (undo-tree-id27908 . -12) (undo-tree-id27909 . -12) (undo-tree-id27910 . -12) (undo-tree-id27911 . -12) (undo-tree-id27912 . -12) (undo-tree-id27913 . -12) (undo-tree-id27914 . -12) (undo-tree-id27915 . -12) (undo-tree-id27916 . -13) (undo-tree-id27917 . -13) (undo-tree-id27918 . -13) (undo-tree-id27919 . -13) (undo-tree-id27920 . -13) (undo-tree-id27921 . -14) (undo-tree-id27922 . -14) (undo-tree-id27923 . -14) (undo-tree-id27924 . -14) (undo-tree-id27925 . -14) (undo-tree-id27926 . -14) (undo-tree-id27927 . -15) (undo-tree-id27928 . -15) (undo-tree-id27929 . -15) (undo-tree-id27930 . -15) (undo-tree-id27931 . -15) (undo-tree-id27932 . -16) (undo-tree-id27933 . -16) (undo-tree-id27934 . -16) (undo-tree-id27935 . -16) (undo-tree-id27936 . -16) (undo-tree-id27937 . -17) (undo-tree-id27938 . -17) (undo-tree-id27939 . -17) (undo-tree-id27940 . -17) (undo-tree-id27941 . -17) (undo-tree-id27942 . -17) (undo-tree-id27943 . -18) (undo-tree-id27944 . -18) (undo-tree-id27945 . -18) (undo-tree-id27946 . -18) (undo-tree-id27947 . -18) (undo-tree-id27948 . -19) (undo-tree-id27949 . -19) (undo-tree-id27950 . -19) (undo-tree-id27951 . -19) (undo-tree-id27952 . -19) (undo-tree-id27953 . -20) (undo-tree-id27954 . -20) (undo-tree-id27955 . -20) (undo-tree-id27956 . -20) (undo-tree-id27957 . -20) (undo-tree-id27958 . -21) (undo-tree-id27959 . -21) (undo-tree-id27960 . -21) (undo-tree-id27961 . -21) (undo-tree-id27962 . -21) (undo-tree-id27963 . -22) (undo-tree-id27964 . -22) (undo-tree-id27965 . -22) (undo-tree-id27966 . -22) (undo-tree-id27967 . -22) (undo-tree-id27968 . -22) (undo-tree-id27969 . -22) (undo-tree-id27970 . -22) (undo-tree-id27971 . -22) (undo-tree-id27972 . -22) (undo-tree-id27973 . -23) (undo-tree-id27974 . -23) (undo-tree-id27975 . -23) (undo-tree-id27976 . -23) (undo-tree-id27977 . -23) (undo-tree-id27978 . -24) (undo-tree-id27979 . -24) (undo-tree-id27980 . -24) (undo-tree-id27981 . -24) (undo-tree-id27982 . -24) (undo-tree-id27983 . -25) (undo-tree-id27984 . -25) (undo-tree-id27985 . -25) (undo-tree-id27986 . -25) (undo-tree-id27987 . -25) (undo-tree-id27988 . -26) (undo-tree-id27989 . -26) (undo-tree-id27990 . -26) (undo-tree-id27991 . -26) (undo-tree-id27992 . -26) (undo-tree-id27993 . -26) (undo-tree-id27994 . -26) (undo-tree-id27995 . -26) (undo-tree-id27996 . -26) (undo-tree-id27997 . -26) (undo-tree-id27998 . -26) (undo-tree-id27999 . -26) (undo-tree-id28000 . -8) (undo-tree-id28001 . -27) (undo-tree-id28002 . -27) (undo-tree-id28003 . -27) (undo-tree-id28004 . -27) (undo-tree-id28005 . -27) (undo-tree-id28006 . -27) (undo-tree-id28007 . -27) (undo-tree-id28008 . -27) (undo-tree-id28009 . -27) (undo-tree-id28010 . -27) (undo-tree-id28011 . -27) (undo-tree-id28012 . -27) (undo-tree-id28013 . -27) (undo-tree-id28014 . -27) (undo-tree-id28015 . -27) (undo-tree-id28016 . -27)) nil (26715 43580 854805 921000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2018) (undo-tree-id27882 . -1)) nil (26715 43580 854685 653000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2026) 2018) nil (26715 43580 854683 594000) 0 nil])
([nil nil ((2044 . 2057)) nil (26715 43580 854683 98000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2084 . 2085) (nil fontified nil 2084 . 2085) (nil fontified nil 2079 . 2084) (nil fontified nil 2074 . 2079) (nil fontified nil 2073 . 2074) (nil fontified nil 2071 . 2073) (nil fontified nil 2068 . 2071) (nil fontified nil 2065 . 2068) (nil fontified nil 2057 . 2065) (2057 . 2085)) nil (26715 43580 854682 347000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2057) 2045) nil (26715 43580 854680 834000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2076) (undo-tree-id27874 . -1) (undo-tree-id27875 . -1) (undo-tree-id27876 . -1) (undo-tree-id27877 . -1) (undo-tree-id27878 . -1) (undo-tree-id27879 . -1) (undo-tree-id27880 . -1) (undo-tree-id27881 . -1) 2077) nil (26715 43580 854677 576000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -6173) (undo-tree-id28109 . -1) (undo-tree-id28110 . -1) (undo-tree-id28111 . -1) (undo-tree-id28112 . -1) (undo-tree-id28113 . -1) (undo-tree-id28114 . -1) 6174 (t 26715 43580 880519 93000)) nil (26715 43611 776271 897000) 0 nil])
([nil nil ((6173 . 6174)) nil (26715 43611 776257 557000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -2108) (undo-tree-id28115 . -1) (undo-tree-id28116 . -1) (undo-tree-id28117 . -1) (undo-tree-id28118 . -1) (undo-tree-id28119 . -1) (undo-tree-id28120 . -1) (undo-tree-id28121 . -1) (undo-tree-id28122 . -1) (undo-tree-id28123 . -1) (undo-tree-id28124 . -1) (undo-tree-id28125 . -1) (undo-tree-id28126 . -1) (undo-tree-id28127 . -1) (undo-tree-id28128 . -1) (undo-tree-id28129 . -1) (undo-tree-id28130 . -1) (undo-tree-id28131 . -1) (undo-tree-id28132 . -1) (undo-tree-id28133 . -1) (undo-tree-id28134 . -1) (undo-tree-id28135 . -1) (undo-tree-id28136 . -1) (undo-tree-id28137 . -1) (undo-tree-id28138 . -1) (undo-tree-id28139 . -1) (undo-tree-id28140 . -1) (undo-tree-id28141 . -1) (undo-tree-id28142 . -1) (undo-tree-id28143 . -1) (undo-tree-id28144 . -1) (undo-tree-id28145 . -1) (undo-tree-id28146 . -1) (undo-tree-id28147 . -1) (undo-tree-id28148 . -1) (undo-tree-id28149 . -1) (undo-tree-id28150 . -1) (undo-tree-id28151 . -1) (undo-tree-id28152 . -1) (undo-tree-id28153 . -1) (undo-tree-id28154 . -1) (undo-tree-id28155 . -1) (undo-tree-id28156 . -1) (undo-tree-id28157 . -1) (undo-tree-id28158 . -1) (undo-tree-id28159 . -1) (undo-tree-id28160 . -1) (undo-tree-id28161 . -1) (undo-tree-id28162 . -1) (undo-tree-id28163 . -1) (undo-tree-id28164 . -1) (undo-tree-id28165 . -1) (undo-tree-id28166 . -1) (undo-tree-id28167 . -1) (undo-tree-id28168 . -1) (undo-tree-id28169 . -1) (undo-tree-id28170 . -1) (undo-tree-id28171 . -1) (undo-tree-id28172 . -1) (undo-tree-id28173 . -1) (undo-tree-id28174 . -1) (undo-tree-id28175 . -1) (undo-tree-id28176 . -1) (undo-tree-id28177 . -1) (undo-tree-id28178 . -1) (undo-tree-id28179 . -1) (undo-tree-id28180 . -1) (undo-tree-id28181 . -1) (undo-tree-id28182 . -1) (undo-tree-id28183 . -1) (undo-tree-id28184 . -1) (undo-tree-id28185 . -1) (undo-tree-id28186 . -1) (undo-tree-id28187 . -1) (undo-tree-id28188 . -1) (undo-tree-id28189 . -1) (undo-tree-id28190 . -1) (undo-tree-id28191 . -1) (undo-tree-id28192 . -1) (undo-tree-id28193 . -1) 2109 (t 26715 43611 817607 505000)) nil (26715 43744 790068 79000) 0 nil])
([nil nil ((2110 . 2114)) nil (26715 43744 789986 134000) 0 nil])
([nil nil ((2111 . 2112) (t 26715 43744 815061 270000)) nil (26715 43763 59703 633000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -2111) (undo-tree-id28194 . -1) (undo-tree-id28195 . -1) (undo-tree-id28196 . -1) (undo-tree-id28197 . -1) (undo-tree-id28198 . -1) (undo-tree-id28199 . -1) (undo-tree-id28200 . -1) 2112) nil (26715 43763 59702 436000) 0 nil])
([nil nil ((2111 . 2120)) nil (26715 43763 59687 786000) 0 nil])
([nil nil ((5963 . 5980) (t 26715 43763 85647 757000)) nil (26715 43893 565906 513000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5978) (undo-tree-id28201 . -1) (undo-tree-id28202 . -1) (undo-tree-id28203 . -1) (undo-tree-id28204 . -1) (undo-tree-id28205 . -1) (undo-tree-id28206 . -1) (undo-tree-id28207 . -1) (undo-tree-id28208 . -1) (undo-tree-id28209 . -1) (undo-tree-id28210 . -1) (undo-tree-id28211 . -1) (undo-tree-id28212 . -1) (undo-tree-id28213 . -1) (undo-tree-id28214 . -1) (undo-tree-id28215 . -1) (undo-tree-id28216 . -1) (undo-tree-id28217 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -5979) (undo-tree-id28218 . -1) (undo-tree-id28219 . -1) (undo-tree-id28220 . -1) (undo-tree-id28221 . -1) (undo-tree-id28222 . -1) (undo-tree-id28223 . -1) 5980) nil (26715 43893 565904 282000) 0 nil])
([nil nil ((5978 . 5983)) nil (26715 43893 565874 982000) 0 nil])
([nil nil ((5911 . 5912) (t 26715 43893 595688 876000)) nil (26715 43931 244998 311000) 0 nil])
([nil nil ((5912 . 5928)) nil (26715 43931 244994 447000) 0 nil])
([nil nil ((apply 6 6528 6670 undo--wrap-and-run-primitive-undo 6528 6670 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -6615) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -6565) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -6532) 6676 (t 26715 43931 270812 602000)))) nil (26715 43951 241164 770000) 0 nil])
([nil nil ((#("    print(K)" 0 4 (fontified t) 4 9 (fontified t face font-lock-builtin-face) 9 12 (fontified t)) . 5068) (t 26715 43951 266402 117000)) nil (26715 43968 250403 926000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5068)) nil (26715 43968 250402 950000) 0 nil])
([nil nil ((#("    print(K)" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t) 9 12 (fontified t)) . 5252) (undo-tree-id28225 . -9) (undo-tree-id28226 . -9) (undo-tree-id28227 . -9) (undo-tree-id28228 . -9) (undo-tree-id28229 . -9) (undo-tree-id28230 . -9) (undo-tree-id28231 . -9) (undo-tree-id28232 . -9) (undo-tree-id28233 . -9) (undo-tree-id28234 . -9) (undo-tree-id28235 . -9) (undo-tree-id28236 . -9) (undo-tree-id28237 . -9) (undo-tree-id28238 . -9) (undo-tree-id28239 . -9) (undo-tree-id28240 . -9) (undo-tree-id28241 . -9) (undo-tree-id28242 . -9) (undo-tree-id28243 . -9) (undo-tree-id28244 . -9) (undo-tree-id28245 . -9) (undo-tree-id28246 . -9) (undo-tree-id28247 . -9) (undo-tree-id28248 . -9) (undo-tree-id28249 . -9) (undo-tree-id28250 . -9) (undo-tree-id28251 . -9) (undo-tree-id28252 . -9) (undo-tree-id28253 . -9) (undo-tree-id28254 . -12) (undo-tree-id28255 . -12) (undo-tree-id28256 . -12) (undo-tree-id28257 . -12) (undo-tree-id28258 . -12) (undo-tree-id28259 . -12)) nil (26715 43968 250401 614000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5252) (undo-tree-id28224 . -1)) nil (26715 43968 250375 75000) 0 nil])
([nil nil ((#("        # TODO: make sure this works." 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 37 (face font-lock-comment-face fontified t)) . 4683) (undo-tree-id28261 . -32) (undo-tree-id28262 . -32) (undo-tree-id28263 . -32) (undo-tree-id28264 . -32) (undo-tree-id28265 . -32) (undo-tree-id28266 . -32) (undo-tree-id28267 . -32) (undo-tree-id28268 . -32) (undo-tree-id28269 . -32) (undo-tree-id28270 . -32) (undo-tree-id28271 . -32) (undo-tree-id28272 . -32) (undo-tree-id28273 . -32) (undo-tree-id28274 . -32) (undo-tree-id28275 . -32) (undo-tree-id28276 . -37) (undo-tree-id28277 . -37) (undo-tree-id28278 . -37) (undo-tree-id28279 . -37) (undo-tree-id28280 . -37) (undo-tree-id28281 . -37) (t 26715 43968 274899 987000)) nil (26715 44067 62617 507000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4683) (undo-tree-id28260 . -1)) nil (26715 44067 62600 364000) 0 nil])
([nil nil ((406 . 407) (t 26715 44067 88732 829000)) nil (26715 44077 420608 230000) 0 nil])
([nil nil ((406 . 407)) nil (26715 44077 420607 560000) 0 nil])
([nil nil ((407 . 415)) nil (26715 44077 420606 643000) 0 nil])
([nil nil ((415 . 423)) nil (26715 44077 420602 533000) 0 nil])
([nil nil ((#("

# TESTING keccak-f
# S = numpy.array([random.randint(0, 1) for _ in range(1600)])
# A = gen_state_array(S)

# with numpy.printoptions(threshold=numpy.inf):
#     print(\"  ORIGINAL STRING\\n\\n\")
#     print(S)
#     print(\"  KECCAK-F'D STRING\\n\\n\")
#     print(keccak_f(S))
" 0 1 (fontified t) 1 2 (fontified t) 2 4 (face font-lock-comment-delimiter-face fontified t) 4 21 (face font-lock-comment-face fontified t) 21 23 (face font-lock-comment-delimiter-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face fontified t) 26 38 (face font-lock-comment-face fontified t) 38 41 (face font-lock-comment-face fontified t) 41 46 (face font-lock-comment-face fontified t) 46 54 (face font-lock-comment-face fontified t) 54 58 (face font-lock-comment-face fontified t) 58 61 (face font-lock-comment-face fontified t) 61 64 (face font-lock-comment-face fontified t) 64 67 (face font-lock-comment-face fontified t) 67 69 (face font-lock-comment-face fontified t) 69 70 (face font-lock-comment-face fontified t) 70 75 (face font-lock-comment-face fontified t) 75 76 (face font-lock-comment-face fontified t) 76 77 (face font-lock-comment-face fontified t) 77 84 (face font-lock-comment-face fontified t) 84 86 (face font-lock-comment-delimiter-face fontified t) 86 87 (face font-lock-comment-face fontified t) 87 88 (face font-lock-comment-face fontified t) 88 89 (face font-lock-comment-face fontified t) 89 105 (face font-lock-comment-face fontified t) 105 106 (face font-lock-comment-face fontified t) 106 109 (face font-lock-comment-face fontified t) 109 110 (fontified t) 110 112 (face font-lock-comment-delimiter-face fontified t) 112 116 (face font-lock-comment-face fontified t) 116 117 (face font-lock-comment-face fontified t) 117 118 (face font-lock-comment-face fontified t) 118 127 (face font-lock-comment-face fontified t) 127 145 (face font-lock-comment-face fontified t) 145 146 (face font-lock-comment-face fontified t) 146 152 (face font-lock-comment-face fontified t) 152 154 (face font-lock-comment-face fontified t) 154 158 (face font-lock-comment-face fontified t) 158 160 (face font-lock-comment-delimiter-face fontified t) 160 164 (face font-lock-comment-delimiter-face fontified t) 164 169 (face font-lock-comment-face fontified t) 169 170 (face font-lock-comment-face fontified t) 170 171 (face font-lock-comment-face fontified t) 171 173 (face font-lock-comment-face fontified t) 173 188 (face font-lock-comment-face fontified t) 188 190 (face font-lock-comment-face fontified t) 190 192 (face font-lock-comment-face fontified t) 192 193 (face font-lock-comment-face fontified t) 193 194 (face font-lock-comment-face fontified t) 194 195 (face font-lock-comment-face fontified t) 195 197 (face font-lock-comment-delimiter-face fontified t) 197 201 (face font-lock-comment-delimiter-face fontified t) 201 206 (face font-lock-comment-face fontified t) 206 209 (face font-lock-comment-face fontified t) 209 210 (face font-lock-comment-face fontified t) 210 212 (face font-lock-comment-delimiter-face fontified t) 212 216 (face font-lock-comment-delimiter-face fontified t) 216 221 (face font-lock-comment-face fontified t) 221 222 (face font-lock-comment-face fontified t) 222 223 (face font-lock-comment-face fontified t) 223 225 (face font-lock-comment-face fontified t) 225 231 (face font-lock-comment-face fontified t) 231 232 (face font-lock-comment-face fontified t) 232 233 (face font-lock-comment-face fontified t) 233 242 (face font-lock-comment-face fontified t) 242 244 (face font-lock-comment-face fontified t) 244 246 (face font-lock-comment-face fontified t) 246 247 (face font-lock-comment-face fontified t) 247 248 (face font-lock-comment-face fontified t) 248 249 (face font-lock-comment-face fontified t) 249 251 (face font-lock-comment-delimiter-face fontified t) 251 255 (face font-lock-comment-delimiter-face fontified t) 255 257 (face font-lock-comment-face fontified t) 257 260 (face font-lock-comment-face fontified t) 260 273 (face font-lock-comment-face fontified t) 273 274 (face font-lock-comment-face fontified t)) . 5591) (undo-tree-id28324 . -274) (undo-tree-id28325 . -2) (undo-tree-id28326 . -274) (undo-tree-id28327 . -274) (undo-tree-id28328 . -274) (undo-tree-id28329 . -274) (undo-tree-id28330 . -274) (undo-tree-id28331 . -274) (undo-tree-id28332 . -274) (undo-tree-id28333 . -274) (undo-tree-id28334 . -274) (undo-tree-id28335 . -274) (undo-tree-id28336 . -274) (undo-tree-id28337 . -274) (undo-tree-id28338 . -274) (undo-tree-id28339 . -274) (undo-tree-id28340 . -274) (undo-tree-id28341 . -274) (undo-tree-id28342 . -274) (undo-tree-id28343 . -274) (undo-tree-id28344 . -274) (undo-tree-id28345 . -274) (undo-tree-id28346 . -274) (undo-tree-id28347 . -274) (undo-tree-id28348 . -274) (undo-tree-id28349 . -274) (undo-tree-id28350 . -274) (undo-tree-id28351 . -274) (undo-tree-id28352 . -274) (undo-tree-id28353 . -274) (undo-tree-id28354 . -274) (undo-tree-id28355 . -274) (undo-tree-id28356 . -274) (undo-tree-id28357 . -274) (undo-tree-id28358 . -274) (undo-tree-id28359 . -274) (undo-tree-id28360 . -274) (undo-tree-id28361 . -274) (undo-tree-id28362 . -274) (undo-tree-id28363 . -274) (undo-tree-id28364 . -274) (undo-tree-id28365 . -274) (undo-tree-id28366 . -274) (undo-tree-id28367 . -274) (undo-tree-id28368 . -274) (undo-tree-id28369 . -274) (undo-tree-id28370 . -274) (undo-tree-id28371 . -274) (undo-tree-id28372 . -274) (undo-tree-id28373 . -274) (undo-tree-id28374 . -274) (undo-tree-id28375 . -274) (undo-tree-id28376 . -274) (undo-tree-id28377 . -274) (undo-tree-id28378 . -274) (undo-tree-id28379 . -274) (undo-tree-id28380 . -274) (undo-tree-id28381 . -274) (undo-tree-id28382 . -274) (undo-tree-id28383 . -274) (undo-tree-id28384 . -274) (undo-tree-id28385 . -274) (undo-tree-id28386 . -274) (undo-tree-id28387 . -274) (undo-tree-id28388 . -274) (undo-tree-id28389 . -274) (undo-tree-id28390 . -274) (undo-tree-id28391 . -274) (undo-tree-id28392 . -274) (undo-tree-id28393 . -274) (undo-tree-id28394 . -274) (undo-tree-id28395 . -274) (undo-tree-id28396 . -274) (undo-tree-id28397 . -274) (undo-tree-id28398 . -274) (undo-tree-id28399 . -274) (undo-tree-id28400 . -274) (undo-tree-id28401 . -274) (undo-tree-id28402 . -274) (undo-tree-id28403 . -274) (undo-tree-id28404 . -274) (undo-tree-id28405 . -274) (undo-tree-id28406 . -274) (undo-tree-id28407 . -274) (undo-tree-id28408 . -274) (undo-tree-id28409 . -274) (undo-tree-id28410 . -274) (undo-tree-id28411 . -274) (undo-tree-id28412 . -274) (undo-tree-id28413 . -274) (undo-tree-id28414 . -274) (undo-tree-id28415 . -274) (undo-tree-id28416 . -248) (undo-tree-id28417 . -248) (undo-tree-id28418 . -248) (undo-tree-id28419 . -248) (undo-tree-id28420 . -248) (undo-tree-id28421 . -248) (undo-tree-id28422 . -248) (undo-tree-id28423 . -248) (undo-tree-id28424 . -248) (undo-tree-id28425 . -248) (undo-tree-id28426 . -248) (undo-tree-id28427 . -248) (undo-tree-id28428 . -248) (undo-tree-id28429 . -248) (undo-tree-id28430 . -248) (undo-tree-id28431 . -248) (undo-tree-id28432 . -248) (undo-tree-id28433 . -248) (undo-tree-id28434 . -248) (undo-tree-id28435 . -248) (undo-tree-id28436 . -248) (undo-tree-id28437 . -274) (undo-tree-id28438 . -274) (undo-tree-id28439 . -274) (undo-tree-id28440 . -274) (undo-tree-id28441 . -274) (undo-tree-id28442 . -274) (undo-tree-id28443 . -274) (undo-tree-id28444 . -274) (undo-tree-id28445 . -274) (undo-tree-id28446 . -274) (undo-tree-id28447 . -274) (undo-tree-id28448 . -274) (undo-tree-id28449 . -274) (undo-tree-id28450 . -274) (undo-tree-id28451 . -274) (undo-tree-id28452 . -274) (undo-tree-id28453 . -274) (undo-tree-id28454 . -274) (undo-tree-id28455 . -274) (undo-tree-id28456 . -274) (undo-tree-id28457 . -274) (undo-tree-id28458 . -274) (undo-tree-id28459 . -274) (undo-tree-id28460 . -274) (undo-tree-id28461 . -274) (undo-tree-id28462 . -274) (undo-tree-id28463 . -274) (undo-tree-id28464 . -274) (undo-tree-id28465 . -274) (undo-tree-id28466 . -274) (undo-tree-id28467 . -274) (undo-tree-id28468 . -274) (undo-tree-id28469 . -274) (undo-tree-id28470 . -274) (undo-tree-id28471 . -274) (undo-tree-id28472 . -274) (undo-tree-id28473 . -274) (undo-tree-id28474 . -274) (undo-tree-id28475 . -274) (undo-tree-id28476 . -274) (undo-tree-id28477 . -274) (undo-tree-id28478 . -274) (undo-tree-id28479 . -273) (undo-tree-id28480 . -273) (undo-tree-id28481 . -273) (undo-tree-id28482 . -273) (undo-tree-id28483 . -273) (undo-tree-id28484 . -241) (undo-tree-id28485 . -241) (undo-tree-id28486 . -241) (undo-tree-id28487 . -241) (undo-tree-id28488 . -241) (undo-tree-id28489 . -240) (undo-tree-id28490 . -240) (undo-tree-id28491 . -240) (undo-tree-id28492 . -240) (undo-tree-id28493 . -240) (undo-tree-id28494 . -209) (undo-tree-id28495 . -209) (undo-tree-id28496 . -209) (undo-tree-id28497 . -209) (undo-tree-id28498 . -209) (undo-tree-id28499 . -187) (undo-tree-id28500 . -187) (undo-tree-id28501 . -187) (undo-tree-id28502 . -187) (undo-tree-id28503 . -187) (undo-tree-id28504 . -186) (undo-tree-id28505 . -186) (undo-tree-id28506 . -186) (undo-tree-id28507 . -186) (undo-tree-id28508 . -186) (undo-tree-id28509 . -138) (undo-tree-id28510 . -138) (undo-tree-id28511 . -138) (undo-tree-id28512 . -138) (undo-tree-id28513 . -138) (undo-tree-id28514 . -137) (undo-tree-id28515 . -137) (undo-tree-id28516 . -137) (undo-tree-id28517 . -137) (undo-tree-id28518 . -137) (undo-tree-id28519 . -109) (undo-tree-id28520 . -109) (undo-tree-id28521 . -109) (undo-tree-id28522 . -109) (undo-tree-id28523 . -109) (undo-tree-id28524 . -108) (undo-tree-id28525 . -108) (undo-tree-id28526 . -108) (undo-tree-id28527 . -108) (undo-tree-id28528 . -108) (undo-tree-id28529 . -47) (undo-tree-id28530 . -47) (undo-tree-id28531 . -47) (undo-tree-id28532 . -47) (undo-tree-id28533 . -47) (undo-tree-id28534 . -46) (undo-tree-id28535 . -46) (undo-tree-id28536 . -46) (undo-tree-id28537 . -46) (undo-tree-id28538 . -46) (undo-tree-id28539 . -20) (undo-tree-id28540 . -20) (undo-tree-id28541 . -20) (undo-tree-id28542 . -20) (undo-tree-id28543 . -20) (undo-tree-id28544 . -1) (undo-tree-id28545 . -1) (undo-tree-id28546 . -1) (undo-tree-id28547 . -1) (undo-tree-id28548 . -1) (undo-tree-id28549 . -274) (t 26715 44077 447024 357000)) nil (26715 44124 983000 598000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6132) (undo-tree-id28306 . -4) (undo-tree-id28307 . -4) (undo-tree-id28308 . -4) (undo-tree-id28309 . -4) (undo-tree-id28310 . -4) (undo-tree-id28311 . -4) (undo-tree-id28312 . -4) (undo-tree-id28313 . -4) (undo-tree-id28314 . -4) (undo-tree-id28315 . -4) (undo-tree-id28316 . -4) (undo-tree-id28317 . -4) (undo-tree-id28318 . -4) (undo-tree-id28319 . -4) (undo-tree-id28320 . -4) (undo-tree-id28321 . -4) (undo-tree-id28322 . -4) (undo-tree-id28323 . -4) 6136) nil (26715 44124 982877 827000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6131) (undo-tree-id28282 . -1) (undo-tree-id28283 . -1) (undo-tree-id28284 . -1) (undo-tree-id28285 . -1) (undo-tree-id28286 . -1) (undo-tree-id28287 . -1) (undo-tree-id28288 . -1) (undo-tree-id28289 . -1) (undo-tree-id28290 . -1) (undo-tree-id28291 . -1) (undo-tree-id28292 . -1) (undo-tree-id28293 . -1) (undo-tree-id28294 . -1) (undo-tree-id28295 . -1) (undo-tree-id28296 . -1) (undo-tree-id28297 . -1) (undo-tree-id28298 . -1) (undo-tree-id28299 . -1) (undo-tree-id28300 . -1) (undo-tree-id28301 . -1) (undo-tree-id28302 . -1) (undo-tree-id28303 . -1) (undo-tree-id28304 . -1) (undo-tree-id28305 . -1) 6132) nil (26715 44124 982848 483000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6131) (undo-tree-id28550 . -1) (undo-tree-id28551 . -1) (undo-tree-id28552 . -1) (undo-tree-id28553 . -1) (undo-tree-id28554 . -1) (undo-tree-id28555 . -1) (undo-tree-id28556 . -1) (undo-tree-id28557 . -1) (undo-tree-id28558 . -1) (undo-tree-id28559 . -1) (undo-tree-id28560 . -1) (undo-tree-id28561 . -1) (undo-tree-id28562 . -1) (undo-tree-id28563 . -1) 6132 (t 26715 44125 7351 9000)) nil (26715 44127 46886 657000) 0 nil])
([nil nil ((5602 . 5613) (t 26715 44127 72408 185000)) nil (26715 44132 345562 853000) 0 nil])
([nil nil ((6504 . 6509) (t 26715 44132 370554 720000)) nil (26715 44181 153034 301000) 0 nil])
([nil nil ((6356 . 6360) (#("    " 0 4 (fontified nil)) . 6355) (undo-tree-id28707 . -4) (6359 . 6360)) nil (26715 44181 153033 774000) 0 nil])
([nil nil ((6214 . 6218) (#("    " 0 4 (fontified nil)) . 6213) (undo-tree-id28706 . -4) (6217 . 6218)) nil (26715 44181 153032 652000) 0 nil])
([nil nil ((6213 . 6217)) nil (26715 44181 153031 760000) 0 nil])
([nil nil ((6214 . 6218) (#("    " 0 4 (fontified nil)) . 6213) (undo-tree-id28705 . -4) (6217 . 6218)) nil (26715 44181 153031 414000) 0 nil])
([nil nil ((6213 . 6217)) nil (26715 44181 153030 503000) 0 nil])
([nil nil ((6217 . 6220)) nil (26715 44181 153030 173000) 0 nil])
([nil nil ((#("inp" 0 3 (fontified t)) . -6217) (undo-tree-id28704 . -3) 6220) nil (26715 44181 153029 803000) 0 nil])
([nil nil ((6217 . 6232)) nil (26715 44181 153028 960000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -6230) (undo-tree-id28702 . -1) (#(" " 0 1 (fontified t)) . -6231) (undo-tree-id28703 . -1) 6232) nil (26715 44181 153028 528000) 0 nil])
([nil nil ((6230 . 6232)) nil (26715 44181 153026 889000) 0 nil])
([nil nil ((6232 . 6234)) nil (26715 44181 153026 641000) 0 nil])
([nil nil ((6234 . 6239)) nil (26715 44181 153026 280000) 0 nil])
([nil nil ((6239 . 6244)) nil (26715 44181 153025 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6344 . 6345) (nil fontified nil 6344 . 6345) (nil fontified nil 6343 . 6344) (nil fontified nil 6339 . 6343) (nil fontified nil 6325 . 6339) (nil fontified nil 6322 . 6325) (nil fontified nil 6321 . 6322) (nil fontified nil 6320 . 6321) (nil fontified nil 6318 . 6320) (nil fontified nil 6317 . 6318) (nil fontified nil 6316 . 6317) (nil fontified nil 6315 . 6316) (nil fontified nil 6313 . 6315) (nil fontified nil 6307 . 6313) (nil fontified nil 6303 . 6307) (nil fontified nil 6302 . 6303) (nil fontified nil 6298 . 6302) (nil fontified nil 6296 . 6298) (nil fontified nil 6295 . 6296) (nil fontified nil 6294 . 6295) (nil fontified nil 6290 . 6294) (nil fontified nil 6289 . 6290) (nil fontified nil 6285 . 6289) (nil fontified nil 6284 . 6285) (nil fontified nil 6273 . 6284) (nil fontified nil 6269 . 6273) (nil fontified nil 6268 . 6269) (nil fontified nil 6266 . 6268) (nil fontified nil 6264 . 6266) (nil fontified nil 6261 . 6264) (nil fontified nil 6248 . 6261) (nil fontified nil 6246 . 6248) (nil fontified nil 6245 . 6246) (nil fontified nil 6244 . 6245) (nil fontified nil 6241 . 6244) (nil fontified nil 6240 . 6241) (nil fontified nil 6239 . 6240) (nil fontified nil 6235 . 6239) (6235 . 6345)) nil (26715 44181 153024 805000) 0 nil])
([nil nil ((#("    print" 0 4 (fontified t) 4 9 (face font-lock-builtin-face fontified t)) . 6345) (undo-tree-id28654 . -4) (undo-tree-id28655 . -4) (undo-tree-id28656 . -4) (undo-tree-id28657 . -4) (undo-tree-id28658 . -4) (undo-tree-id28659 . -4) (undo-tree-id28660 . -4) (undo-tree-id28661 . -4) (undo-tree-id28662 . -4) (undo-tree-id28663 . -4) (undo-tree-id28664 . -4) (undo-tree-id28665 . -4) (undo-tree-id28666 . -5) (undo-tree-id28667 . -5) (undo-tree-id28668 . -5) (undo-tree-id28669 . -5) (undo-tree-id28670 . -5) (undo-tree-id28671 . -6) (undo-tree-id28672 . -6) (undo-tree-id28673 . -6) (undo-tree-id28674 . -6) (undo-tree-id28675 . -6) (undo-tree-id28676 . -7) (undo-tree-id28677 . -7) (undo-tree-id28678 . -7) (undo-tree-id28679 . -7) (undo-tree-id28680 . -7) (undo-tree-id28681 . -8) (undo-tree-id28682 . -8) (undo-tree-id28683 . -8) (undo-tree-id28684 . -8) (undo-tree-id28685 . -8) (undo-tree-id28686 . -9) (undo-tree-id28687 . -9) (undo-tree-id28688 . -9) (undo-tree-id28689 . -9) (undo-tree-id28690 . -9) (undo-tree-id28691 . -9) (undo-tree-id28692 . -9) (undo-tree-id28693 . -9) (undo-tree-id28694 . -9) (undo-tree-id28695 . -9) (undo-tree-id28696 . -9) (undo-tree-id28697 . -9) (undo-tree-id28698 . -9) (undo-tree-id28699 . -9) (undo-tree-id28700 . -9) (undo-tree-id28701 . -9)) nil (26715 44181 153021 770000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6345) (undo-tree-id28643 . -1) (undo-tree-id28644 . -1) (undo-tree-id28645 . -1) (undo-tree-id28646 . -1) (undo-tree-id28647 . -1) (undo-tree-id28648 . -1) (undo-tree-id28649 . -1) (undo-tree-id28650 . -1) (undo-tree-id28651 . -1) (undo-tree-id28652 . -1) (undo-tree-id28653 . -1)) nil (26715 44181 152993 427000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 6345) (undo-tree-id28631 . -4) (undo-tree-id28632 . -4) (undo-tree-id28633 . -4) (undo-tree-id28634 . -4) (undo-tree-id28635 . -4) (undo-tree-id28636 . -4) (undo-tree-id28637 . -4) (undo-tree-id28638 . -4) (undo-tree-id28639 . -4) (undo-tree-id28640 . -4) (undo-tree-id28641 . -4) (undo-tree-id28642 . -4)) nil (26715 44181 152987 887000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6345) (undo-tree-id28620 . -1) (undo-tree-id28621 . -1) (undo-tree-id28622 . -1) (undo-tree-id28623 . -1) (undo-tree-id28624 . -1) (undo-tree-id28625 . -1) (undo-tree-id28626 . -1) (undo-tree-id28627 . -1) (undo-tree-id28628 . -1) (undo-tree-id28629 . -1) (undo-tree-id28630 . -1)) nil (26715 44181 152980 458000) 0 nil])
([nil nil ((6268 . 6271)) nil (26715 44181 152974 256000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -6269) (undo-tree-id28598 . -1) (undo-tree-id28599 . -1) (undo-tree-id28600 . -1) (undo-tree-id28601 . -1) (undo-tree-id28602 . -1) (undo-tree-id28603 . -1) (undo-tree-id28604 . -1) (undo-tree-id28605 . -1) (undo-tree-id28606 . -1) (undo-tree-id28607 . -1) (undo-tree-id28608 . -1) (undo-tree-id28609 . -1) (undo-tree-id28610 . -1) (undo-tree-id28611 . -1) (undo-tree-id28612 . -1) (undo-tree-id28613 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -6270) (undo-tree-id28614 . -1) (undo-tree-id28615 . -1) (undo-tree-id28616 . -1) (undo-tree-id28617 . -1) (undo-tree-id28618 . -1) (undo-tree-id28619 . -1) 6271) nil (26715 44181 152972 774000) 0 nil])
([nil nil ((6269 . 6282)) nil (26715 44181 152960 814000) 0 nil])
([nil nil ((#("STRING" 0 6 (fontified t)) . -6291) (undo-tree-id28597 . -6) 6297) nil (26715 44181 152960 389000) 0 nil])
([nil nil ((#("INPUT_" 0 2 (fontified t) 2 6 (fontified t)) . -6285) (undo-tree-id28591 . -6) (undo-tree-id28592 . -6) (undo-tree-id28593 . -6) (undo-tree-id28594 . -6) (undo-tree-id28595 . -6) (undo-tree-id28596 . -6) 6291) nil (26715 44181 152959 66000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6283) (undo-tree-id28564 . -1) (undo-tree-id28565 . -1) (undo-tree-id28566 . -1) (undo-tree-id28567 . -1) (undo-tree-id28568 . -1) (undo-tree-id28569 . -1) (undo-tree-id28570 . -1) (undo-tree-id28571 . -1) (undo-tree-id28572 . -1) (undo-tree-id28573 . -1) (undo-tree-id28574 . -1) (undo-tree-id28575 . -1) (undo-tree-id28576 . -1) (undo-tree-id28577 . -1) (undo-tree-id28578 . -1) (undo-tree-id28579 . -1) (#(" " 0 1 (fontified t)) . -6284) (undo-tree-id28580 . -1) (undo-tree-id28581 . -1) (undo-tree-id28582 . -1) (undo-tree-id28583 . -1) (undo-tree-id28584 . -1) (undo-tree-id28585 . -1) (undo-tree-id28586 . -1) (undo-tree-id28587 . -1) (undo-tree-id28588 . -1) (undo-tree-id28589 . -1) (undo-tree-id28590 . -1) 6285) nil (26715 44181 152951 24000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-constant-face fontified t)) . -6265) (undo-tree-id28768 . -1) (undo-tree-id28769 . -1) (undo-tree-id28770 . -1) (undo-tree-id28771 . -1) (undo-tree-id28772 . -1) (undo-tree-id28773 . -1) (undo-tree-id28774 . -1) (undo-tree-id28775 . -1) (undo-tree-id28776 . -1) (undo-tree-id28777 . -1) (undo-tree-id28778 . -1) (undo-tree-id28779 . -1) (undo-tree-id28780 . -1) (undo-tree-id28781 . -1) (undo-tree-id28782 . -1) (undo-tree-id28783 . -1) (undo-tree-id28784 . -1) (undo-tree-id28785 . -1) (undo-tree-id28786 . -1) (undo-tree-id28787 . -1) (undo-tree-id28788 . -1) (undo-tree-id28789 . -1) (undo-tree-id28790 . -1) (undo-tree-id28791 . -1) (undo-tree-id28792 . -1) (undo-tree-id28793 . -1) (undo-tree-id28794 . -1) (undo-tree-id28795 . -1) (undo-tree-id28796 . -1) (undo-tree-id28797 . -1) (undo-tree-id28798 . -1) (undo-tree-id28799 . -1) (undo-tree-id28800 . -1) (undo-tree-id28801 . -1) (undo-tree-id28802 . -1) (undo-tree-id28803 . -1) (undo-tree-id28804 . -1) (undo-tree-id28805 . -1) (undo-tree-id28806 . -1) (undo-tree-id28807 . -1) (#("\\" 0 1 (face font-lock-constant-face fontified t)) . -6266) (undo-tree-id28808 . -1) (undo-tree-id28809 . -1) (undo-tree-id28810 . -1) (undo-tree-id28811 . -1) (undo-tree-id28812 . -1) (undo-tree-id28813 . -1) (undo-tree-id28814 . -1) (undo-tree-id28815 . -1) (undo-tree-id28816 . -1) (undo-tree-id28817 . -1) (undo-tree-id28818 . -1) (undo-tree-id28819 . -1) (undo-tree-id28820 . -1) (undo-tree-id28821 . -1) (undo-tree-id28822 . -1) (undo-tree-id28823 . -1) (undo-tree-id28824 . -1) (undo-tree-id28825 . -1) (undo-tree-id28826 . -1) (undo-tree-id28827 . -1) (undo-tree-id28828 . -1) (undo-tree-id28829 . -1) (undo-tree-id28830 . -1) (undo-tree-id28831 . -1) (undo-tree-id28832 . -1) (undo-tree-id28833 . -1) (undo-tree-id28834 . -1) (undo-tree-id28835 . -1) (undo-tree-id28836 . -1) (undo-tree-id28837 . -1) (undo-tree-id28838 . -1) (undo-tree-id28839 . -1) (undo-tree-id28840 . -1) (undo-tree-id28841 . -1) 6267 (t 26715 44181 176894 389000)) nil (26715 44330 811900 940000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-constant-face fontified t)) . -6311) (undo-tree-id28749 . -1) (undo-tree-id28750 . -1) (undo-tree-id28751 . -1) (undo-tree-id28752 . -1) (undo-tree-id28753 . -1) (undo-tree-id28754 . -1) (undo-tree-id28755 . -1) (undo-tree-id28756 . -1) (undo-tree-id28757 . -1) (undo-tree-id28758 . -1) (undo-tree-id28759 . -1) (undo-tree-id28760 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -6312) (undo-tree-id28761 . -1) (undo-tree-id28762 . -1) (undo-tree-id28763 . -1) (undo-tree-id28764 . -1) (undo-tree-id28765 . -1) (undo-tree-id28766 . -1) (undo-tree-id28767 . -1) 6313) nil (26715 44330 811836 645000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . 6403) (#("\\" 0 1 (face font-lock-constant-face fontified t)) . 6403)) nil (26715 44330 811813 51000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-constant-face fontified t)) . -6450) (undo-tree-id28737 . -1) (undo-tree-id28738 . -1) (undo-tree-id28739 . -1) (undo-tree-id28740 . -1) (undo-tree-id28741 . -1) (undo-tree-id28742 . -1) (undo-tree-id28743 . -1) (undo-tree-id28744 . -1) (undo-tree-id28745 . -1) (undo-tree-id28746 . -1) (undo-tree-id28747 . -1) (undo-tree-id28748 . -1) 6451) nil (26715 44330 811811 96000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . 6450)) nil (26715 44330 811793 906000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-constant-face fontified t)) . -6534) (undo-tree-id28720 . -1) (undo-tree-id28721 . -1) (undo-tree-id28722 . -1) (undo-tree-id28723 . -1) (undo-tree-id28724 . -1) (undo-tree-id28725 . -1) (undo-tree-id28726 . -1) (undo-tree-id28727 . -1) (undo-tree-id28728 . -1) (undo-tree-id28729 . -1) (undo-tree-id28730 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -6535) (undo-tree-id28731 . -1) (undo-tree-id28732 . -1) (undo-tree-id28733 . -1) (undo-tree-id28734 . -1) (undo-tree-id28735 . -1) (undo-tree-id28736 . -1) 6536) nil (26715 44330 811791 719000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-constant-face fontified t)) . 6590)) nil (26715 44330 811773 320000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-constant-face fontified t)) . -6589) (undo-tree-id28708 . -1) (undo-tree-id28709 . -1) (undo-tree-id28710 . -1) (undo-tree-id28711 . -1) (undo-tree-id28712 . -1) (undo-tree-id28713 . -1) (undo-tree-id28714 . -1) (undo-tree-id28715 . -1) (undo-tree-id28716 . -1) (undo-tree-id28717 . -1) (undo-tree-id28718 . -1) (undo-tree-id28719 . -1) 6590) nil (26715 44330 811769 740000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6551) (undo-tree-id29070 . -1) (undo-tree-id29071 . -1) (undo-tree-id29072 . -1) (undo-tree-id29073 . -1) (undo-tree-id29074 . -1) (undo-tree-id29075 . -1) (undo-tree-id29076 . -1) (undo-tree-id29077 . -1) (undo-tree-id29078 . -1) (undo-tree-id29079 . -1) (undo-tree-id29080 . -1) (undo-tree-id29081 . -1) (undo-tree-id29082 . -1) (undo-tree-id29083 . -1) (undo-tree-id29084 . -1) (undo-tree-id29085 . -1) (undo-tree-id29086 . -1) (undo-tree-id29087 . -1) (undo-tree-id29088 . -1) (undo-tree-id29089 . -1) (undo-tree-id29090 . -1) (undo-tree-id29091 . -1) (undo-tree-id29092 . -1) (undo-tree-id29093 . -1) (undo-tree-id29094 . -1) (undo-tree-id29095 . -1) (undo-tree-id29096 . -1) (undo-tree-id29097 . -1) (undo-tree-id29098 . -1) (undo-tree-id29099 . -1) (undo-tree-id29100 . -1) (undo-tree-id29101 . -1) (undo-tree-id29102 . -1) (undo-tree-id29103 . -1) (undo-tree-id29104 . -1) (undo-tree-id29105 . -1) (undo-tree-id29106 . -1) (undo-tree-id29107 . -1) (undo-tree-id29108 . -1) (undo-tree-id29109 . -1) (undo-tree-id29110 . -1) (undo-tree-id29111 . -1) (#(" " 0 1 (fontified t)) . -6552) (undo-tree-id29112 . -1) (undo-tree-id29113 . -1) (undo-tree-id29114 . -1) (undo-tree-id29115 . -1) (undo-tree-id29116 . -1) (undo-tree-id29117 . -1) (undo-tree-id29118 . -1) (undo-tree-id29119 . -1) (undo-tree-id29120 . -1) (undo-tree-id29121 . -1) (undo-tree-id29122 . -1) (undo-tree-id29123 . -1) (undo-tree-id29124 . -1) (undo-tree-id29125 . -1) (undo-tree-id29126 . -1) (undo-tree-id29127 . -1) (undo-tree-id29128 . -1) (undo-tree-id29129 . -1) (undo-tree-id29130 . -1) (undo-tree-id29131 . -1) (undo-tree-id29132 . -1) (undo-tree-id29133 . -1) (undo-tree-id29134 . -1) (undo-tree-id29135 . -1) (undo-tree-id29136 . -1) (undo-tree-id29137 . -1) (undo-tree-id29138 . -1) (undo-tree-id29139 . -1) (undo-tree-id29140 . -1) (undo-tree-id29141 . -1) (undo-tree-id29142 . -1) (undo-tree-id29143 . -1) (undo-tree-id29144 . -1) (undo-tree-id29145 . -1) (undo-tree-id29146 . -1) (undo-tree-id29147 . -1) (undo-tree-id29148 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -6553) (undo-tree-id29149 . -1) (undo-tree-id29150 . -1) (undo-tree-id29151 . -1) (undo-tree-id29152 . -1) (undo-tree-id29153 . -1) (undo-tree-id29154 . -1) (undo-tree-id29155 . -1) (undo-tree-id29156 . -1) (undo-tree-id29157 . -1) (undo-tree-id29158 . -1) (undo-tree-id29159 . -1) (undo-tree-id29160 . -1) (undo-tree-id29161 . -1) (undo-tree-id29162 . -1) (undo-tree-id29163 . -1) (undo-tree-id29164 . -1) (undo-tree-id29165 . -1) (undo-tree-id29166 . -1) (undo-tree-id29167 . -1) (undo-tree-id29168 . -1) (undo-tree-id29169 . -1) (undo-tree-id29170 . -1) (undo-tree-id29171 . -1) (undo-tree-id29172 . -1) (undo-tree-id29173 . -1) (undo-tree-id29174 . -1) (undo-tree-id29175 . -1) (undo-tree-id29176 . -1) (undo-tree-id29177 . -1) (undo-tree-id29178 . -1) (undo-tree-id29179 . -1) (undo-tree-id29180 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -6554) (undo-tree-id29181 . -1) (undo-tree-id29182 . -1) (undo-tree-id29183 . -1) (undo-tree-id29184 . -1) (undo-tree-id29185 . -1) (undo-tree-id29186 . -1) (undo-tree-id29187 . -1) (undo-tree-id29188 . -1) (undo-tree-id29189 . -1) (undo-tree-id29190 . -1) (undo-tree-id29191 . -1) (undo-tree-id29192 . -1) (undo-tree-id29193 . -1) (undo-tree-id29194 . -1) (undo-tree-id29195 . -1) (undo-tree-id29196 . -1) (undo-tree-id29197 . -1) (undo-tree-id29198 . -1) (undo-tree-id29199 . -1) (undo-tree-id29200 . -1) (undo-tree-id29201 . -1) (undo-tree-id29202 . -1) (undo-tree-id29203 . -1) (undo-tree-id29204 . -1) (undo-tree-id29205 . -1) (undo-tree-id29206 . -1) (undo-tree-id29207 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -6555) (undo-tree-id29208 . -1) (undo-tree-id29209 . -1) (undo-tree-id29210 . -1) (undo-tree-id29211 . -1) (undo-tree-id29212 . -1) (undo-tree-id29213 . -1) (undo-tree-id29214 . -1) (undo-tree-id29215 . -1) (undo-tree-id29216 . -1) (undo-tree-id29217 . -1) (undo-tree-id29218 . -1) (undo-tree-id29219 . -1) (undo-tree-id29220 . -1) (undo-tree-id29221 . -1) (undo-tree-id29222 . -1) (undo-tree-id29223 . -1) (undo-tree-id29224 . -1) (undo-tree-id29225 . -1) (undo-tree-id29226 . -1) (undo-tree-id29227 . -1) (undo-tree-id29228 . -1) (undo-tree-id29229 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -6556) (undo-tree-id29230 . -1) (undo-tree-id29231 . -1) (undo-tree-id29232 . -1) (undo-tree-id29233 . -1) (undo-tree-id29234 . -1) (undo-tree-id29235 . -1) (undo-tree-id29236 . -1) (undo-tree-id29237 . -1) (undo-tree-id29238 . -1) (undo-tree-id29239 . -1) (undo-tree-id29240 . -1) (undo-tree-id29241 . -1) (undo-tree-id29242 . -1) (undo-tree-id29243 . -1) (undo-tree-id29244 . -1) (undo-tree-id29245 . -1) (undo-tree-id29246 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -6557) (undo-tree-id29247 . -1) (undo-tree-id29248 . -1) (undo-tree-id29249 . -1) (undo-tree-id29250 . -1) (undo-tree-id29251 . -1) (undo-tree-id29252 . -1) (undo-tree-id29253 . -1) (undo-tree-id29254 . -1) (undo-tree-id29255 . -1) (undo-tree-id29256 . -1) (undo-tree-id29257 . -1) (undo-tree-id29258 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -6558) (undo-tree-id29259 . -1) (undo-tree-id29260 . -1) (undo-tree-id29261 . -1) (undo-tree-id29262 . -1) (undo-tree-id29263 . -1) (undo-tree-id29264 . -1) 6559 (t 26715 44330 835901 310000)) nil (26715 44348 55811 343000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6608) (undo-tree-id28842 . -1) (undo-tree-id28843 . -1) (undo-tree-id28844 . -1) (undo-tree-id28845 . -1) (undo-tree-id28846 . -1) (undo-tree-id28847 . -1) (undo-tree-id28848 . -1) (undo-tree-id28849 . -1) (undo-tree-id28850 . -1) (undo-tree-id28851 . -1) (undo-tree-id28852 . -1) (undo-tree-id28853 . -1) (undo-tree-id28854 . -1) (undo-tree-id28855 . -1) (undo-tree-id28856 . -1) (undo-tree-id28857 . -1) (undo-tree-id28858 . -1) (undo-tree-id28859 . -1) (undo-tree-id28860 . -1) (undo-tree-id28861 . -1) (undo-tree-id28862 . -1) (undo-tree-id28863 . -1) (undo-tree-id28864 . -1) (undo-tree-id28865 . -1) (undo-tree-id28866 . -1) (undo-tree-id28867 . -1) (undo-tree-id28868 . -1) (undo-tree-id28869 . -1) (undo-tree-id28870 . -1) (undo-tree-id28871 . -1) (undo-tree-id28872 . -1) (undo-tree-id28873 . -1) (undo-tree-id28874 . -1) (undo-tree-id28875 . -1) (undo-tree-id28876 . -1) (undo-tree-id28877 . -1) (undo-tree-id28878 . -1) (undo-tree-id28879 . -1) (undo-tree-id28880 . -1) (undo-tree-id28881 . -1) (undo-tree-id28882 . -1) (undo-tree-id28883 . -1) (undo-tree-id28884 . -1) (undo-tree-id28885 . -1) (undo-tree-id28886 . -1) (undo-tree-id28887 . -1) (#(" " 0 1 (fontified t)) . -6609) (undo-tree-id28888 . -1) (undo-tree-id28889 . -1) (undo-tree-id28890 . -1) (undo-tree-id28891 . -1) (undo-tree-id28892 . -1) (undo-tree-id28893 . -1) (undo-tree-id28894 . -1) (undo-tree-id28895 . -1) (undo-tree-id28896 . -1) (undo-tree-id28897 . -1) (undo-tree-id28898 . -1) (undo-tree-id28899 . -1) (undo-tree-id28900 . -1) (undo-tree-id28901 . -1) (undo-tree-id28902 . -1) (undo-tree-id28903 . -1) (undo-tree-id28904 . -1) (undo-tree-id28905 . -1) (undo-tree-id28906 . -1) (undo-tree-id28907 . -1) (undo-tree-id28908 . -1) (undo-tree-id28909 . -1) (undo-tree-id28910 . -1) (undo-tree-id28911 . -1) (undo-tree-id28912 . -1) (undo-tree-id28913 . -1) (undo-tree-id28914 . -1) (undo-tree-id28915 . -1) (undo-tree-id28916 . -1) (undo-tree-id28917 . -1) (undo-tree-id28918 . -1) (undo-tree-id28919 . -1) (undo-tree-id28920 . -1) (undo-tree-id28921 . -1) (undo-tree-id28922 . -1) (undo-tree-id28923 . -1) (undo-tree-id28924 . -1) (undo-tree-id28925 . -1) (undo-tree-id28926 . -1) (undo-tree-id28927 . -1) (undo-tree-id28928 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -6610) (undo-tree-id28929 . -1) (undo-tree-id28930 . -1) (undo-tree-id28931 . -1) (undo-tree-id28932 . -1) (undo-tree-id28933 . -1) (undo-tree-id28934 . -1) (undo-tree-id28935 . -1) (undo-tree-id28936 . -1) (undo-tree-id28937 . -1) (undo-tree-id28938 . -1) (undo-tree-id28939 . -1) (undo-tree-id28940 . -1) (undo-tree-id28941 . -1) (undo-tree-id28942 . -1) (undo-tree-id28943 . -1) (undo-tree-id28944 . -1) (undo-tree-id28945 . -1) (undo-tree-id28946 . -1) (undo-tree-id28947 . -1) (undo-tree-id28948 . -1) (undo-tree-id28949 . -1) (undo-tree-id28950 . -1) (undo-tree-id28951 . -1) (undo-tree-id28952 . -1) (undo-tree-id28953 . -1) (undo-tree-id28954 . -1) (undo-tree-id28955 . -1) (undo-tree-id28956 . -1) (undo-tree-id28957 . -1) (undo-tree-id28958 . -1) (undo-tree-id28959 . -1) (undo-tree-id28960 . -1) (undo-tree-id28961 . -1) (undo-tree-id28962 . -1) (undo-tree-id28963 . -1) (undo-tree-id28964 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -6611) (undo-tree-id28965 . -1) (undo-tree-id28966 . -1) (undo-tree-id28967 . -1) (undo-tree-id28968 . -1) (undo-tree-id28969 . -1) (undo-tree-id28970 . -1) (undo-tree-id28971 . -1) (undo-tree-id28972 . -1) (undo-tree-id28973 . -1) (undo-tree-id28974 . -1) (undo-tree-id28975 . -1) (undo-tree-id28976 . -1) (undo-tree-id28977 . -1) (undo-tree-id28978 . -1) (undo-tree-id28979 . -1) (undo-tree-id28980 . -1) (undo-tree-id28981 . -1) (undo-tree-id28982 . -1) (undo-tree-id28983 . -1) (undo-tree-id28984 . -1) (undo-tree-id28985 . -1) (undo-tree-id28986 . -1) (undo-tree-id28987 . -1) (undo-tree-id28988 . -1) (undo-tree-id28989 . -1) (undo-tree-id28990 . -1) (undo-tree-id28991 . -1) (undo-tree-id28992 . -1) (undo-tree-id28993 . -1) (undo-tree-id28994 . -1) (undo-tree-id28995 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -6612) (undo-tree-id28996 . -1) (undo-tree-id28997 . -1) (undo-tree-id28998 . -1) (undo-tree-id28999 . -1) (undo-tree-id29000 . -1) (undo-tree-id29001 . -1) (undo-tree-id29002 . -1) (undo-tree-id29003 . -1) (undo-tree-id29004 . -1) (undo-tree-id29005 . -1) (undo-tree-id29006 . -1) (undo-tree-id29007 . -1) (undo-tree-id29008 . -1) (undo-tree-id29009 . -1) (undo-tree-id29010 . -1) (undo-tree-id29011 . -1) (undo-tree-id29012 . -1) (undo-tree-id29013 . -1) (undo-tree-id29014 . -1) (undo-tree-id29015 . -1) (undo-tree-id29016 . -1) (undo-tree-id29017 . -1) (undo-tree-id29018 . -1) (undo-tree-id29019 . -1) (undo-tree-id29020 . -1) (undo-tree-id29021 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -6613) (undo-tree-id29022 . -1) (undo-tree-id29023 . -1) (undo-tree-id29024 . -1) (undo-tree-id29025 . -1) (undo-tree-id29026 . -1) (undo-tree-id29027 . -1) (undo-tree-id29028 . -1) (undo-tree-id29029 . -1) (undo-tree-id29030 . -1) (undo-tree-id29031 . -1) (undo-tree-id29032 . -1) (undo-tree-id29033 . -1) (undo-tree-id29034 . -1) (undo-tree-id29035 . -1) (undo-tree-id29036 . -1) (undo-tree-id29037 . -1) (undo-tree-id29038 . -1) (undo-tree-id29039 . -1) (undo-tree-id29040 . -1) (undo-tree-id29041 . -1) (undo-tree-id29042 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -6614) (undo-tree-id29043 . -1) (undo-tree-id29044 . -1) (undo-tree-id29045 . -1) (undo-tree-id29046 . -1) (undo-tree-id29047 . -1) (undo-tree-id29048 . -1) (undo-tree-id29049 . -1) (undo-tree-id29050 . -1) (undo-tree-id29051 . -1) (undo-tree-id29052 . -1) (undo-tree-id29053 . -1) (undo-tree-id29054 . -1) (undo-tree-id29055 . -1) (undo-tree-id29056 . -1) (undo-tree-id29057 . -1) (undo-tree-id29058 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -6615) (undo-tree-id29059 . -1) (undo-tree-id29060 . -1) (undo-tree-id29061 . -1) (undo-tree-id29062 . -1) (undo-tree-id29063 . -1) (undo-tree-id29064 . -1) (undo-tree-id29065 . -1) (undo-tree-id29066 . -1) (undo-tree-id29067 . -1) (undo-tree-id29068 . -1) (undo-tree-id29069 . -1) 6616) nil (26715 44348 55712 835000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6610) (undo-tree-id29305 . -4) (undo-tree-id29306 . -4) (undo-tree-id29307 . -4) (undo-tree-id29308 . -4) (undo-tree-id29309 . -4) (undo-tree-id29310 . -4) (undo-tree-id29311 . -4) (undo-tree-id29312 . -4) (undo-tree-id29313 . -4) (undo-tree-id29314 . -4) (undo-tree-id29315 . -4) (undo-tree-id29316 . -4) (undo-tree-id29317 . -4) (undo-tree-id29318 . -4) (undo-tree-id29319 . -4) (undo-tree-id29320 . -4) (undo-tree-id29321 . -4) (undo-tree-id29322 . -4) (undo-tree-id29323 . -4) (undo-tree-id29324 . -4) (undo-tree-id29325 . -4) (undo-tree-id29326 . -4) (undo-tree-id29327 . -4) (undo-tree-id29328 . -4) (undo-tree-id29329 . -4) (undo-tree-id29330 . -4) (undo-tree-id29331 . -4) (undo-tree-id29332 . -4) (undo-tree-id29333 . -4) (undo-tree-id29334 . -4) (undo-tree-id29335 . -4) (undo-tree-id29336 . -4) (undo-tree-id29337 . -4) (undo-tree-id29338 . -4) (undo-tree-id29339 . -4) (undo-tree-id29340 . -4) (undo-tree-id29341 . -4) (undo-tree-id29342 . -4) (undo-tree-id29343 . -4) (undo-tree-id29344 . -4) (undo-tree-id29345 . -4) (undo-tree-id29346 . -4) (undo-tree-id29347 . -4) (undo-tree-id29348 . -4) (undo-tree-id29349 . -4) (undo-tree-id29350 . -4) (undo-tree-id29351 . -4) (undo-tree-id29352 . -4) (undo-tree-id29353 . -4) (undo-tree-id29354 . -4) (undo-tree-id29355 . -4) (undo-tree-id29356 . -4) (undo-tree-id29357 . -4) (undo-tree-id29358 . -4) (undo-tree-id29359 . -4) (undo-tree-id29360 . -4) (undo-tree-id29361 . -4) (undo-tree-id29362 . -4) (undo-tree-id29363 . -4) (undo-tree-id29364 . -4) (undo-tree-id29365 . -4) (undo-tree-id29366 . -4) (undo-tree-id29367 . -4) (undo-tree-id29368 . -4) (undo-tree-id29369 . -4) (undo-tree-id29370 . -4) (undo-tree-id29371 . -4) (undo-tree-id29372 . -4) (undo-tree-id29373 . -4) (undo-tree-id29374 . -4) (undo-tree-id29375 . -4) (undo-tree-id29376 . -4) (undo-tree-id29377 . -4) (undo-tree-id29378 . -4) (undo-tree-id29379 . -4) (undo-tree-id29380 . -4) (undo-tree-id29381 . -4) (undo-tree-id29382 . -4) (undo-tree-id29383 . -4) (undo-tree-id29384 . -4) (undo-tree-id29385 . -4) (undo-tree-id29386 . -4) (undo-tree-id29387 . -4) (undo-tree-id29388 . -4) (undo-tree-id29389 . -4) (undo-tree-id29390 . -4) 6614 (t 26715 44348 80354 514000)) nil (26715 44366 341849 15000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -6610) (undo-tree-id29265 . -1) (undo-tree-id29266 . -1) (undo-tree-id29267 . -1) (undo-tree-id29268 . -1) (undo-tree-id29269 . -1) (undo-tree-id29270 . -1) (undo-tree-id29271 . -1) (undo-tree-id29272 . -1) (undo-tree-id29273 . -1) (undo-tree-id29274 . -1) (undo-tree-id29275 . -1) (undo-tree-id29276 . -1) (undo-tree-id29277 . -1) (undo-tree-id29278 . -1) (undo-tree-id29279 . -1) (undo-tree-id29280 . -1) (undo-tree-id29281 . -1) (undo-tree-id29282 . -1) (undo-tree-id29283 . -1) (undo-tree-id29284 . -1) (undo-tree-id29285 . -1) (undo-tree-id29286 . -1) (undo-tree-id29287 . -1) (undo-tree-id29288 . -1) (undo-tree-id29289 . -1) (undo-tree-id29290 . -1) (undo-tree-id29291 . -1) (undo-tree-id29292 . -1) (undo-tree-id29293 . -1) (undo-tree-id29294 . -1) (undo-tree-id29295 . -1) (undo-tree-id29296 . -1) (undo-tree-id29297 . -1) (#("
" 0 1 (fontified t rear-nonsticky t)) . -6611) (undo-tree-id29298 . -1) (undo-tree-id29299 . -1) (undo-tree-id29300 . -1) (undo-tree-id29301 . -1) (undo-tree-id29302 . -1) (undo-tree-id29303 . -1) (undo-tree-id29304 . -1) 6612) nil (26715 44366 341797 182000) 0 nil])
([nil nil ((6610 . 6615) (t 26715 44366 367833 426000)) nil (26715 44469 314349 792000) 0 nil])
([nil nil ((6615 . 6631)) nil (26715 44469 314349 398000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -6630) (undo-tree-id29395 . -1) 6631) nil (26715 44469 314348 835000) 0 nil])
([nil nil ((6630 . 6634)) nil (26715 44469 314347 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6632) (undo-tree-id29393 . -1) (#("," 0 1 (fontified t)) . -6633) (undo-tree-id29394 . -1) 6634) nil (26715 44469 314347 178000) 0 nil])
([nil nil ((6632 . 6640)) nil (26715 44469 314345 434000) 0 nil])
([nil nil ((6615 . 6619)) nil (26715 44469 314345 135000) 0 nil])
([nil nil ((6644 . 6645)) nil (26715 44469 314344 777000) 0 nil])
([nil nil ((6615 . 6617)) nil (26715 44469 314344 460000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -6615) (undo-tree-id29391 . -1) (#("n" 0 1 (fontified t)) . -6616) (undo-tree-id29392 . -1) 6617) nil (26715 44469 314343 638000) 0 nil])
([nil nil ((6615 . 6631)) nil (26715 44469 314334 439000) 0 nil])
([nil nil ((6661 . 6682)) nil (26715 44469 314334 51000) 0 nil])
([nil nil ((6682 . 6683)) nil (26715 44469 314333 519000) 0 nil])
([nil nil ((6630 . 6637)) nil (26715 44469 314332 828000) 0 nil])
([nil nil ((6690 . 6691) 6637) nil (26715 44469 314328 855000) 0 nil])
([nil nil ((#("JOIN" 0 4 (fontified t)) . -6633) (undo-tree-id29422 . -4) (undo-tree-id29423 . -4) (undo-tree-id29424 . -4) (undo-tree-id29425 . -4) (undo-tree-id29426 . -4) (undo-tree-id29427 . -4) (undo-tree-id29428 . -4) (undo-tree-id29429 . -4) (undo-tree-id29430 . -4) (undo-tree-id29431 . -4) (undo-tree-id29432 . -4) (undo-tree-id29433 . -4) (undo-tree-id29434 . -4) 6637 (t 26715 44469 339500 237000)) nil (26715 44472 875918 858000) 0 nil])
([nil nil ((6633 . 6638)) nil (26715 44472 875911 418000) 0 nil])
([nil nil ((#("JOIN(" 0 5 (fontified t)) . -6633) (undo-tree-id29396 . -1) (undo-tree-id29397 . -1) (undo-tree-id29398 . -1) (undo-tree-id29399 . -1) (undo-tree-id29400 . -1) (undo-tree-id29401 . -2) (undo-tree-id29402 . -2) (undo-tree-id29403 . -2) (undo-tree-id29404 . -2) (undo-tree-id29405 . -2) (undo-tree-id29406 . -3) (undo-tree-id29407 . -3) (undo-tree-id29408 . -3) (undo-tree-id29409 . -3) (undo-tree-id29410 . -3) (undo-tree-id29411 . -4) (undo-tree-id29412 . -4) (undo-tree-id29413 . -4) (undo-tree-id29414 . -4) (undo-tree-id29415 . -4) (undo-tree-id29416 . -5) (undo-tree-id29417 . -5) (undo-tree-id29418 . -5) (undo-tree-id29419 . -5) (undo-tree-id29420 . -5) (undo-tree-id29421 . -5) 6638) nil (26715 44472 875910 267000) 0 nil])
([nil nil ((6633 . 6638)) nil (26715 44472 875885 281000) 0 nil])
([nil nil ((6691 . 6692)) nil (26715 44472 875881 571000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -6666) (undo-tree-id29435 . -1) 6667 (t 26715 44472 901591 656000)) nil (26715 44504 662722 399000) 0 nil])
([nil nil ((6666 . 6667)) nil (26715 44504 662711 402000) 0 nil])
([nil nil ((#("65" 0 2 (fontified t)) . -6658) (undo-tree-id29437 . -2) (undo-tree-id29438 . -2) (undo-tree-id29439 . -2) (undo-tree-id29440 . -2) (undo-tree-id29441 . -2) (undo-tree-id29442 . -2) (undo-tree-id29443 . -2) (undo-tree-id29444 . -2) (undo-tree-id29445 . -2) 6660 (t 26715 44504 690405 228000)) nil (26715 44508 507633 372000) 0 nil])
([nil nil ((6658 . 6660)) nil (26715 44508 507626 156000) 0 nil])
([nil nil ((#("65" 0 2 (fontified t)) . -6662) (undo-tree-id29436 . -2) 6664) nil (26715 44508 507625 108000) 0 nil])
([nil nil ((6662 . 6664)) nil (26715 44508 507613 161000) 0 nil])
([nil current ((nil rear-nonsticky nil 6797 . 6798) (nil fontified nil 6796 . 6798) (nil fontified nil 6788 . 6796) (nil fontified nil 6779 . 6788) (nil fontified nil 6777 . 6779) (nil fontified nil 6774 . 6777) (nil fontified nil 6772 . 6774) (nil fontified nil 6771 . 6772) (nil fontified nil 6770 . 6771) (nil fontified nil 6769 . 6770) (nil fontified nil 6765 . 6769) (nil fontified nil 6759 . 6765) (nil fontified nil 6758 . 6759) (nil fontified nil 6754 . 6758) (nil fontified nil 6752 . 6754) (nil fontified nil 6751 . 6752) (nil fontified nil 6750 . 6751) (nil fontified nil 6745 . 6750) (nil fontified nil 6741 . 6745) (nil fontified nil 6740 . 6741) (nil fontified nil 6739 . 6740) (nil fontified nil 6730 . 6739) (nil fontified nil 6725 . 6730) (nil fontified nil 6724 . 6725) (nil fontified nil 6723 . 6724) (nil fontified nil 6722 . 6723) (nil fontified nil 6717 . 6722) (nil fontified nil 6707 . 6717) (nil fontified nil 6706 . 6707) (nil fontified nil 6704 . 6706) (nil fontified nil 6703 . 6704) (nil fontified nil 6702 . 6703) (nil fontified nil 6697 . 6702) (nil fontified nil 6693 . 6697) (6693 . 6798) (t 26715 44508 537503 418000)) nil (26715 44519 128160 268000) 0 nil])
nil
